{
  "version": 3,
  "sources": ["src/app/main/operation/consignment/download-template/download-template.component.ts", "src/app/main/operation/consignment/download-template/download-template.component.html", "src/app/main/operation/consignment/consignment.component.ts", "src/app/main/operation/consignment/consignment.component.html", "src/app/main/operation/consignment/consignment-new/dimension/dimension.component.ts", "src/app/main/operation/consignment/consignment-new/dimension/dimension.component.html", "src/app/main/operation/consignment/consignment-new/image-upload/image-upload.component.ts", "src/app/main/operation/consignment/consignment-new/image-upload/image-upload.component.html", "src/app/main/operation/consignment/consignment-new/item-details/item-details.component.ts", "src/app/main/operation/consignment/consignment-new/item-details/item-details.component.html", "src/app/main/operation/consignment/consignment-new/consignment-status-popup/consignment-status-popup.component.ts", "src/app/main/operation/consignment/consignment-new/consignment-status-popup/consignment-status-popup.component.html", "src/app/main/operation/consignment/consignment-new/consignment-new.component.ts", "src/app/main/operation/consignment/consignment-new/consignment-new.component.html", "src/app/main/operation/operation-routing.module.ts", "src/app/main/operation/operation.module.ts"],
  "sourcesContent": ["import { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { ConsignorService } from '../../../master/consignor/consignor.service';\r\nimport { CustomerService } from '../../../master/customer/customer.service';\r\nimport { ConsignmentService } from '../consignment.service';\r\nimport { ProductService } from '../../../id-masters/product/product.service';\r\n\r\n@Component({\r\n  selector: 'app-download-template',\r\n  templateUrl: './download-template.component.html',\r\n  styleUrl: './download-template.component.scss'\r\n})\r\nexport class DownloadTemplateComponent {\r\n\r\n  partnerType: any[] = [];\r\n  creationType: any[] = [];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DownloadTemplateComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ConsignmentService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    public customerService: CustomerService,\r\n    public consignorService: ConsignorService,\r\n    public productService: ProductService,\r\n  ) {\r\n    this.partnerType = [\r\n      { value: 'customer', label: 'Customer' },\r\n      { value: 'consignor', label: 'Consignor' }\r\n    ];\r\n    this.creationType = [\r\n      { value: 'Single', label: 'Single' },\r\n      { value: 'Bulk', label: 'Bulk' }\r\n    ];\r\n   }\r\n\r\n   form = this.fb.group({\r\n    partnerType: ['', ],\r\n    partnerId: ['', ],\r\n    creationType: ['Single', Validators.required],\r\n    consignorId: [],\r\n    customerId: [],\r\n    productId: [''],\r\n    productName: [''],\r\n    fileName: [''],\r\n  });\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  partnerNameList: any[] = [];\r\n  productNameList: any[] = [];\r\n\r\n  partnerTypeChanged() {\r\n    if (this.form.controls.partnerType.value == 'customer') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n\r\n      this.partnerNameList = [];\r\n      this.productNameList = [];\r\n\r\n      this.spin.show();\r\n      this.customerService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.partnerNameList = this.cas.foreachlist(result, { key: 'customerId', value: 'customerName', value2: 'productName' });\r\n          this.partnerNameList =  this.cs.removeDuplicatesFromArrayList( this.partnerNameList, ['value']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.form.controls.partnerType.value == 'consignor') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n\r\n      this.partnerNameList = [];\r\n      this.productNameList = [];\r\n\r\n      this.spin.show();\r\n      this.consignorService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.partnerNameList = this.cas.foreachlist(result, { key: 'consignorId', value: 'consignorName', value2: 'productName' });\r\n          this.partnerNameList =  this.cs.removeDuplicatesFromArrayList( this.partnerNameList, ['value']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  partnerChanged() {\r\n    if (this.form.controls.partnerType.value == 'customer') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n\r\n      this.productNameList = [];\r\n      \r\n      this.spin.show();\r\n      this.customerService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.productNameList = this.cas.foreachlistWithoutKey(result, {key: 'productId', value: 'productName'});\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n\r\n    // console.log(this.form.controls.partnerType.value)\r\n\r\n    if (this.form.controls.partnerType.value == 'consignor') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n\r\n      this.productNameList = [];\r\n\r\n      this.spin.show();\r\n      this.consignorService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.productNameList = this.cas.foreachlistWithoutKey(result, {key: 'productId', value: 'productName'});\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  submitted = false\r\n\r\n  save(){\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.dialogRef.close(this.form.getRawValue());\r\n  }\r\n\r\n\r\n  productChanged(){\r\n    const selectedPartner = this.partnerNameList.find(value => value.value === this.form.controls.productId.value);\r\n    this.form.controls.productName.patchValue(selectedPartner.value2);\r\n    if(selectedPartner.value2 == '1 - INTERNATIONALINBOUND'){\r\n      this.form.controls.fileName.patchValue('1_-_INTERNATIONALINBOUND.xlsx');\r\n    }\r\n    if(selectedPartner.value2 == '2 - INTERNATIONALOUTBOUND'){\r\n      this.form.controls.fileName.patchValue('2_-_INTERNATIONALOUTBOUND.xlsx');\r\n    }\r\n    if(selectedPartner.value2 == '3 - DOMESTIC'){\r\n      this.form.controls.fileName.patchValue('3_-_DOMESTIC.xlsx');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n", "<div class=\"bgWhite text-black w-93 h-100 m-4 mt-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Create Consignment</p>\r\n    </div>\r\n    <div class=\"mt-4 pt-2\">\r\n        <form [formGroup]=\"form\">\r\n            <div class=\"d-flex-row\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"creationType\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0 \">Creation Type</p>\r\n                        <p-dropdown formControlName=\"creationType\" [options]=\"creationType\" appendTo=\"body\"\r\n                            [ngClass]=\"form.get('creationType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" placeholder=\"Select\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"partnerType\" *ngIf=\"this.form.controls.creationType.value == 'Bulk'\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0 \">Partner Type</p>\r\n                        <p-dropdown formControlName=\"partnerType\" [options]=\"partnerType\" appendTo=\"body\"\r\n                            [ngClass]=\"form.get('partnerType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" placeholder=\"Select\"\r\n                            (onChange)=\"partnerTypeChanged()\" />\r\n                    </div>\r\n\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"partnerId\" *ngIf=\"this.form.controls.creationType.value == 'Bulk'\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0 \">Partner</p>\r\n                        <p-dropdown [options]=\"partnerNameList\" placeholder=\"Select\" filter=\"true\" #partnerChange\r\n                            formControlName=\"partnerId\" (onChange)=\"partnerChanged()\"\r\n                            [ngClass]=\"form.get('partnerId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"productId\" *ngIf=\"this.form.controls.creationType.value == 'Bulk'\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0 \">Product</p>\r\n                        <p-dropdown [options]=\"productNameList\" placeholder=\"Select\" filter=\"true\" #productChange\r\n                            formControlName=\"productId\" (onChange)=\"productChanged()\"\r\n                            [ngClass]=\"form.get('productName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n\r\n                    <!-- <div class=\"col-6 marginFieldNew borderRadius12\" id=\"productName\" *ngIf=\"this.form.controls.creationType.value == 'Bulk'\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Product</p>\r\n                        <input maxlength=\"50\" formControlName=\"productName\"\r\n                            [ngClass]=\"form.get('productName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"d-flex float-right py-2\">\r\n                    <button mat-dialog-close class=\"buttom1 textBlack mx-1\">Cancel</button>\r\n                    <button type=\"button\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.form.controls.creationType.value == 'Single' ? 'Create' : 'Download'}}</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n", "import { Component, ViewChild } from '@angular/core';\r\nimport { ConsignmentService } from './consignment.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AuthService } from '../../../core/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ConsignmentLabelComponent } from '../../pdf/consignment-label/consignment-label.component';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { OverlayPanel } from 'primeng/overlaypanel';\r\nimport { ConsignmentUpdatebulkComponent } from './consignment-updatebulk/consignment-updatebulk.component';\r\nimport { DownloadTemplateComponent } from './download-template/download-template.component';\r\n\r\n@Component({\r\n  selector: 'app-consignment',\r\n  templateUrl: './consignment.component.html',\r\n  styleUrl: './consignment.component.scss'\r\n})\r\nexport class ConsignmentComponent {\r\n  consignmentTable: any[] = [];\r\n  selectedConsignment: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ConsignmentService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe, private auth: AuthService,\r\n    private spin: NgxSpinnerService,\r\n    private pdf: ConsignmentLabelComponent,\r\n    private fb: FormBuilder,\r\n    private label: ConsignmentLabelComponent,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Operations', 'Consignment '];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n\r\n      { field: 'houseAirwayBill', header: 'Consignment No', format:'hyperLink', style: 'min-width: 5rem' },\r\n      { field: 'hawbTypeDescription', header: 'Status', style: 'min-width: 5rem' },\r\n       { field: 'hawbTimeStamp', header: 'Time', format: 'date', style: 'min-width: 5rem' },\r\n      { field: 'partnerName', header: 'Partner', style: 'min-width: 5rem' },\r\n      { field: 'productName', header: 'Product', style: 'min-width: 10rem' },\r\n   //   { field: 'subProductName', header: 'Sub Product', style: 'min-width: 10rem' },\r\n      { field: 'countryOfOrigin', header: 'Origin', style: 'min-width: 5rem' },\r\n      { field: 'countryOfDestination', header: 'Destination', style: 'min-width: 5rem' },\r\n      { field: 'serviceTypeText', header: 'Service Type', style: 'min-width: 5rem' },\r\n      { field: 'paymentType', header: 'Payment Type', style: 'min-width: 5rem' },\r\n      { field: 'incoTerms', header: 'Inco Terms', style: 'min-width: 5rem' },\r\n      { field: 'createdBy', header: 'Created By', style: 'min-width: 5rem' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'countryId', header: 'Country ID' },\r\n      { field: 'countryName', header: 'Country Name' },\r\n      { field: 'provinceId', header: 'Province ID' },\r\n      { field: 'provinceName', header: 'Province Name' },\r\n      { field: 'districtId', header: 'District ID' },\r\n      { field: 'districtName', header: 'District Name' },\r\n      { field: 'cityId', header: 'City ID' },\r\n      { field: 'cityName', header: 'City Name' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    setTimeout(() => {\r\n    this.spin.show();\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    this.service.search(obj).subscribe({\r\n      next: (res: any) => {\r\n        this.consignmentTable = res;\r\n        this.getSearchDropdown();\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }, 2000);\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedConsignment[this.selectedConsignment.length - 1];\r\n    this.selectedConsignment.length = 0;\r\n    this.selectedConsignment.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignment[0]);\r\n      }\r\n    });\r\n  }\r\n  updateBulk(){\r\n    const dialogRef = this.dialog.open(ConsignmentUpdatebulkComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {title: 'Consignment',code :  this.selectedConsignment} ,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      this.initialCall();\r\n    });\r\n}\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if(linedata){\r\n      this.selectedConsignment = linedata;\r\n    }\r\n    if (this.selectedConsignment.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedConsignment[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/operation/consignment-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedConsignment.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '60%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedConsignment,\r\n        module: 'Consignment',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignment);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail:  'Selected records deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.consignmentTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          exportItem[col.header] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.header] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Consignment');\r\n  }\r\n\r\n  downloadLabel(line: any, type: any) {\r\n    this.pdf.generatePdfBarocde(line, type);\r\n  }\r\n\r\n  selectedFiles: File | null = null;\r\n  onFileSelected(event: any): void {\r\n    const file: File = event.target.files[0];\r\n    console.log(event.target.files)\r\n    this.selectedFiles = file;\r\n    console.log( this.selectedFiles)\r\n    this.spin.show();\r\n    this.service.uploadConsignment(this.selectedFiles).subscribe({\r\n      next: (result) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Uploaded',\r\n          key: 'br',\r\n          detail: 'File uploaded successfully',\r\n        });\r\n        this.selectedFiles = null;\r\n        this.clearFileInput(event.target); \r\n        this.initialCall();\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.selectedFiles = null;\r\n        this.clearFileInput(event.target); \r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  clearFileInput(input: HTMLInputElement): void {\r\n    input.value = ''; // Reset the value of the file input field\r\n  }\r\n  ///  Filter Code\r\n\r\n  searchform = this.fb.group({\r\n    houseAirwayBill: [],\r\n    masterAirwayBill: [],\r\n    partnerId: [],\r\n    pieceId: [],\r\n    pieceItemId: [],\r\n    shipperId: [],\r\n    statusId: [],\r\n    companyId: [[this.auth.companyId],],\r\n    languageId: [[this.auth.languageId],]\r\n  })\r\n\r\n  readonly fieldDisplayNames: Record<string, string> = {\r\n    houseAirwayBill: 'Consignment No',\r\n    masterAirwayBill: 'MAWB',\r\n    partnerId: 'Partner',\r\n    pieceId: 'Piece',\r\n    pieceItemId: 'Piece Item',\r\n    shipperId: 'Shipper',\r\n    statusId: 'Status'\r\n  };\r\n\r\n  houseAirwayBillDropdown: any = [];\r\n  masterAirwayBillDropdown: any = [];\r\n  partnerDropdown: any = [];\r\n  statusDropdown: any = [];\r\n\r\n  getSearchDropdown() {\r\n\r\n    this.consignmentTable.forEach(res => {\r\n\r\n      if (res.houseAirwayBill != null) {\r\n        this.houseAirwayBillDropdown.push({ value: res.houseAirwayBill, label: res.houseAirwayBill });\r\n        this.houseAirwayBillDropdown = this.cs.removeDuplicatesFromArrayList(this.houseAirwayBillDropdown, 'value');\r\n      }\r\n      if (res.partnerId != null) {\r\n        this.partnerDropdown.push({ value: res.partnerId, label: res.partnerName });\r\n        this.partnerDropdown = this.cs.removeDuplicatesFromArrayList(this.partnerDropdown, 'value');\r\n      }\r\n      if (res.masterAirwayBill != null) {\r\n        this.masterAirwayBillDropdown.push({ value: res.masterAirwayBill, label: res.masterAirwayBill });\r\n        this.masterAirwayBillDropdown = this.cs.removeDuplicatesFromArrayList(this.masterAirwayBillDropdown, 'value');\r\n      }\r\n      if (res.statusId != null) {\r\n        this.statusDropdown.push({ value: res.statusId, label: res.statusDescription });\r\n        this.statusDropdown = this.cs.removeDuplicatesFromArrayList(this.statusDropdown, 'value');\r\n      }\r\n    })\r\n    //  this.statusDropdown = [{ value: '17', label: 'Inactive' }, { value: '16', label: 'Active' }];\r\n  }\r\n\r\n  @ViewChild('consignment') overlayPanel!: OverlayPanel;\r\n  closeOverLay() {\r\n    this.overlayPanel.hide();\r\n  }\r\n\r\n  fieldsWithValue: any\r\n  search() {\r\n    this.fieldsWithValue = null;\r\n    const formValues = this.searchform.value;\r\n    this.fieldsWithValue = Object.keys(formValues)\r\n      .filter(key => formValues[key as keyof typeof formValues] !== null && formValues[key as keyof typeof formValues] !== undefined && key !== 'companyId' && key !== 'languageId')\r\n      .map(key => this.fieldDisplayNames[key] || key);\r\n\r\n    this.spin.show();\r\n    this.service.search(this.searchform.getRawValue()).subscribe({\r\n      next: (res: any) => {\r\n        this.consignmentTable = res;\r\n        this.spin.hide();\r\n        this.overlayPanel.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.searchform.reset();\r\n    this.searchform = this.fb.group({\r\n      houseAirwayBill: [],\r\n      masterAirwayBill: [],\r\n      partnerId: [],\r\n      pieceId: [],\r\n      pieceItemId: [],\r\n      shipperId: [],\r\n      statusId: [],\r\n      companyId: [[this.auth.companyId],],\r\n      languageId: [[this.auth.languageId],]\r\n    })\r\n    this.search();\r\n  }\r\n\r\n  chipClear(value: any) {\r\n    const formControlKey = Object.keys(this.fieldDisplayNames).find(key => this.fieldDisplayNames[key] === value.value);\r\n    if (formControlKey) {\r\n      this.searchform.get(formControlKey)?.reset();\r\n      this.search();\r\n    }\r\n  }\r\n  isSelected(item: any): boolean {\r\n    return this.selectedConsignment.includes(item);\r\n  }\r\n\r\n  uniqueHouseAirway:any[] = [];\r\n  generateInvoice(){\r\n    this.uniqueHouseAirway = [];\r\n    if (this.selectedConsignment.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any row' });\r\n      return\r\n    }\r\n    this.uniqueHouseAirway = this.selectedConsignment.map(item => item.houseAirwayBill);\r\n    this.label.getResultInvoice(this.uniqueHouseAirway)\r\n  }\r\n\r\n\r\n  uniquePieceId:any[] = [];\r\n  generateLabel(){\r\n    this.uniquePieceId = [];\r\n    if (this.selectedConsignment.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any row' });\r\n      return\r\n    }\r\n    this.uniqueHouseAirway = this.selectedConsignment.map(item => item.houseAirwayBill);\r\n    this.label.getResultLabelFromConsignment(this.uniqueHouseAirway)\r\n  }\r\n\r\n  downloadTemplate(){\r\n    const dialogRef = this.dialog.open(DownloadTemplateComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if(result){\r\n        if(result.creationType == 'Single'){\r\n          this.openCrud('New')\r\n        }else{\r\n          let obj: any = {};\r\n          obj.value = {imageRefId: result.fileName, referenceImageUrl: '/consignment/templates/'}\r\n          this.label.downloadDocument(obj);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignment </p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <input type=\"file\" #fileInput style=\"display:none\" (change)=\"onFileSelected($event)\" />\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"op.toggle($event)\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <p-overlayPanel [style]=\"{ width: '180' }\" #op>\r\n                <div class=\"d-flex flex-column\">\r\n                    <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"op.hide(); fileInput.click()\"><img\r\n                            src=\"./assets/common/upload.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                            srcset=\"\">Upload</button>\r\n                    <!-- <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"op.hide(); updateBulk()\"><img\r\n                                src=\"./assets/common/upload.png\" style=\"padding-right: 10px;width: 2rem;\" srcset=\"\">Bulk Update</button> -->\r\n                    <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"generateLabel()\"><img\r\n                            src=\"./assets/common/document.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                            srcset=\"\">Label</button>\r\n                    <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"generateInvoice()\"><img\r\n                            src=\"./assets/common2x/invoice.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                            srcset=\"\">Invoice</button>\r\n                </div>\r\n            </p-overlayPanel>\r\n            <button (click)=\"downloadTemplate()\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-start align-items-center\"\r\n        style=\"margin-bottom: 1.1rem !important;margin-top: 0.8rem;\">\r\n        <p-iconField iconPosition=\"right\" class=\"mr-2\">\r\n            <p-inputIcon type=\"button\" (click)=\"consignment.toggle($event)\" styleClass=\"pi pi-filter\" />\r\n            <input type=\"text\" id=\"toolInput1\" pInputText placeholder=\"Advance filter\"\r\n                (input)=\"consignmentTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n        </p-iconField>\r\n\r\n        <p-overlayPanel [dismissable]=\"false\" appendTo=\"body\" [style]=\"{ width: '80vw'}\"\r\n            [styleClass]=\"'custom-overlay-panel'\" #consignment>\r\n            <form [formGroup]=\"searchform\" style=\"padding: 2rem;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-3 mb-3 borderRadius12\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">MAWB</p>\r\n                        <p-multiSelect placeholder=\"Select\" filter=\"true\" [options]=\"masterAirwayBillDropdown\"\r\n                            formControlName=\"masterAirwayBill\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                            [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n                    <div class=\"col-3 mb-3 borderRadius12\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">HAWB</p>\r\n                        <p-multiSelect placeholder=\"Select\" filter=\"true\" [options]=\"houseAirwayBillDropdown\"\r\n                            formControlName=\"houseAirwayBill\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                            [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n                    <div class=\"col-3 mb-3 borderRadius12\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Partner</p>\r\n                        <p-multiSelect placeholder=\"Select\" filter=\"true\" [options]=\"partnerDropdown\"\r\n                            formControlName=\"partnerId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                            [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n                    <div class=\"col-3 mb-3 borderRadius12\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                        <p-multiSelect placeholder=\"Select\" filter=\"true\" [options]=\"statusDropdown\"\r\n                            formControlName=\"statusId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                            [panelStyle]=\"{'width':'100%'}\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <img type=\"button\" (click)=\"reset()\" src=\"./assets/common/reset.png\" alt=\"\" srcset=\"\">\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"buttom1 textBlack mx-1\" (click)=\"closeOverLay()\">Cancel</button>\r\n                        <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"search()\">Apply</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </p-overlayPanel>\r\n\r\n        <p-chips (onRemove)=\"chipClear($event)\" [(ngModel)]=\"fieldsWithValue\" class=\"inputborderLess\" />\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #consignmentTag [columns]=\"cols\" [value]=\"consignmentTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"multiple\" [(selection)]=\"selectedConsignment\" scrollHeight=\"calc(100vh - 20.8rem)\"\r\n            [paginator]=\"true\" [rows]=\"100\" [showCurrentPageReport]=\"true\" sortField=\"consignmentId\" [sortOrder]=\"-1\"\r\n            [tableStyle]=\"{'width': '130rem'}\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\" pFrozenColumn>\r\n                        <p-tableHeaderCheckbox class=\"pl-3\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\r\n                        {{ col.header }} <p-sortIcon [field]=\"col.field\" />\r\n                    </th>\r\n                    <th style=\"width: 5rem;\" pFrozenColumn alignFrozen=\"right\">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\" pFrozenColumn>\r\n                        <p-tableHeaderCheckbox [disabled]=\"true\" class=\"pl-3\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        <input pInputText type=\"text\"\r\n                            (input)=\"consignmentTag.filter($any($event.target)?.value, col.field, 'contains')\"\r\n                            [value]=\"$any(consignmentTag.filters[col.field])?.value\" placeholder=\"Search\"\r\n                            class=\"p-column-filter\">\r\n                    </th>\r\n                    <th style=\"width: 5rem;\" pFrozenColumn alignFrozen=\"right\">\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [ngClass]=\"{'selectedRow': isSelected(rowData)}\">\r\n                    <td style=\"width: 5rem; justify-content: center;\" pFrozenColumn>\r\n                        <p-tableCheckbox class=\"pl-3\" [value]=\"rowData\" />\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\" [style]=\"col.style\">\r\n                        <ng-container *ngIf=\"col.format !== 'date' && col.format !== 'hyperLink'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                        </ng-container>\r\n                        <ng-template #dateTemplate>\r\n                            <span *ngIf=\"col.format == 'hyperLink'\" (click)=\"openCrud('Edit', rowData)\" style=\"cursor:pointer\"\r\n                                class=\"textOrange font-weight-bold hvr-underline-from-center\">{{ rowData[col.field] }}</span>\r\n                            <span *ngIf=\"col.format == 'date'\">{{ rowData[col.field] | date: 'dd-MM-yyyy HH:mm'}}</span>\r\n                        </ng-template>\r\n                    </td>\r\n\r\n                    <td style=\"width: 5rem; justify-content: center;\" pFrozenColumn alignFrozen=\"right\">\r\n                        <img type=\"button\" (click)=\"label.toggle($event)\" src=\"./assets/common/actions.png\" alt=\"\"\r\n                            srcset=\"\" style=\"height: 1.4rem;\">\r\n\r\n                        <p-overlayPanel [style]=\"{ width: '180' }\" #label>\r\n                            <div class=\"d-flex flex-column\">\r\n                                <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                    (click)=\"label.hide(); downloadLabel(rowData, 'download')\"><img\r\n                                        src=\"./assets/common/download.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                                        srcset=\"\">Download</button>\r\n                                <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                    (click)=\"label.hide(); downloadLabel(rowData, 'print')\"><img\r\n                                        src=\"./assets/common/print.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                                        srcset=\"\">Print</button>\r\n                            </div>\r\n                        </p-overlayPanel>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>", "import { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../../common-service/common-service.service';\r\nimport { AuthService } from '../../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-dimension',\r\n  templateUrl: './dimension.component.html',\r\n  styleUrl: './dimension.component.scss'\r\n})\r\nexport class DimensionComponent {\r\n\r\n\r\n\r\n\r\n  form: FormGroup = new FormGroup({});\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DimensionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n  ) { }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n  if(this.data.module == 'piece'){\r\n    this.form = this.fb.group({\r\n      codAmount: [''],\r\n      declaredValue: [''],\r\n      description: [''],\r\n      dimensionUnit: [''],\r\n      height: [''],\r\n      itemDetails: this.fb.array([]),\r\n      length: [''],\r\n      packReferenceNumber: [''],\r\n      partnerType: [''],\r\n      pieceId: [''],\r\n      volume: [''],\r\n      volumeUnit: [''],\r\n      weight: [''],\r\n      weightUnit: [''],\r\n      width: [''],\r\n      hsCode: [''],\r\n      pieceValue: [''],\r\n      pieceCurrency: [''],\r\n    });\r\n  }\r\n  if(this.data.module == 'item'){\r\n    this.form  = this.fb.group({\r\n      codAmount: [],\r\n      declaredValue: [],\r\n      description: [],\r\n      dimensionUnit: [],\r\n      height: [],\r\n      hsCode: [],\r\n      imageRefId: [],\r\n      itemCode: [],\r\n      length: [],\r\n      partnerName: [],\r\n      partnerType: [],\r\n      pieceItemId: [],\r\n      pdfUrl: [],\r\n      volume: [],\r\n      volumeUnit: [],\r\n      weight: [],\r\n      weightUnit: [],\r\n      width: [],\r\n    })\r\n  }\r\n\r\n    this.form.patchValue(this.data.line.value)\r\n    }\r\n\r\nsave() {\r\n  this.dialogRef.close(this.form.value);\r\n}\r\n\r\n\r\ncalculateVolume(formName: any) {\r\n  const volume = formName.controls.length.value as number * formName.controls.width.value as number * formName.controls.height.value as number;\r\n  formName.controls.volume.patchValue(volume);\r\n}\r\n\r\n  }\r\n\r\n\r\n", "<div class=\"bgWhite text-black w-93 h-100 m-4 mt-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Dimension</p>\r\n    </div>\r\n    <div class=\"mt-4 pt-2\">\r\n        <form [formGroup]=\"form\">\r\n            <div class=\"d-flex-row\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"length\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Length</p>\r\n                        <input maxlength=\"50\" pKeyFilter=\"num\"\r\n                            (change)=\"calculateVolume(this.form)\" formControlName=\"length\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"width\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Width</p>\r\n                        <input maxlength=\"50\" pKeyFilter=\"num\"\r\n                            (change)=\"calculateVolume(this.form)\" formControlName=\"width\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"height\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Height</p>\r\n                        <input maxlength=\"50\" pKeyFilter=\"num\"\r\n                            (change)=\"calculateVolume(this.form)\" formControlName=\"height\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"dimensionUnit\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Dimension Unit</p>\r\n                        <input maxlength=\"50\" formControlName=\"dimensionUnit\" class=\" w-100\"\r\n                            pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"volume\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Volume</p>\r\n                        <input maxlength=\"50\" formControlName=\"volume\" class=\" w-100\" pInputText\r\n                            placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"volume\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Volume Unit</p>\r\n                        <input maxlength=\"50\" formControlName=\"volumeUnit\" class=\" w-100\"\r\n                            pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"weight\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Weight</p>\r\n                        <input maxlength=\"50\" formControlName=\"weight\" class=\" w-100\" pInputText\r\n                            placeholder=\"Enter\" />\r\n                    </div>\r\n                    <div class=\"col-6 marginFieldNew borderRadius12\" id=\"weightUnit\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Weight Unit</p>\r\n                        <input maxlength=\"50\" formControlName=\"weightUnit\" class=\" w-100\"\r\n                            pInputText placeholder=\"Enter\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex float-right py-2\" >\r\n                    <button mat-dialog-close class=\"buttom1 textBlack mx-1\"\r\n                    >Cancel</button>\r\n                    <button type=\"button\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">Save</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component, Inject } from '@angular/core';\r\nimport { FormArray, FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../../common-service/common-service.service';\r\nimport { AuthService } from '../../../../../core/core';\r\nimport { ConsignmentService } from '../../consignment.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AnimationStyleMetadata } from '@angular/animations';\r\nimport { ConsignmentLabelComponent } from '../../../../pdf/consignment-label/consignment-label.component';\r\n\r\n@Component({\r\n  selector: 'app-image-upload',\r\n  templateUrl: './image-upload.component.html',\r\n  styleUrl: './image-upload.component.scss'\r\n})\r\nexport class ImageUploadComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ImageUploadComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private sanitizer: DomSanitizer,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private service: ConsignmentService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    private download1: ConsignmentLabelComponent,\r\n  ) { }\r\n\r\n  imageForm = this.fb.group({\r\n    referenceImageList: this.fb.array([]) // Initialize an empty FormArray\r\n  });\r\n\r\n  get imageDetails(): FormArray {\r\n    return this.imageForm.get('referenceImageList') as FormArray;\r\n  }\r\n\r\n\r\n  removeItem(index: number) {\r\n    this.imageDetails.removeAt(index);\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.data)\r\n    this.patchForm(this.data.line.value)\r\n  }\r\n\r\n\r\n\r\n  selectedFiles: FileList | null = null;\r\n  selectFiles(event: any): void {\r\n    this.selectedFiles = event.target.files;\r\n    this.uploadFile(event);\r\n  }\r\n\r\n  imageDetailsTable: any[] = [];\r\n  fileLocation:any;\r\n  uploadFile(event:any) {\r\n    if (!this.selectedFiles || this.selectedFiles.length === 0) {\r\n      console.log('No files selected for upload.');\r\n      return;\r\n    }\r\n  this.fileLocation = '/' +  (new Date().getDate()) +'-'+ (new Date().getMonth() + 1) + '-' + new Date().getFullYear()  + '_' +this.cs.timeFormat(new Date()) + '/';\r\n    this.service.uploadFiles(this.selectedFiles, this.fileLocation).subscribe({\r\n      next: (result) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Updated',\r\n          key: 'br',\r\n          detail: 'File uploaded successfully',\r\n        });\r\n        result.forEach((x:any) => {\r\n          x['referenceImageUrl'] = x.filePath;\r\n          x['imageRefId'] = x.fileName;\r\n        })\r\n        this.patchForm(result);\r\n        this.selectedFiles = null;\r\n        this.clearFileInput(event.target); \r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  clearFileInput(input: HTMLInputElement): void {\r\n    input.value = ''; // Reset the value of the file input field\r\n  }\r\n  \r\n  save() {\r\n    this.dialogRef.close(this.imageForm.controls.referenceImageList.value);\r\n  }\r\n\r\n\r\n  patchForm(shipmentData: any) {\r\n    const itemsArray = this.imageForm.get('referenceImageList') as FormArray;\r\n    shipmentData.forEach((piece: any) => {\r\n      itemsArray.push(this.patchReferenceImages(piece));\r\n    });\r\n    console.log(this.imageForm)\r\n  }\r\n\r\n  patchReferenceImages(image: any) {\r\n    return this.fb.group({\r\n      imageRefId: [image.imageRefId],\r\n      pdfUrl: [image.pdfUrl],\r\n      referenceImageUrl: [image.referenceImageUrl]\r\n    });\r\n  }\r\n\r\n\r\n  download(element:any) {\r\n   this.download1.downloadDocument(element);\r\n  }\r\n}\r\n\r\n\r\n", "<div class=\"bgWhite text-black w-93 h-100 mx-4 my-2 mt-4\">\r\n  <div class=\"d-flex justify-content-between align-items-center\">\r\n    <p class=\"componentHeader f600 mb-0\">Image Upload</p>\r\n    <input type=\"file\" #fileInput multiple style=\"display:none\" (change)=\"selectFiles($event)\" />\r\n    <button (click)=\"fileInput.click()\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n        class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n  </div>\r\n  <div class=\"mt-4 pt-2\">\r\n    <p-table [scrollable]=\"true\" scrollHeight=\"calc(100vh - 24.8rem)\" [value]=\"imageDetails.controls\">\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th>File Name</th>\r\n          <th>Location</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-item let-i=\"rowIndex\" let-rowData>\r\n        <tr [formGroup]=\"item\">\r\n          <td><input class=\"inputborderLess pl-3\" type=\"text\" matInput formControlName=\"imageRefId\"></td>\r\n          <td><input class=\"inputborderLess pl-3\" type=\"text\" formControlName=\"referenceImageUrl\"></td>\r\n          <td style=\"padding-left: 1.5rem !important;\">\r\n            <img type=\"button\" src=\"./assets/common/actions.png\" (click)=\"op.toggle($event)\" alt=\"\" srcset=\"\"\r\n              style=\"height: 1.4rem;\">\r\n            <p-overlayPanel [style]=\"{ width: '180' }\" #op>\r\n              <div class=\"d-flex flex-column\">\r\n                <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"op.hide();removeItem(i)\"><img\r\n                    src=\"./assets/common/delete1x.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                    srcset=\"\">Delete</button>\r\n                <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"op.hide();download(rowData)\"><img\r\n                    src=\"./assets/common/download.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                    srcset=\"\">Download</button>\r\n              </div>\r\n            </p-overlayPanel>\r\n          </td>\r\n\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n  <div class=\"d-flex my-3 justify-content-end\">\r\n    <button class=\"buttom1 textBlack mx-1\" mat-dialog-close>Back</button>\r\n    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">Save</button>\r\n  </div>\r\n</div>", "import { Component, Inject } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../../common-service/common-service.service';\r\nimport { AuthService } from '../../../../../core/core';\r\nimport { ConsignmentService } from '../../consignment.service';\r\nimport { DimensionComponent } from '../dimension/dimension.component';\r\nimport { ImageUploadComponent } from '../image-upload/image-upload.component';\r\n\r\n@Component({\r\n  selector: 'app-item-details',\r\n  templateUrl: './item-details.component.html',\r\n  styleUrl: './item-details.component.scss'\r\n})\r\nexport class ItemDetailsComponent {\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private service: ConsignmentService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    public dialogRef: MatDialogRef<ItemDetailsComponent>,\r\n    public dialog: MatDialog,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n\r\n  itemForm = this.fb.group({\r\n    itemDetails: this.fb.array([]) // Initialize an empty FormArray\r\n  });\r\n\r\n\r\n  get itemDetails(): FormArray {\r\n    return this.itemForm.get('itemDetails') as FormArray;\r\n  }\r\n  \r\n  addItem() {\r\n    this.itemDetails.push(this.createItemFormGroup());\r\n  }\r\n  createItemFormGroup(): FormGroup {\r\n    return this.fb.group({\r\n      codAmount: [],\r\n      declaredValue: [],\r\n      description: [],\r\n      dimensionUnit: [],\r\n      height: [],\r\n      hsCode: [],\r\n      imageRefId: [],\r\n      itemCode: [],\r\n      length: [],\r\n      partnerName: [],\r\n      partnerType: [],\r\n      pieceItemId: [],\r\n      pdfUrl: [],\r\n      volume: [],\r\n      volumeUnit: [],\r\n      weight: [],\r\n      weightUnit: [],\r\n      width: [],\r\n      quantity: [''],\r\n      unitValue: [''],\r\n      currency: [''],\r\n      masterAirwayBill: [''],\r\n      houseAirwayBill: [''],\r\n      partnerId:  [''],\r\n      referenceImageList: this.fb.array([]),\r\n    });\r\n  }\r\n  removeItem(index: number, data: any) {\r\n    this.itemDetails.removeAt(index);\r\n    this.service.DeleteItem(data.getRawValue()).subscribe({next: (res) => {}})\r\n  }\r\n  ngOnInit() {\r\n    this.dropdownlist();\r\n    this.patchForm(this.data.line.value)\r\n  }\r\n  save() {\r\n    const control = (this.itemForm.controls.itemDetails as FormArray)\r\n    const pieceValue = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.declaredValue), 0);\r\n    const length = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.length), 0);\r\n    const width = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.width), 0);\r\n    const height = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.height), 0);\r\n    const weight = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.weight), 0);\r\n    const volume = control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.volume), 0);\r\n\r\n    let obj: any = {};\r\n    obj.lines = this.itemForm.controls.itemDetails.value;\r\n    obj.pieceValue = pieceValue;\r\n    obj.length = length;\r\n    obj.width = width;\r\n    obj.height = height;\r\n    obj.weight = weight;\r\n    obj.volume = volume;\r\n    obj.tags = control.length;\r\n    obj.volumeUnit = control.value[0].volumeUnit;\r\n    obj.dimensionUnit = control.value[0].dimensionUnit;\r\n    obj.weightUnit = control.value[0].weightUnit;\r\n    obj.currency = control.value[0].currency;\r\n    this.dialogRef.close(obj)\r\n  }\r\n  calculateVolume(formName: any) {\r\n    const volume = formName.controls.length.value as number * formName.controls.width.value as number * formName.controls.height.value as number;\r\n    formName.controls.volume.patchValue(volume);\r\n  }\r\n\r\n  patchForm(shipmentData: any) {\r\n    const itemsArray = this.itemForm.get('itemDetails') as FormArray;\r\n    shipmentData.forEach((piece: any) => {\r\n      itemsArray.push(this.patchItemDetail(piece));\r\n    });\r\n  }\r\n\r\n  \r\n  patchItemDetail(item: any) {\r\n    return this.fb.group({\r\n      codAmount: [item.codAmount],\r\n      declaredValue: [item.declaredValue],\r\n      description: [item.description],\r\n      dimensionUnit: [item.dimensionUnit],\r\n      height: [item.height],\r\n      hsCode: [item.hsCode],\r\n      imageRefId: [item.imageRefId],\r\n      itemCode: [item.itemCode],\r\n      length: [item.length],\r\n      partnerName: [item.partnerName],\r\n      partnerType: [item.partnerType],\r\n      pieceItemId: [item.pieceItemId],\r\n      referenceField1: [item.referenceField1],\r\n      referenceField10: [item.referenceField10],\r\n      referenceField11: [item.referenceField11],\r\n      referenceField12: [item.referenceField12],\r\n      referenceField13: [item.referenceField13],\r\n      referenceField14: [item.referenceField14],\r\n      referenceField15: [item.referenceField15],\r\n      referenceField16: [item.referenceField16],\r\n      referenceField17: [item.referenceField17],\r\n      referenceField18: [item.referenceField18],\r\n      referenceField19: [item.referenceField19],\r\n      referenceField2: [item.referenceField2],\r\n      referenceField20: [item.referenceField20],\r\n      referenceField3: [item.referenceField3],\r\n      referenceField4: [item.referenceField4],\r\n      referenceField5: [item.referenceField5],\r\n      referenceField6: [item.referenceField6],\r\n      referenceField7: [item.referenceField7],\r\n      referenceField8: [item.referenceField8],\r\n      referenceField9: [item.referenceField9],\r\n      masterAirwayBill: [item.masterAirwayBill],\r\n      partnerId: [item.partnerId],\r\n      houseAirwayBill: [item.houseAirwayBill],\r\n      referenceImageList: this.patchReferenceImages(item.referenceImageList),\r\n      volume: [item.volume],\r\n      volumeUnit: [item.volumeUnit],\r\n      weight: [item.weight],\r\n      weightUnit: [item.weightUnit],\r\n      width: [item.width],\r\n      quantity: [item.quantity],\r\n      unitValue: [item.unitValue],\r\n      currency: [item.currency],\r\n    });\r\n  }\r\n\r\n  patchReferenceImages(referenceImageList: any[]) {\r\n    if (referenceImageList == null) {\r\n      return\r\n    }\r\n    return this.fb.array(referenceImageList.map(image => this.fb.group({\r\n      imageRefId: [image.imageRefId],\r\n      pdfUrl: [image.pdfUrl],\r\n      referenceImageUrl: [image.referenceImageUrl]\r\n    })));\r\n  }\r\n\r\n\r\n  dimension(type: any = 'New', module: any, index: any) {\r\n    const dialogRef = this.dialog.open(DimensionComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '25%' },\r\n      data: { pageflow: type, module: module, line: (this.itemForm.controls.itemDetails as FormArray).at(index)},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      const control = (this.itemForm.controls.itemDetails as FormArray).at(index)\r\n      control.patchValue(result);\r\n    })}\r\n\r\n    imageupload(type: any = 'New', index: any) {\r\n      const dialogRef = this.dialog.open(ImageUploadComponent, {\r\n        disableClose: true,\r\n        width: '70%',\r\n        maxWidth: '82%',\r\n        position: { top: '6.5%', left: '25%' },\r\n        data: { pageflow: type, line: (this.itemForm.controls.itemDetails as FormArray).at(index).get('referenceImageList') as FormArray, lineDetails: (this.itemForm.controls.itemDetails as FormArray).at(index), type: 'item' },\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          const imageDetailsFormArray = (this.itemForm.controls.itemDetails as FormArray).at(index).get('referenceImageList') as FormArray;\r\n          imageDetailsFormArray.clear();\r\n          result.forEach((image: any) => {\r\n            imageDetailsFormArray.push(this.fb.group({\r\n              imageRefId: image.imageRefId,\r\n              pdfUrl: image.pdfUrl,\r\n              referenceImageUrl: image.referenceImageUrl,\r\n            }));\r\n          });\r\n          console.log(this.itemForm)\r\n        }\r\n      })\r\n    }\r\n\r\n    hsCodeList: any[] = [];\r\n    currencyDropdown: any[] = [];\r\n    dropdownlist() {\r\n      this.spin.show();\r\n      this.cas.getalldropdownlist([\r\n        this.cas.dropdownlist.setup.hsCode.url,\r\n        this.cas.dropdownlist.setup.currency.url\r\n      ]).subscribe({\r\n        next: (results: any) => {\r\n         this.hsCodeList =  this.cas.forLanguageFilter(results[0], {key: 'hsCode', value: 'itemGroup', languageId: 'languageId',companyId: 'companyId'});\r\n          this.currencyDropdown = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.currency.key);\r\n          this.spin.hide();\r\n        },\r\n        error: (err: any) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n\r\n    calculateTotalValue(value:any){\r\n      value.controls.declaredValue.patchValue(value.controls.quantity.value * value.controls.unitValue.value);\r\n    }\r\n\r\n    hsCodeChange(value:any, control:any){\r\n     let desc =  this.hsCodeList.find(option => option.value === control.controls.hsCode.value)?.label;\r\n      control.controls.description.patchValue(desc);\r\n    }\r\n\r\n    showInput = true\r\n\r\n    toggleInput(){\r\n      this.showInput = !this.showInput;\r\n      console.log(this.showInput)\r\n    }\r\n}\r\n", "<div class=\"bgWhite text-black w-93 h-100 mx-4 my-2 mt-4\">\r\n  <div class=\"d-flex justify-content-between align-items-center\">\r\n      <p class=\"componentHeader f600 mb-0\">List Items</p>\r\n      <button (click)=\"addItem()\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n          class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n  </div>\r\n  <div class=\"mt-4 pt-2\">\r\n    <form [formGroup]=\"itemForm\" class=\"mt-1 mx-3\">\r\n      <p-table [scrollable]=\"true\" class=\"paddingZero\" scrollHeight=\"calc(100vh - 24.8rem)\"\r\n        [value]=\"itemDetails.controls\" >\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th >HS Code</th>\r\n            <th >Description</th>\r\n            <th >Qty</th>\r\n            <th >Unit Value</th>\r\n            <th >Total Value</th>\r\n            <th >Currency</th>\r\n            <th >Actions</th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-item let-i=\"rowIndex\"  let-rowData>\r\n          <tr [formGroup]=\"item\">\r\n            <td>\r\n              <p-dropdown *ngIf=\"!showInput\" (dblclick)=\"toggleInput()\" [options]=\"hsCodeList\" #hscode placeholder=\"Select\" filter=\"true\"\r\n              formControlName=\"hsCode\" appendTo=\"body\" (onChange)=\"hsCodeChange(hscode, rowData)\"\r\n              [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n              <input  (dblclick)=\"toggleInput()\" *ngIf=\"showInput\" class=\"inputborderLess pl-3\" placeholder=\"Enter\" formControlName=\"hsCode\">\r\n            </td>\r\n            <td><input   class=\"inputborderLess pl-3\" placeholder=\"Enter\" formControlName=\"description\"></td>\r\n            <td ><input class=\"inputborderLess pl-3\" placeholder=\"Enter\" (change)=\"calculateTotalValue(rowData)\" formControlName=\"quantity\"></td>\r\n            <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\" (change)=\"calculateTotalValue(rowData)\" formControlName=\"unitValue\"></td>\r\n            <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\" formControlName=\"declaredValue\"></td>\r\n            <td>\r\n              <p-dropdown [options]=\"currencyDropdown\" placeholder=\"Select\" filter=\"true\"\r\n              formControlName=\"currency\" appendTo=\"body\"\r\n              [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n            </td>\r\n            <td style=\"padding-left: 1.5rem !important;\">\r\n              <img type=\"button\" src=\"./assets/common/actions.png\" (click)=\"op.toggle($event)\"\r\n                  alt=\"\" srcset=\"\" style=\"height: 1.4rem;\">\r\n              <p-overlayPanel [style]=\"{ width: '180' }\" #op>\r\n                  <div class=\"d-flex flex-column\">\r\n                      <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                          (click)=\"op.hide(); dimension(this.data.pageflow, 'item', i)\"><img\r\n                              src=\"./assets/common/dimension.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                              srcset=\"\">Dimension</button>\r\n                      <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                          (click)=\"op.hide(); removeItem(i, rowData)\"><img\r\n                              src=\"./assets/common/delete1x.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                              srcset=\"\">Delete</button>\r\n                      <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\" (click)=\"op.hide(); imageupload(this.data.pageflow, i)\"><img\r\n                              src=\"./assets/common/image.png\" style=\"padding-right: 10px;width: 2rem;\"\r\n                              srcset=\"\">Image</button>\r\n                  </div>\r\n              </p-overlayPanel>\r\n          </td>\r\n\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </form>\r\n  </div>\r\n  <div class=\"d-flex my-3 justify-content-end\">\r\n      <button class=\"buttom1 textBlack mx-1\" mat-dialog-close >Back</button>\r\n      <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">Save</button>\r\n  </div>\r\n</div>", "import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonServiceService } from '../../../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ConsignmentService } from '../../consignment.service';\r\nimport { AuthService } from '../../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-consignment-status-popup',\r\n  templateUrl: './consignment-status-popup.component.html',\r\n  styleUrl: './consignment-status-popup.component.scss'\r\n})\r\nexport class ConsignmentStatusPopupComponent { \r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConsignmentStatusPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private service: ConsignmentService,\r\n    private auth: AuthService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    // console.log(this.data.code);\r\n    this.callCNTable();\r\n  }\r\n\r\n  cnTable: any[] = [];\r\n\r\n  callCNTable(){\r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.pieceId = [this.data.code.pieceId];\r\n\r\n    this.service.searchStatus(obj).subscribe({next: res=> {\r\n      // console.log(res);\r\n      // res = this.cs.removeDuplicatesFromArrayList(res, 'houseAirwayBill');\r\n      this.cnTable =  res;\r\n      console.log(this.cnTable);\r\n    },error: err => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    }})\r\n  }\r\n\r\n}\r\n", "<div class=\"bgWhite text-black w-93 h-100 m-4 mt-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Piece Details</p>\r\n    </div>\r\n\r\n    <div class=\"d-flex scrollNew mt-4\">\r\n        <table class=\"table\" style=\"width: 80rem;\">\r\n            <thead class=\"sticky-top  table-style \">\r\n                <tr>\r\n                    <th scope=\"col\">Piece ID</th>\r\n                    <th scope=\"col\">Type</th>\r\n                    <!-- <th scope=\"col\">Bag ID</th> -->\r\n                    <th scope=\"col\">Description</th>\r\n                    <th scope=\"col\">Time</th>\r\n                    <th scope=\"col\">User</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-style-body\" >\r\n                <tr style=\"height: 20px !important;\" *ngFor=\"let item of cnTable; let i = index\">\r\n                    <td scope=\"row\">{{item.pieceId}}</td>\r\n                    <td scope=\"row\">{{item.pieceType}}</td>\r\n                    <!-- <td>{{item.bagId}}</td> -->\r\n                    <td scope=\"row\">{{item.pieceTypeDescription}}</td>\r\n                    <td scope=\"row\">{{item.pieceTimeStamp | date: 'dd-MM-yyyy HH:mm' }}</td>\r\n                    <td scope=\"row\">{{item.updatedBy}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div class=\"d-flex float-right py-2\" style=\"position: absolute; right: 3.5%; bottom: 5%;\">\r\n        <button mat-dialog-close class=\"buttom1 textBlack mx-1\">Cancel</button>\r\n    </div>\r\n</div>", "import { Component, ElementRef, EventEmitter, Output } from '@angular/core';\r\nimport { ConsignmentService } from '../consignment.service';\r\nimport { FormBuilder, Validators, FormControl, FormArray, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ItemDetailsComponent } from './item-details/item-details.component';\r\nimport { DimensionComponent } from './dimension/dimension.component';\r\nimport { ImageUploadComponent } from './image-upload/image-upload.component';\r\nimport { ProductService } from '../../../id-masters/product/product.service';\r\nimport { HubPartnerAssignmentService } from '../../../master/hub-partner-assignment/hub-partner-assignment.service';\r\nimport { CustomerService } from '../../../master/customer/customer.service';\r\nimport { ConsignorService } from '../../../master/consignor/consignor.service';\r\nimport { ConsignmentLabelComponent } from '../../../pdf/consignment-label/consignment-label.component';\r\nimport { format } from 'util';\r\nimport { TableRowCollapseEvent, TableRowExpandEvent } from 'primeng/table';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ConsignmentStatusPopupComponent } from './consignment-status-popup/consignment-status-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-consignment-new',\r\n  templateUrl: './consignment-new.component.html',\r\n  styleUrl: './consignment-new.component.scss',\r\n  animations: [\r\n    trigger('fadeLater', [\r\n      state('fade-in', style({ opacity: 1, transform: 'translateY(0)' })),\r\n      state('fade-out', style({ opacity: 0, transform: 'translateY(0)' })),\r\n      transition('fade-in <=> fade-out', animate('0.6s ease-in-out'))\r\n    ]),\r\n  ]\r\n})\r\nexport class ConsignmentNewComponent {\r\n\r\n\r\n  activeIndex: number = 0;\r\n  status: any[] = [];\r\n  partnerType: any[] = [];\r\n  paymentType: any[] = [];\r\n  incoTerms: any[] = [];\r\n  codCollectionMode: any[] = [];\r\n  disabledCarrier = true;\r\n  disabledSender = true;\r\n  disabledDelivery = true;\r\n  disabledBilling = true;\r\n  disabledConsignment = true;\r\n  disabledPiece = true;\r\n  disabledDelivered = true;\r\n  disabledReturn = true;\r\n\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ConsignmentService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    private el: ElementRef,\r\n    public dialog: MatDialog,\r\n    public productService: ProductService,\r\n    public customerService: CustomerService,\r\n    public consignorService: ConsignorService,\r\n    public download: ConsignmentLabelComponent,\r\n  ) {\r\n    this.status = [\r\n      { value: '17', label: 'Inactive' },\r\n      { value: '16', label: 'Active' }\r\n    ];\r\n    this.partnerType = [\r\n      { value: 'customer', label: 'Customer' },\r\n      { value: 'consignor', label: 'Consignor' }\r\n    ];\r\n    this.paymentType = [\r\n      { value: 'Prepaid', label: 'Prepaid' },\r\n      { value: 'COD', label: 'COD' }\r\n    ];\r\n    this.incoTerms = [\r\n      { value: 'DDU', label: 'DDU' },\r\n      { value: 'DDP', label: 'DDP' }\r\n    ];\r\n    this.codCollectionMode = [\r\n      { value: 'Cash', label: 'Cash' },\r\n      { value: 'Cheque', label: 'Cheque' },\r\n      { value: 'Online', label: 'Online' },\r\n      { value: 'Card', label: 'Card' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n\r\n  shipmentInfo = this.fb.group({\r\n    companyId: [this.auth.companyId,],\r\n    priority: [],\r\n    incoTerms: [],\r\n    partnerType: ['', Validators.required],\r\n    consignmentId: [],\r\n    partnerId: [, Validators.required],\r\n    partnerName: [,],\r\n    statusId: [,],\r\n    paymentType: [,],\r\n    productId: [],\r\n    productName: [],\r\n    subProductId: [],\r\n    subProductName: [],\r\n    serviceTypeId: [, Validators.required],\r\n    serviceTypeText: [],\r\n    manufacturer: [],\r\n    masterAirwayBill: [],\r\n    houseAirwayBill: [],\r\n    noOfPieceHawb: [],\r\n    noOfPackageMawb: [],\r\n    countryOfOrigin: [],\r\n    countryOfDestination: [],\r\n    consignmentType: [,],\r\n    customerCode: [],\r\n    customerId: [],\r\n    codAmount: [],\r\n    codCollectionMode: [],\r\n    codFavorOf: [],\r\n    customerReferenceNumber: [],\r\n    actionType: [],\r\n    movementType: [],\r\n    forwardReferenceNumber: [],\r\n    workerCode: [],\r\n    loadType: [, ],\r\n    loadTypeId: [, Validators.required],\r\n    courierAccount: [],\r\n    courierPartner: [],\r\n    invoiceNumber: [],\r\n    courierPartnerReferenceNumber: [],\r\n    invoiceAmount: [],\r\n    invoiceUrl: [],\r\n  });\r\n\r\n  carrierInfo = this.fb.group({\r\n\r\n  })\r\n\r\n\r\n  OriginDetails = this.fb.group({\r\n    accountId: [],\r\n    addressHubCode: [,],\r\n    addressLine1: [],\r\n    addressLine2: [],\r\n    alternatePhone: [],\r\n    city: [],\r\n    companyName: [],\r\n    country: [],\r\n    district: [],\r\n    email: [],\r\n    latitude: [],\r\n    longitude: [],\r\n    name: [],\r\n    phone: [],\r\n    pinCode: [],\r\n    state: [],\r\n  });\r\n\r\n\r\n  DestinationDetails = this.fb.group({\r\n    accountId: [,],\r\n    addressHubCode: [],\r\n    addressLine1: [],\r\n    addressLine2: [],\r\n    alternatePhone: [],\r\n    city: [,],\r\n    companyName: [],\r\n    country: [],\r\n    district: [],\r\n    email: [],\r\n    latitude: [],\r\n    longitude: [],\r\n    name: [],\r\n    phone: [],\r\n    pinCode: [],\r\n    state: [],\r\n  });\r\n\r\n\r\n  senderInfo = this.fb.group({\r\n    shipperId: [],\r\n    shipperName: [],\r\n    originDetails: this.OriginDetails\r\n  })\r\n\r\n  deliveryInfo = this.fb.group({\r\n    consigneeName: [,],\r\n    consigneeCivilId: [],\r\n    destinationDetails: this.DestinationDetails\r\n  })\r\n\r\n  billing = this.fb.group({\r\n    // incoTerms: [],\r\n    // paymentType: [],\r\n    //currency: [],\r\n    // freightCurrency: [],\r\n    //freightCharges: [],\r\n    countryOfSupply: [],\r\n    declaredValue: [],\r\n    // consignmentCurrency: [],\r\n    // consignmentValue: [],\r\n    //actualCurrency: [],\r\n    totalDuty: [],\r\n    customsCurrency: [],\r\n    specialApprovalValue: [],\r\n    // codAmount: [],\r\n    // codFavorOf: [],\r\n    // codCollectionMode: [],\r\n    declaredValueWithoutTax: [],\r\n    // invoiceAmount: [],\r\n    // invoiceUrl: [],\r\n    productCode: [],\r\n    //  amount: [],\r\n    //isCustomsDeclarable: [],\r\n    iata: [],\r\n    dduCharge: [],\r\n    customsValue: [],\r\n    specialApprovalCharge: [],\r\n    exchangeRate: [],\r\n    consignmentValueLocal: [],\r\n    dutyPercentage: ['5%',],\r\n    addInsurance: [],\r\n    customsInsurance: [],\r\n    addIata: [],\r\n    actualDuty: [],\r\n    calculatedTotalDuty: [],\r\n  })\r\n\r\n  consignment = this.fb.group({\r\n    length: [],\r\n    width: [],\r\n    height: [],\r\n    dimensionUnit: [],\r\n    volume: [],\r\n    volumeUnit: [],\r\n    weight: [],\r\n    weightUnit: [],\r\n    invoiceDate: [,],\r\n    invoiceDateFE: [new Date,],\r\n    invoiceSupplierName: [],\r\n    goodsDescription: [],\r\n    notifyParty: [],\r\n    consignmentCurrency: [],\r\n    consignmentValue: [],\r\n    partnerHouseAirwayBill: [],\r\n    partnerMasterAirwayBill: [],\r\n    airportOriginCode: [],\r\n    flightArrivalTime: [],\r\n    noOfPackages: [],\r\n    flightName: [],\r\n    flightNo: [],\r\n    packageType: [],\r\n    netWeight: [],\r\n    grossWeight: [],\r\n  })\r\n\r\n  piece = this.fb.group({\r\n    pieceDetails: this.fb.array([\r\n    ])\r\n  });\r\n\r\n  initPieceDetail() {\r\n   const control =  this.piece.controls.pieceDetails as FormArray\r\n    return this.fb.group({\r\n      codAmount: [''],\r\n      declaredValue: [''],\r\n      description: [''],\r\n      dimensionUnit: [''],\r\n      height: [''],\r\n      itemDetails: this.fb.array([]),\r\n      length: [''],\r\n      packReferenceNumber: [control.value.length + 1, ],\r\n      masterAirwayBill: [''],\r\n      partnerId: [''],\r\n      houseAirwayBill: [''],\r\n      pieceProductCode: [''],\r\n      tags: [''],\r\n      partnerType: [''],\r\n      pieceId: [''],\r\n      referenceField1: [''],\r\n      referenceField10: [''],\r\n      referenceField11: [''],\r\n      referenceField12: [''],\r\n      referenceField13: [''],\r\n      referenceField14: [''],\r\n      referenceField15: [''],\r\n      referenceField16: [''],\r\n      referenceField17: [''],\r\n      referenceField18: [''],\r\n      referenceField19: [''],\r\n      referenceField2: [''],\r\n      referenceField20: [''],\r\n      referenceField3: [''],\r\n      referenceField4: [''],\r\n      referenceField5: [''],\r\n      referenceField6: [''],\r\n      referenceField7: [''],\r\n      referenceField8: [''],\r\n      referenceField9: [''],\r\n      referenceImageList: this.fb.array([]),\r\n      volume: [''],\r\n      volumeUnit: [''],\r\n      weight: [''],\r\n      weightUnit: [''],\r\n      width: [''],\r\n      hsCode: [''],\r\n      pieceValue: [''],\r\n      pieceCurrency: [''],\r\n    });\r\n  }\r\n\r\n  initItemDetail() {\r\n    return this.fb.group({\r\n      codAmount: [''],\r\n      declaredValue: [''],\r\n      description: [''],\r\n      dimensionUnit: [''],\r\n      height: [''],\r\n      hsCode: [''],\r\n      imageRefId: [''],\r\n      itemCode: [''],\r\n      length: [''],\r\n      partnerName: [''],\r\n      partnerType: [''],\r\n      pieceItemId: [''],\r\n      referenceField1: [''],\r\n      referenceField10: [''],\r\n      referenceField11: [''],\r\n      referenceField12: [''],\r\n      referenceField13: [''],\r\n      referenceField14: [''],\r\n      referenceField15: [''],\r\n      referenceField16: [''],\r\n      referenceField17: [''],\r\n      referenceField18: [''],\r\n      referenceField19: [''],\r\n      referenceField2: [''],\r\n      referenceField20: [''],\r\n      referenceField3: [''],\r\n      referenceField4: [''],\r\n      referenceField5: [''],\r\n      referenceField6: [''],\r\n      referenceField7: [''],\r\n      referenceField8: [''],\r\n      referenceField9: [''],\r\n      referenceImageList: this.fb.array([]),\r\n      volume: [''],\r\n      volumeUnit: [''],\r\n      weight: [''],\r\n      weightUnit: [''],\r\n      width: [''],\r\n      quantity: [''],\r\n      unitValue: [''],\r\n      currency: [''],\r\n    });\r\n  }\r\n\r\n  addPieceDetail() {\r\n    const control = this.piece.controls.pieceDetails as FormArray;\r\n    control.push(this.initPieceDetail());\r\n  }\r\n\r\n  removePieceDetail(index: number, data:any) {\r\n    const control = this.piece.controls.pieceDetails as FormArray;\r\n    control.removeAt(index);\r\n    this.service.DeletePiece(data.getRawValue()).subscribe({next: (res) => {}})\r\n  }\r\n\r\n  addItemDetail(pieceIndex: number) {\r\n    const control = (this.piece.controls.pieceDetails as FormArray).at(pieceIndex).get('itemDetails') as FormArray;\r\n    control.push(this.initItemDetail());\r\n  }\r\n\r\n  removeItemDetail(pieceIndex: number, itemIndex: number) {\r\n    const control = (this.piece.controls.pieceDetails as FormArray).at(pieceIndex).get('itemDetails') as FormArray;\r\n    control.removeAt(itemIndex);\r\n  }\r\n\r\n\r\n  patchForm(shipmentData: any) {\r\n    const piecesArray = this.piece.get('pieceDetails') as FormArray;\r\n    shipmentData.pieceDetails.forEach((piece: any) => {\r\n      piecesArray.push(this.patchPieceDetail(piece));\r\n    });\r\n  }\r\n\r\n  patchPieceDetail(piece: any) {\r\n    return this.fb.group({\r\n      codAmount: [piece.codAmount],\r\n      declaredValue: [piece.declaredValue],\r\n      description: [piece.description],\r\n      dimensionUnit: [piece.dimensionUnit],\r\n      height: [piece.height],\r\n      itemDetails: this.patchItemDetails(piece.itemDetails),\r\n      length: [piece.length],\r\n      packReferenceNumber: [piece.packReferenceNumber],\r\n      masterAirwayBill: [piece.masterAirwayBill],\r\n      houseAirwayBill: [piece.houseAirwayBill],\r\n      partnerId: [piece.partnerId],\r\n      partnerType: [piece.partnerType],\r\n      pieceId: [piece.pieceId],\r\n      referenceField1: [piece.referenceField1],\r\n      referenceField10: [piece.referenceField10],\r\n      referenceField11: [piece.referenceField11],\r\n      referenceField12: [piece.referenceField12],\r\n      referenceField13: [piece.referenceField13],\r\n      referenceField14: [piece.referenceField14],\r\n      referenceField15: [piece.referenceField15],\r\n      referenceField16: [piece.referenceField16],\r\n      referenceField17: [piece.referenceField17],\r\n      referenceField18: [piece.referenceField18],\r\n      referenceField19: [piece.referenceField19],\r\n      referenceField2: [piece.referenceField2],\r\n      referenceField20: [piece.referenceField20],\r\n      referenceField3: [piece.referenceField3],\r\n      referenceField4: [piece.referenceField4],\r\n      referenceField5: [piece.referenceField5],\r\n      referenceField6: [piece.referenceField6],\r\n      referenceField7: [piece.referenceField7],\r\n      referenceField8: [piece.referenceField8],\r\n      referenceField9: [piece.referenceField9],\r\n      referenceImageList: this.patchReferenceImages(piece.referenceImageList),\r\n      volume: [piece.volume],\r\n      volumeUnit: [piece.volumeUnit],\r\n      weight: [piece.weight],\r\n      weightUnit: [piece.weightUnit],\r\n      width: [piece.width],\r\n      hsCode: [piece.hsCode],\r\n      pieceValue: [piece.pieceValue],\r\n      pieceCurrency: [piece.pieceCurrency],\r\n      pieceProductCode: [piece.pieceProductCode],\r\n      tags:  [piece.tags],\r\n    });\r\n  }\r\n\r\n  patchItemDetails(itemDetails: any[]) {\r\n    return this.fb.array(itemDetails.map(item => this.patchItemDetail(item)));\r\n  }\r\n\r\n  patchItemDetail(item: any) {\r\n    return this.fb.group({\r\n      codAmount: [item.codAmount],\r\n      declaredValue: [item.declaredValue],\r\n      description: [item.description],\r\n      dimensionUnit: [item.dimensionUnit],\r\n      height: [item.height],\r\n      hsCode: [item.hsCode],\r\n      imageRefId: [item.imageRefId],\r\n      itemCode: [item.itemCode],\r\n      length: [item.length],\r\n      partnerName: [item.partnerName],\r\n      partnerType: [item.partnerType],\r\n      pieceItemId: [item.pieceItemId],\r\n      referenceField1: [item.referenceField1],\r\n      referenceField10: [item.referenceField10],\r\n      referenceField11: [item.referenceField11],\r\n      referenceField12: [item.referenceField12],\r\n      referenceField13: [item.referenceField13],\r\n      referenceField14: [item.referenceField14],\r\n      referenceField15: [item.referenceField15],\r\n      referenceField16: [item.referenceField16],\r\n      referenceField17: [item.referenceField17],\r\n      referenceField18: [item.referenceField18],\r\n      referenceField19: [item.referenceField19],\r\n      referenceField2: [item.referenceField2],\r\n      referenceField20: [item.referenceField20],\r\n      referenceField3: [item.referenceField3],\r\n      referenceField4: [item.referenceField4],\r\n      referenceField5: [item.referenceField5],\r\n      referenceField6: [item.referenceField6],\r\n      referenceField7: [item.referenceField7],\r\n      referenceField8: [item.referenceField8],\r\n      referenceField9: [item.referenceField9],\r\n      referenceImageList: this.patchReferenceImages(item.referenceImageList),\r\n      volume: [item.volume],\r\n      volumeUnit: [item.volumeUnit],\r\n      weight: [item.weight],\r\n      weightUnit: [item.weightUnit],\r\n      width: [item.width],\r\n      quantity: [item.quantity],\r\n      unitValue: [item.unitValue],\r\n      currency: [item.currency],\r\n      masterAirwayBill: [item.masterAirwayBill],\r\n      houseAirwayBill: [item.houseAirwayBill],\r\n      partnerId: [item.partnerId],\r\n    });\r\n  }\r\n\r\n  patchReferenceImages(referenceImageList: any[]) {\r\n    if (referenceImageList == null) {\r\n      return\r\n    }\r\n    return this.fb.array(referenceImageList.map(image => this.fb.group({\r\n      imageRefId: [image.imageRefId],\r\n      pdfUrl: [image.pdfUrl],\r\n      referenceImageUrl: [image.referenceImageUrl]\r\n    })));\r\n  }\r\n\r\n\r\n  form = this.fb.group({\r\n    updatedBy: [,],\r\n    updatedOn: ['',],\r\n    createdOn: ['',],\r\n    createdBy: [,],\r\n    originDetails: [],\r\n  });\r\n\r\n\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandlingShipment(control: string, error: string = 'required') {\r\n    const controlInstance = this.shipmentInfo.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  errorHandlingCarrier(control: string, error: string = 'required') {\r\n    const controlInstance = this.carrierInfo.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  errorHandlingSender(control: string, error: string = 'required') {\r\n    const controlInstance = this.senderInfo.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  errorHandlingDelivery(control: string, error: string = 'required') {\r\n    const controlInstance = this.deliveryInfo.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  errorHandlingBilling(control: string, error: string = 'required') {\r\n    const controlInstance = this.billing.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  errorHandlingConsignment(control: string, error: string = 'required') {\r\n    const controlInstance = this.consignment.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Operations', 'Consignment', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.shipmentInfo.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n\r\n    this.callCNTable();\r\n  }\r\n\r\n  companyIdList: any[] = [];\r\n  districtIdList: any[] = [];\r\n  productIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n  serviceTypeIdList: any[] = [];\r\n  consignmentTypeIdList: any[] = [];\r\n  loadTypeIdList: any[] = [];\r\n  countryIdListOrigin: any[] = [];\r\n  countryIdListDestination: any[] = [];\r\n  cityIdList: any[] = [];\r\n  provinceIdList: any[] = [];\r\n  partnerName: any[] = [];\r\n  currencyDropdown: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.district.url,\r\n      this.cas.dropdownlist.setup.product.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n      this.cas.dropdownlist.setup.serviceType.url,\r\n      this.cas.dropdownlist.setup.consignmentType.url,\r\n      this.cas.dropdownlist.setup.loadType.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.city.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n      this.cas.dropdownlist.setup.currency.url\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.companyIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.company.key);\r\n        this.districtIdList = this.cas.forLanguageFilter(results[1], this.cas.dropdownlist.setup.district.key);\r\n        this.productIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.product.key);\r\n        this.subProductIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.serviceTypeIdList = this.cas.forLanguageFilter(results[4], this.cas.dropdownlist.setup.serviceType.key);\r\n        this.consignmentTypeIdList = this.cas.forLanguageFilter(results[5], this.cas.dropdownlist.setup.consignmentType.key);\r\n        this.loadTypeIdList = this.cas.forLanguageFilter(results[6], this.cas.dropdownlist.setup.loadType.key);\r\n        this.countryIdListOrigin = this.cas.forLanguageFilter(results[7], this.cas.dropdownlist.setup.country.key);\r\n        this.countryIdListDestination = this.cas.forLanguageFilter(results[7], this.cas.dropdownlist.setup.country.key);\r\n        this.cityIdList = this.cas.forLanguageFilter(results[8], this.cas.dropdownlist.setup.city.key);\r\n        this.provinceIdList = this.cas.forLanguageFilter(results[9], this.cas.dropdownlist.setup.province.key); \r\n       this.currencyDropdown = this.cas.foreachlist(results[10], this.cas.dropdownlist.setup.currency.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  partnerNameList: any[] = [];\r\n\r\n  partnerTypeChanged() {\r\n    if (this.shipmentInfo.controls.partnerType.value == 'customer') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n      this.partnerNameList = [];\r\n      this.spin.show();\r\n      this.customerService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.partnerNameList = this.cas.foreachlist(result, { key: 'customerId', value: 'customerName' });\r\n          this.partnerNameList =  this.cs.removeDuplicatesFromArrayList( this.partnerNameList, 'value');\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.shipmentInfo.controls.partnerType.value == 'consignor') {\r\n      let obj: any = {};\r\n      obj.languageId = [this.auth.languageId];\r\n      obj.companyId = [this.auth.companyId];\r\n      this.partnerNameList = [];\r\n      this.spin.show();\r\n      this.consignorService.search(obj).subscribe({\r\n        next: (result) => {\r\n          this.partnerNameList = this.cas.foreachlist(result, { key: 'consignorId', value: 'consignorName' });\r\n          this.partnerNameList =  this.cs.removeDuplicatesFromArrayList( this.partnerNameList, 'value');\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  consignmentCurrency:any;\r\n  consignmentValue:any;\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n\r\n    this.disabledConsignment = false;\r\n    this.disabledPiece = false;\r\n    this.disabledSender = false;\r\n    this.disabledDelivery = false;\r\n    this.disabledBilling = false;\r\n\r\n      this.shipmentInfo.patchValue(line),\r\n      this.consignment.patchValue(line),\r\n      this.senderInfo.patchValue(line),\r\n      this.deliveryInfo.patchValue(line),\r\n      this.billing.patchValue(line)\r\n\r\n\r\n      this.consignmentCurrency =  this.consignment.controls.consignmentCurrency.value;\r\n      this.consignmentValue =  this.consignment.controls.consignmentValue.value;\r\n\r\n    this.patchForm(line);\r\n    if (this.consignment.controls.invoiceDate.value) {\r\n      this.consignment.controls.invoiceDateFE.patchValue(this.cs.pCalendar(this.consignment.controls.invoiceDate.value));\r\n    }\r\n    this.partnerTypeChanged();\r\n\r\n    this.shipmentInfo.controls.masterAirwayBill.disable();\r\n    this.shipmentInfo.controls.houseAirwayBill.disable();\r\n\r\n    this.callCNTableHeader();\r\n    this.callItemLevel(line);\r\n    this.callTableHeader();\r\n  }\r\n\r\n  billingTable:any[] = [];\r\n  selectedConsignment:any[] = [];\r\n\r\n  cols:any[] = [];\r\n\r\n  cnTable: any[] = [];\r\n  selectedCNTable: any[] = [];\r\n\r\n  cnCols : any[] = [];\r\n\r\n\r\n  // CN Tracking Code\r\n  callCNTableHeader() {\r\n    this.cnCols = [\r\n      { field: 'houseAirwayBill', header: 'Consignment ID'},\r\n      { field: 'hawbType', header: 'Type' },\r\n      // { field: 'bagId', header: 'Bag ID' },\r\n      { field: 'hawbTypeDescription', header: 'Description' },\r\n      { field: 'hawbTimeStamp', header: 'Time', format: 'date' },\r\n      { field: 'updatedBy', header: 'User' },\r\n    ];\r\n  }\r\n\r\n  onRowExpand(event: TableRowExpandEvent) {\r\n  }\r\n  onRowCollapse(event: TableRowCollapseEvent) {\r\n  }\r\n\r\n  getColspan(): number {\r\n    return this.cols.length + 2; // +1 for the expanded content column\r\n  }\r\n\r\n  callCNTable(){\r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.houseAirwayBill = [this.pageToken.line.houseAirwayBill];\r\n\r\n    this.service.searchStatus(obj).subscribe({next: res=> {\r\n      this.cnTable =  res;\r\n    },error: err => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    }})\r\n  }\r\n\r\n  cnTablePopup(data: any,line: any): void {\r\n    const dialogRef = this.dialog.open(ConsignmentStatusPopupComponent, {\r\n      disableClose: true,\r\n      width: '80%',\r\n      height: '50%',\r\n      maxWidth: '95%',\r\n      position: { top: '6.5%', left: '14%' },\r\n      data: {pageflow: data, code: line},\r\n    });\r\n  \r\n  }\r\n\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'consignmentCurrency', header: 'Consignment Currency', showFooter: false  },\r\n      { field: 'consignmentValue', header: 'Consignment Value', showFooter: true  },\r\n      { field: 'exchangeRate', header: 'Exchange Rate', showFooter: false  },\r\n      { field: 'iataCharge', header: 'IATA', showFooter: false  },\r\n      { field: 'customsInsurance', header: 'Customs Insurance', showFooter: true  },\r\n      { field: 'duty', header: 'Duty', showFooter: true, },\r\n      { field: 'consignmentValueLocal', header: 'Consignment Value Local', showFooter: true  },\r\n      { field: 'addIata', header: 'Add IATA', showFooter: true  },\r\n      { field: 'addInsurance', header: 'Add Insurance', showFooter: true  },\r\n      { field: 'customsValue', header: 'Custom', showFooter: true  },\r\n      { field: 'calculatedTotalDuty', header: 'Calculated Total duty', showFooter: true },\r\n      { field: 'dduCharge', header: 'DDU Charge', showFooter: true},\r\n      { field: 'specialApprovalCharge', header: 'Spl Approval Charge', showFooter: false },\r\n      { field: 'totalDuty', header: 'Duty From Bayan', showFooter: false },\r\n    ];\r\n  }\r\n\r\n  callItemLevel(line:any){\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId]\r\n    obj.houseAirwayBill = [line.houseAirwayBill];\r\n\r\n    this.service.search(obj).subscribe({next: res=> {\r\n      this.billingTable =  res;\r\n    },error: err => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err); \r\n    }})\r\n  }\r\n\r\n  calculateFooterTotal(field: string): number {\r\n    let total = 0;\r\n    this.billingTable.forEach(item => {\r\n      total += Number.parseFloat(item[field]) || 0;\r\n    });\r\n    return parseFloat(total.toFixed(2));\r\n  }\r\n\r\n  opendialog(type: any = 'New', index: any) {\r\n    const dialogRef = this.dialog.open(ItemDetailsComponent, {\r\n      disableClose: true,\r\n      width: '90%',\r\n      maxWidth: '95%',\r\n      position: { top: '6.5%', left: '10%' },\r\n      data: { pageflow: type, line: (this.piece.controls.pieceDetails as FormArray).at(index).get('itemDetails') as FormArray },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const itemDetailsFormArray = (this.piece.controls.pieceDetails as FormArray).at(index).get('itemDetails') as FormArray;\r\n        itemDetailsFormArray.clear();\r\n       const getPieceForm = (this.piece.controls.pieceDetails as FormArray).at(index);\r\n       getPieceForm.patchValue({\r\n        pieceValue: result.pieceValue,\r\n        length: result.length,\r\n        width: result.width,\r\n        height: result.height,\r\n        weight: result.weight,\r\n        tags: result.tags,\r\n        volume: result.volume,\r\n        weightUnit: result.weightUnit,\r\n        volumeUnit: result.volumeUnit,\r\n        dimensionUnit: result.dimensionUnit,\r\n        pieceCurrency: result.currency,\r\n      });\r\n        result.lines.forEach((item: any) => {\r\n          itemDetailsFormArray.push(this.fb.group({\r\n            codAmount: item.codAmount,\r\n            declaredValue: item.declaredValue,\r\n            description: item.description,\r\n            dimensionUnit: item.dimensionUnit,\r\n            height: item.height,\r\n            hsCode: item.hsCode,\r\n            imageRefId: item.imageRefId,\r\n            itemCode: item.itemCode,\r\n            length: item.length,\r\n            partnerName: item.partnerName,\r\n            partnerType: item.partnerType,\r\n            pieceItemId: item.pieceItemId,\r\n            volume: item.volume,\r\n            volumeUnit: item.volumeUnit,\r\n            weight: item.weight,\r\n            weightUnit: item.weightUnit,\r\n            width: item.width,\r\n            quantity: item.quantity,\r\n            unitValue: item.unitValue,\r\n            currency: item.currency,\r\n            masterAirwayBill: item.masterAirwayBill,\r\n            partnerId: item.partnerId,\r\n            houseAirwayBill: item.houseAirwayBill,\r\n            referenceImageList: this.patchReferenceImages(item.referenceImageList),\r\n          }));\r\n        });\r\n        console.log(this.piece)\r\n      }\r\n    });\r\n  }\r\n\r\n  dimension(type: any = 'New', module: any, index: any) {\r\n    const dialogRef = this.dialog.open(DimensionComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '25%' },\r\n      data: { pageflow: type, module: module, line: (this.piece.controls.pieceDetails as FormArray).at(index) },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      const control = (this.piece.controls.pieceDetails as FormArray).at(index);\r\n      control.patchValue(result);\r\n    })\r\n  }\r\n\r\n  imageupload(type: any = 'New', index: any) {\r\n    const dialogRef = this.dialog.open(ImageUploadComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '25%' },\r\n      data: { pageflow: type, line: (this.piece.controls.pieceDetails as FormArray).at(index).get('referenceImageList') as FormArray, lineDetails: (this.piece.controls.pieceDetails as FormArray).at(index), type: 'piece' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const imageDetailsFormArray = (this.piece.controls.pieceDetails as FormArray).at(index).get('referenceImageList') as FormArray;\r\n        imageDetailsFormArray.clear();\r\n        result.forEach((image: any) => {\r\n          imageDetailsFormArray.push(this.fb.group({\r\n            imageRefId: image.imageRefId,\r\n            pdfUrl: image.pdfUrl,\r\n            referenceImageUrl: image.referenceImageUrl,\r\n          }));\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n\r\n    if (this.form.invalid) {\r\n      for (const control in this.form.controls) {\r\n        const controlInstance = this.form.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          console.log(invalidControl)\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.consignmentId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/master/rate']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.consignmentId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/master/rate']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateVolume(formName: any) {\r\n    const volume = formName.controls.length.value as number * formName.controls.width.value as number * formName.controls.height.value as number;\r\n    formName.controls.volume.patchValue(volume);\r\n  }\r\n\r\n  saveShipment() {\r\n    this.submitted = true;\r\n    if (this.shipmentInfo.invalid) {\r\n      for (const control in this.shipmentInfo.controls) {\r\n        const controlInstance = this.shipmentInfo.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.shipmentInfo.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    } else {\r\n      this.activeIndex = 1;\r\n      this.disabledPiece = false;\r\n      this.submitted = false;\r\n    }\r\n  }\r\n\r\n  saveConsignment() {\r\n    this.submitted = true;\r\n    if (this.consignment.invalid) {\r\n      for (const control in this.consignment.controls) {\r\n        const controlInstance = this.consignment.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.consignment.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    } else {\r\n      this.activeIndex = 3;\r\n      this.submitted = false;\r\n      this.disabledSender = false;\r\n    }\r\n  }\r\n  savePiece() {\r\n\r\n    const control = (this.piece.controls.pieceDetails as FormArray)\r\n   if(control.value.length > 0){\r\n  this.consignment.controls.length.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.length), 0));\r\n  this.consignment.controls.width.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.width), 0));\r\n  this.consignment.controls.height.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.height), 0));\r\n  this.consignment.controls.volume.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.volume), 0));\r\n  this.consignment.controls.weight.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.weight), 0));\r\n  this.consignment.controls.consignmentValue.patchValue(control.value.reduce((acc:any, item:any) => parseInt(acc) + parseInt(item.pieceValue), 0));\r\n  this.consignment.controls.volumeUnit.patchValue(control.value[0].volumeUnit);\r\n  this.consignment.controls.dimensionUnit.patchValue(control.value[0].dimensionUnit);\r\n  this.consignment.controls.weightUnit.patchValue(control.value[0].weightUnit);\r\n  this.consignment.controls.consignmentCurrency.patchValue(control.value[0].pieceCurrency);\r\n}\r\n    this.activeIndex = 2;\r\n    this.submitted = false;\r\n    this.disabledConsignment = false;\r\n  }\r\n  saveSender() {\r\n    this.submitted = true;\r\n    if (this.senderInfo.invalid) {\r\n      for (const control in this.senderInfo.controls) {\r\n        const controlInstance = this.senderInfo.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.senderInfo.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    } else {\r\n      this.activeIndex = 4;\r\n      this.disabledDelivery = false;\r\n      this.submitted = false;\r\n    }\r\n  }\r\n  saveDelivery() {\r\n    this.submitted = true;\r\n    if (this.deliveryInfo.invalid) {\r\n      for (const control in this.deliveryInfo.controls) {\r\n        const controlInstance = this.deliveryInfo.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.deliveryInfo.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    } else {\r\n      // if (this.pageToken.pageflow != 'New') {\r\n        this.activeIndex = 5;\r\n        this.submitted = false;\r\n        this.disabledBilling = false;\r\n      // } else {\r\n      //   this.saveFinal();\r\n      // }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  saveBilling() {\r\n    this.submitted = true;\r\n    if (this.billing.invalid) {\r\n      for (const control in this.billing.controls) {\r\n        const controlInstance = this.billing.get(control);\r\n        if (controlInstance?.invalid) {\r\n          const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n          if (invalidControl) {\r\n            invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.billing.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    } else {\r\n      this.saveFinal();\r\n    }\r\n  }\r\n\r\n  mainForm: FormGroup = new FormGroup({\r\n\r\n  });\r\n\r\n  saveFinal() {\r\n    this.mainForm = this.fb.group({\r\n      ...this.shipmentInfo.getRawValue(),\r\n      ...this.consignment.getRawValue(),\r\n      ...this.senderInfo.getRawValue(),\r\n      ...this.deliveryInfo.getRawValue(),\r\n      ...this.billing.getRawValue(),\r\n      pieceDetails: this.piece.controls.pieceDetails as FormArray,\r\n      updatedBy: [,],\r\n      updatedOn: ['',],\r\n      createdOn: ['',],\r\n      createdBy: [,],\r\n      companyId: [this.auth.companyId,],\r\n      languageId: [this.auth.languageId,],\r\n      invoiceDate: this.cs.jsonDate(this.consignment.controls.invoiceDateFE.value)\r\n    });\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update([this.mainForm.getRawValue()]).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res[0].houseAirwayBill + ' has been updated successfully',\r\n          });\r\n          this.spin.hide();\r\n          this.router.navigate(['/main/operation/consignment']);\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create([this.mainForm.getRawValue()]).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Created',\r\n            key: 'br',\r\n            detail: res[0].houseAirwayBill + ' has been created successfully',\r\n          });\r\n          this.spin.hide();\r\n          this.router.navigate(['/main/operation/consignment']);\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  showPaymentTypeFields = false;\r\n  paymentChange() {\r\n    const paymentTypeValue = this.shipmentInfo.controls.paymentType.value;\r\n    if (typeof paymentTypeValue === 'string' && paymentTypeValue === 'COD') {\r\n      this.showPaymentTypeFields = true;\r\n    }else{\r\n      this.showPaymentTypeFields = false;\r\n    }\r\n  }\r\n\r\n  subProductValueList: any[] = [];\r\n\r\n  productChanged() {  // subProduct should be confined according to the product onChange function\r\n\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.productId = [this.shipmentInfo.controls.productId.value];\r\n\r\n    this.subProductIdList = [];\r\n    this.spin.show();\r\n    this.productService.search(obj).subscribe({\r\n      next: (result) => {\r\n        // this.form.patchValue(result[0]);\r\n        // this.subProductIdList = this.cas.forLanguageFilter(result, this.cas.dropdownlist.setup.subProduct.key);\r\n        this.subProductIdList = this.cas.foreachlist(result, { key: 'subProductName', value: 'referenceField1', });\r\n        this.subProductIdList = this.cs.removeDuplicatesFromArrayList(this.subProductIdList, 'value');\r\n        // this.subProductValueList = this.cas.foreachlist(result, { key: 'subProductValue', value: 'subProductValue' });\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  selectedFiles: FileList | null = null;\r\n  selectFiles(event: any): void {\r\n    this.selectedFiles = event.target.files;\r\n    this.uploadFile(event);\r\n  }\r\n\r\n  imageDetailsTable: any[] = [];\r\n  fileLocation:any;\r\n  uploadFile(event:any) {\r\n    if (!this.selectedFiles || this.selectedFiles.length === 0) {\r\n      console.log('No files selected for upload.');\r\n      return;\r\n    }\r\n  this.fileLocation = '/Invoice/';\r\n    this.service.uploadFiles(this.selectedFiles, this.fileLocation).subscribe({\r\n      next: (result) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Updated',\r\n          key: 'br',\r\n          detail: 'File uploaded successfully',\r\n        });\r\n        this.shipmentInfo.controls.invoiceUrl.patchValue(result[0].fileName)\r\n        this.selectedFiles = null;\r\n        this.clearFileInput(event.target); \r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    });\r\n  }\r\n  \r\n  clearFileInput(input: HTMLInputElement): void {\r\n    input.value = '';\r\n  }\r\n\r\n  downloadInvoice(value:any){\r\n    let obj: any = {};\r\n    obj.value = {imageRefId: value, referenceImageUrl: '/Invoice/'}\r\n    this.download.downloadDocument(obj);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// saveCarrier() {\r\n//   this.submitted = true;\r\n//   if (this.carrierInfo.invalid) {\r\n//     for (const control in this.carrierInfo.controls) {\r\n//       const controlInstance = this.carrierInfo.get(control);\r\n//       if (controlInstance?.invalid) {\r\n//         const invalidControl = this.el.nativeElement.querySelector(`#${control}`);\r\n//         if (invalidControl) {\r\n//           invalidControl.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n//           break;\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   if (this.carrierInfo.invalid) {\r\n//     this.messageService.add({\r\n//       severity: 'error',\r\n//       summary: 'Error',\r\n//       key: 'br',\r\n//       detail: 'Please fill required fields to continue',\r\n//     });\r\n//     return;\r\n//   } else {\r\n//     this.activeIndex = 6;\r\n//     this.disabledBilling = false;\r\n//     this.submitted = false;\r\n//   }\r\n// }", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignment - {{this.pageToken.pageflow}}</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" routerLink=\"/main/operation/consignment\" src=\"./assets/common2x/close1.png\" alt=\"\"\r\n                srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"saveFinal()\" src=\"./assets/common2x/tick.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <button [disabled]=\"activeIndex != 1\" (click)=\"addPieceDetail()\" type=\"button\"\r\n                class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i class=\"bi bi-plus-square pr-2\"></i> Add\r\n                Piece</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"mt-4 mx-auto\">\r\n\r\n        <p-tabView [(activeIndex)]=\"activeIndex\">\r\n            <p-tabPanel header=\"Shipment Info\">\r\n                <form [formGroup]=\"shipmentInfo\">\r\n                    <div class=\"row scrollNew22\">\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                            <p-dropdown placeholder=\"Select\" filter=\"true\" [options]=\"companyIdList\"\r\n                                formControlName=\"companyId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('companyId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"productId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Product</p>\r\n                            <p-dropdown [options]=\"productIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"productId\"\r\n                                [ngClass]=\"shipmentInfo.get('productId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\"\r\n                                (onChange)=\"productChanged()\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('productId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- \r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"subProductId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                            <p-dropdown [options]=\"subProductIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"subProductId\"\r\n                                [ngClass]=\"shipmentInfo.get('subProductId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('subProductId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"serviceTypeId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0 required\">Service Type </p>\r\n                            <p-dropdown [options]=\"serviceTypeIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"serviceTypeId\"\r\n                                [ngClass]=\"shipmentInfo.get('serviceTypeId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('serviceTypeId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"masterAirwayBill\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">MAWB</p>\r\n                            <input maxlength=\"50\" formControlName=\"masterAirwayBill\"\r\n                                [ngClass]=\"shipmentInfo.get('masterAirwayBill')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('masterAirwayBill')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"houseAirwayBill\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">HAWB</p>\r\n                            <input maxlength=\"50\" formControlName=\"houseAirwayBill\"\r\n                                [ngClass]=\"shipmentInfo.get('houseAirwayBill')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('houseAirwayBill')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"statusId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                            <input maxlength=\"50\" formControlName=\"statusId\"\r\n                                [ngClass]=\"shipmentInfo.get('statusId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('statusId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"partnerType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0 required\">Partner Type</p>\r\n                            <p-dropdown formControlName=\"partnerType\" [options]=\"partnerType\" appendTo=\"body\"\r\n                                [ngClass]=\"shipmentInfo.get('partnerType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" placeholder=\"Select\"\r\n                                (onChange)=\"partnerTypeChanged()\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('partnerType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"partnerId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0 required\">Partner</p>\r\n                            <p-dropdown [options]=\"partnerNameList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"partnerId\"\r\n                                [ngClass]=\"shipmentInfo.get('partnerId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n\r\n                            <mat-error *ngIf=\"errorHandlingShipment('partnerId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"partnerName\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0 required\">Partner Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"partnerName\"\r\n                                [ngClass]=\"shipmentInfo.get('partnerName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('partnerName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Type</p>\r\n                            <p-dropdown [options]=\"consignmentTypeIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"serviceTypeId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('consignmentType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"loadTypeId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0 required\">Load Type <Code></Code></p>\r\n                            <p-dropdown [options]=\"loadTypeIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"loadTypeId\"\r\n                                [ngClass]=\"shipmentInfo.get('loadTypeId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('loadTypeId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customerCode\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customer Code</p>\r\n                            <input maxlength=\"50\" formControlName=\"customerCode\"\r\n                                [ngClass]=\"shipmentInfo.get('customerCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('customerCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customerReferenceNumber\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customer Ref No</p>\r\n                            <input maxlength=\"50\" formControlName=\"customerReferenceNumber\"\r\n                                [ngClass]=\"shipmentInfo.get('customerReferenceNumber')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('customerReferenceNumber')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"noOfPackageMawb\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">No of Packages MAWB</p>\r\n                            <input maxlength=\"50\" formControlName=\"noOfPackageMawb\"\r\n                                [ngClass]=\"shipmentInfo.get('noOfPackageMawb')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('noOfPackageMawb')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"noOfPieceHawb\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">No of packages</p>\r\n                            <input maxlength=\"50\" formControlName=\"noOfPieceHawb\"\r\n                                [ngClass]=\"shipmentInfo.get('noOfPieceHawb')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('noOfPieceHawb')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"actionType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Action Type</p>\r\n                            <input maxlength=\"50\" formControlName=\"actionType\"\r\n                                [ngClass]=\"shipmentInfo.get('actionType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('actionType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"forwardReferenceNumber\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Forward Ref No</p>\r\n                            <input maxlength=\"50\" formControlName=\"forwardReferenceNumber\"\r\n                                [ngClass]=\"shipmentInfo.get('forwardReferenceNumber')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('forwardReferenceNumber')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"countryOfOrigin\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Country of Origin</p>\r\n                            <p-dropdown [options]=\"countryIdListOrigin\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"countryOfOrigin\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('countryOfOrigin')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"countryOfDestination\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Country of Destination</p>\r\n                            <p-dropdown [options]=\"countryIdListOrigin\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"countryOfDestination\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('countryOfDestination')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"workerCode\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Worker <Code></Code></p>\r\n                            <input maxlength=\"50\" formControlName=\"workerCode\"\r\n                                [ngClass]=\"shipmentInfo.get('workerCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('workerCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"priority\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Priority</p>\r\n                            <input maxlength=\"50\" formControlName=\"priority\"\r\n                                [ngClass]=\"shipmentInfo.get('priority')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('priority')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- \r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"manufacturer\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Manufacturer</p>\r\n                            <input maxlength=\"50\" formControlName=\"manufacturer\"\r\n                                [ngClass]=\"shipmentInfo.get('manufacturer')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('manufacturer')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"courierPartner\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Courier Partner <Code></Code></p>\r\n                            <input maxlength=\"50\" formControlName=\"courierPartner\"\r\n                                [ngClass]=\"shipmentInfo.get('courierPartner')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('courierPartner')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"courierAccount\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Courier Account <Code></Code></p>\r\n                            <input maxlength=\"50\" formControlName=\"courierAccount\"\r\n                                [ngClass]=\"shipmentInfo.get('courierAccount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('courierAccount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"courierPartnerReferenceNumber\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Courier Ref No <Code></Code></p>\r\n                            <input maxlength=\"50\" formControlName=\"courierPartnerReferenceNumber\"\r\n                                [ngClass]=\"shipmentInfo.get('courierPartnerReferenceNumber')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('courierPartnerReferenceNumber')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceNumber\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Number</p>\r\n                            <p-inputGroup>\r\n                                <input maxlength=\"50\"\r\n                                    [ngClass]=\"shipmentInfo.get('invoiceNumber')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    pKeyFilter=\"num\" formControlName=\"invoiceNumber\" pInputText placeholder=\"Enter\" />\r\n                                <button type=\"button\" pButton (click)=\"fileInput.click()\" class=\"bgBlack border-0\"><i\r\n                                        class=\"bi bi-upload\"></i></button>\r\n                            </p-inputGroup>\r\n                            <mat-error *ngIf=\"errorHandlingShipment('invoiceNumber')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <input type=\"file\" #fileInput style=\"display:none\" (change)=\"selectFiles($event)\" />\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceAmount\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Amount </p>\r\n                            <input maxlength=\"50\" pKeyFilter=\"num\" formControlName=\"invoiceAmount\"\r\n                                [ngClass]=\"consignment.get('invoiceAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n\r\n                            <mat-error *ngIf=\"errorHandlingShipment('invoiceAmount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" *ngIf=\"this.shipmentInfo.controls.invoiceUrl.value\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice URL </p>\r\n                            <p-inputGroup>\r\n                                <input maxlength=\"500\"\r\n                                    [ngClass]=\"shipmentInfo.get('invoiceUrl')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    formControlName=\"invoiceUrl\" pInputText placeholder=\"Enter\" />\r\n                                <button type=\"button\" pButton\r\n                                    (click)=\"downloadInvoice(this.shipmentInfo.controls.invoiceUrl.value);\"\r\n                                    class=\"bgBlack border-0\"><i class=\"bi bi-download\"></i></button>\r\n                            </p-inputGroup>\r\n                            <mat-error *ngIf=\"errorHandlingShipment('invoiceUrl')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"incoTerms\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Inco Terms</p>\r\n                            <p-dropdown [options]=\"incoTerms\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"incoTerms\"\r\n                                [ngClass]=\"shipmentInfo.get('incoTerms')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('incoTerms')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"paymentType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Payment Type</p>\r\n                            <p-dropdown [options]=\"paymentType\" (onChange)=\"paymentChange()\" placeholder=\"Select\"\r\n                                filter=\"true\" formControlName=\"paymentType\"\r\n                                [ngClass]=\"shipmentInfo.get('paymentType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('paymentType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codCollectionMode\"\r\n                            *ngIf=\"showPaymentTypeFields\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Collection Mode</p>\r\n                            <p-dropdown [options]=\"codCollectionMode\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"codCollectionMode\"\r\n                                [ngClass]=\"shipmentInfo.get('codCollectionMode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('codCollectionMode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codAmount\" *ngIf=\"showPaymentTypeFields\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Amount</p>\r\n                            <input maxlength=\"50\" formControlName=\"codAmount\"\r\n                                [ngClass]=\"shipmentInfo.get('codAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('codAmount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codFavorOf\" *ngIf=\"showPaymentTypeFields\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Favor Of</p>\r\n                            <input maxlength=\"50\" formControlName=\"codFavorOf\"\r\n                                [ngClass]=\"shipmentInfo.get('codFavorOf')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingShipment('codFavorOf')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n                    <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/operation/consignment\">Cancel</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveShipment()\">Next</button>\r\n                </div>\r\n            </p-tabPanel>\r\n\r\n            <p-tabPanel header=\"Package Details\" [disabled]=\"disabledPiece\">\r\n                <form [formGroup]=\"piece\" class=\"mt-1\">\r\n                    <p-table class=\"paddingZero\" [scrollable]=\"true\" scrollHeight=\"calc(100vh - 24.8rem)\"\r\n                        [value]=\"this.piece.controls.pieceDetails.controls\">\r\n                        <ng-template pTemplate=\"header\">\r\n                            <tr>\r\n                                <th>Piece No</th>\r\n                                <th>Product Type</th>\r\n                                <th>No of Items</th>\r\n                                <th>Total Value</th>\r\n                                <th>Currency</th>\r\n                                <th style=\"min-width: 9rem; justify-content: center;\">\r\n                                    Actions</th>\r\n                            </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate=\"body\" let-item let-i=\"rowIndex\" let-rowData>\r\n                            <tr [formGroup]=\"item\">\r\n\r\n                                <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\"\r\n                                        formControlName=\"pieceId\"></td>\r\n                                <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\"\r\n                                        formControlName=\"pieceProductCode\">\r\n                                </td>\r\n                                <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\" formControlName=\"tags\"></td>\r\n                                <td><input class=\"inputborderLess pl-3\" placeholder=\"Enter\"\r\n                                        formControlName=\"pieceValue\"></td>\r\n                                <td>\r\n                                    <p-dropdown [options]=\"currencyDropdown\" placeholder=\"Select\" filter=\"true\"\r\n                                        formControlName=\"pieceCurrency\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                        [panelStyle]=\"{'width':'100%'}\" />\r\n                                </td>\r\n                                <td style=\"padding-left: 1.5rem !important;\">\r\n                                    <img type=\"button\" src=\"./assets/common/actions.png\" (click)=\"op.toggle($event)\"\r\n                                        alt=\"\" srcset=\"\" style=\"height: 1.4rem;\">\r\n                                    <p-overlayPanel [style]=\"{ width: '180' }\" #op>\r\n                                        <div class=\"d-flex flex-column\">\r\n                                            <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                                (click)=\"dimension(this.pageToken.pageflow, 'piece', i); op.hide()\"><img\r\n                                                    src=\"./assets/common/dimension.png\"\r\n                                                    style=\"padding-right: 10px;width: 2rem;\"\r\n                                                    srcset=\"\">Dimension</button>\r\n                                            <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                                (click)=\"opendialog(this.pageToken.pageflow, i); op.hide()\"><img\r\n                                                    src=\"./assets/common/add.png\"\r\n                                                    style=\"padding-right: 10px;width: 2rem;\" srcset=\"\">Item</button>\r\n                                            <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                                (click)=\"removePieceDetail(i, rowData); op.hide()\"><img\r\n                                                    src=\"./assets/common/delete1x.png\"\r\n                                                    style=\"padding-right: 10px;width: 2rem;\" srcset=\"\">Delete</button>\r\n                                            <button style=\"width: 8rem;\" mat-menu-item class=\"w-100\"\r\n                                                (click)=\"imageupload(this.pageToken.pageflow, i); op.hide()\"><img\r\n                                                    src=\"./assets/common/image.png\"\r\n                                                    style=\"padding-right: 10px;width: 2rem;\" srcset=\"\">Image</button>\r\n                                        </div>\r\n                                    </p-overlayPanel>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        </ng-template>\r\n                    </p-table>\r\n                </form>\r\n                <!-- <div class=\"d-flex mt-1 justify-content-center\" style=\"position: absolute; right: 50%; bottom: 7%;\">\r\n                    <button (click)=\"addPieceDetail()\" type=\"button\"\r\n                        class=\"btn ml-2 addNewbuttom bgOrange text-white\"><i class=\"bi bi-plus-square pr-2\"></i> Add\r\n                        New</button>\r\n                </div> -->\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n\r\n                    <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"savePiece()\">Next</button>\r\n                </div>\r\n            </p-tabPanel>\r\n\r\n            <p-tabPanel header=\"Consignment\" [disabled]=\"disabledConsignment\">\r\n                <form [formGroup]=\"consignment\">\r\n                    <div class=\"row scrollNew22\">\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"partnerMasterAirwayBill\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Partner MAWB</p>\r\n                            <input maxlength=\"50\" formControlName=\"partnerMasterAirwayBill\"\r\n                                [ngClass]=\"consignment.get('partnerMasterAirwayBill')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('partnerMasterAirwayBill')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"partnerHouseAirwayBill\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Partner HAWB</p>\r\n                            <input maxlength=\"50\" formControlName=\"partnerHouseAirwayBill\"\r\n                                [ngClass]=\"consignment.get('partnerHouseAirwayBill')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('partnerHouseAirwayBill')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"airportOriginCode\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Airport Origin Code</p>\r\n                            <input maxlength=\"50\" formControlName=\"airportOriginCode\"\r\n                                [ngClass]=\"consignment.get('airportOriginCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('airportOriginCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"flightNo\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Flight No</p>\r\n                            <input maxlength=\"50\" formControlName=\"flightNo\"\r\n                                [ngClass]=\"consignment.get('flightNo')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('flightNo')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"flightArrivalTime\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Flight ETA</p>\r\n                            <p-calendar formControlName=\"flightArrivalTime\" appendTo=\"body\"\r\n                                [ngClass]=\"consignment.get('flightArrivalTime')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100 small-calendar\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\"\r\n                                [showIcon]=\"true\" />\r\n\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('flightArrivalTime')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"noOfPackages\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">No of Packages</p>\r\n                            <input maxlength=\"50\" formControlName=\"noOfPackages\"\r\n                                [ngClass]=\"consignment.get('noOfPackages')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('noOfPackages')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"flightName\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Flight Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"flightName\"\r\n                                [ngClass]=\"consignment.get('flightName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('flightName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"packageType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Package Type</p>\r\n                            <input maxlength=\"50\" formControlName=\"packageType\"\r\n                                [ngClass]=\"consignment.get('packageType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('packageType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"length\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Length</p>\r\n                            <input maxlength=\"50\" pKeyFilter=\"num\" formControlName=\"length\"\r\n                                (change)=\"calculateVolume(this.consignment)\"\r\n                                [ngClass]=\"consignment.get('length')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('length')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"width\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Width</p>\r\n                            <input maxlength=\"50\" pKeyFilter=\"num\" formControlName=\"width\"\r\n                                (change)=\"calculateVolume(this.consignment)\"\r\n                                [ngClass]=\"consignment.get('width')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('width')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"height\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Height</p>\r\n                            <input maxlength=\"50\" pKeyFilter=\"num\" formControlName=\"height\"\r\n                                (change)=\"calculateVolume(this.consignment)\"\r\n                                [ngClass]=\"consignment.get('height')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('height')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"dimensionUnit\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Dimension Unit</p>\r\n                            <input maxlength=\"50\" formControlName=\"dimensionUnit\"\r\n                                [ngClass]=\"consignment.get('dimensionUnit')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('dimensionUnit')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"weight\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Weight</p>\r\n                            <input maxlength=\"50\" pKeyFilter=\"num\" formControlName=\"weight\"\r\n                                [ngClass]=\"consignment.get('weight')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('weight')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"weightUnit\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Weight Unit</p>\r\n                            <input maxlength=\"50\" formControlName=\"weightUnit\"\r\n                                [ngClass]=\"consignment.get('weightUnit')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('weightUnit')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"volume\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Volume</p>\r\n                            <input maxlength=\"50\" formControlName=\"volume\"\r\n                                [ngClass]=\"consignment.get('volume')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('volume')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"volumeUnit\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Volume Unit</p>\r\n                            <input maxlength=\"50\" formControlName=\"volumeUnit\"\r\n                                [ngClass]=\"consignment.get('volumeUnit')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('volumeUnit')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"netWeight\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Net Weight</p>\r\n                            <input maxlength=\"50\" formControlName=\"netWeight\"\r\n                                [ngClass]=\"consignment.get('netWeight')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('netWeight')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"grossWeight\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Gross Weight</p>\r\n                            <input maxlength=\"50\" formControlName=\"grossWeight\"\r\n                                [ngClass]=\"consignment.get('grossWeight')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('grossWeight')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceDateFE\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Date</p>\r\n                            <p-calendar formControlName=\"invoiceDateFE\" appendTo=\"body\"\r\n                                [ngClass]=\"consignment.get('invoiceDateFE')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100 small-calendar\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\"\r\n                                [showIcon]=\"true\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('invoiceDateFE')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceSupplierName\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Supplier Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"invoiceSupplierName\"\r\n                                [ngClass]=\"consignment.get('invoiceSupplierName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('invoiceSupplierName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"goodsDescription\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Goods Description</p>\r\n                            <input maxlength=\"500\" formControlName=\"goodsDescription\"\r\n                                [ngClass]=\"consignment.get('goodsDescription')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('goodsDescription')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"notifyParty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Notify Party</p>\r\n                            <input maxlength=\"500\" formControlName=\"notifyParty\"\r\n                                [ngClass]=\"consignment.get('notifyParty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('notifyParty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentValue\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                            <input maxlength=\"500\" formControlName=\"consignmentValue\"\r\n                                [ngClass]=\"consignment.get('consignmentValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('consignmentValue')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentCurrency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Currency</p>\r\n                            <p-dropdown [options]=\"currencyDropdown\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"consignmentCurrency\"\r\n                                [ngClass]=\"consignment.get('consignmentCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingConsignment('consignmentCurrency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n                        <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                        <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveConsignment()\">Next</button>\r\n                    </div>\r\n                </form>\r\n            </p-tabPanel>\r\n\r\n\r\n\r\n            <p-tabPanel header=\"Origin\" [disabled]=\"disabledSender\">\r\n                <form [formGroup]=\"senderInfo\">\r\n                    <div class=\"row scrollNew22\">\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"shipperId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Shipper ID</p>\r\n                            <input maxlength=\"50\" formControlName=\"shipperId\"\r\n                                [ngClass]=\"senderInfo.get('shipperId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('shipperId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"name\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"name\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.name')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.name')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"companyName\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Company Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"companyName\"\r\n                                [ngClass]=\"senderInfo.get('companyName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('companyName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressLine1\"\r\n                            formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Line 1 </p>\r\n                            <input maxlength=\"50\" formControlName=\"addressLine1\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.addressLine1')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.addressLine1')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressLine2\"\r\n                            formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Line 2 </p>\r\n                            <input maxlength=\"50\" formControlName=\"addressLine2\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.addressLine2')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.addressLine2')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"country\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Country</p>\r\n                            <p-dropdown [options]=\"countryIdListOrigin\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"country\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.country')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.country')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"state\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">State</p>\r\n                            <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"state\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.state')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.state')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"district\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">District</p>\r\n                            <p-dropdown [options]=\"districtIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"district\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.district')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.district')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"city\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">City</p>\r\n                            <p-dropdown [options]=\"cityIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"city\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.city')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.city')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"pinCode\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Pincode</p>\r\n                            <input maxlength=\"50\" formControlName=\"pinCode\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.pinCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.pinCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"latitude\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Latitude</p>\r\n                            <input maxlength=\"50\" formControlName=\"latitude\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.latitude')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.latitude')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"longitude\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Longitude</p>\r\n                            <input maxlength=\"50\" formControlName=\"longitude\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.longitude')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.longitude')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"phone\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Phone</p>\r\n                            <input maxlength=\"50\" formControlName=\"phone\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.phone')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.phone')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"alternatePhone\"\r\n                            formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Alternate Phone No</p>\r\n                            <input maxlength=\"50\" formControlName=\"alternatePhone\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.alternatePhone')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.alternatePhone')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"email\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Email</p>\r\n                            <input maxlength=\"50\" formControlName=\"email\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.email')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.email')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressHubCode\"\r\n                            formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Hub Code</p>\r\n                            <input maxlength=\"50\" formControlName=\"addressHubCode\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.addressHubCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.addressHubCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"accountId\" formGroupName=\"originDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Account ID</p>\r\n                            <input maxlength=\"50\" formControlName=\"accountId\"\r\n                                [ngClass]=\"senderInfo.get('originDetails.accountId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('originDetails.accountId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n\r\n                    <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveSender()\">Next</button>\r\n                </div>\r\n            </p-tabPanel>\r\n\r\n            <p-tabPanel header=\"Destination\" [disabled]=\"disabledDelivery\">\r\n                <form [formGroup]=\"deliveryInfo\">\r\n                    <div class=\"row scrollNew22\">\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consigneeName\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignee Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"consigneeName\"\r\n                                [ngClass]=\"deliveryInfo.get('consigneeName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery( 'consigneeName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consigneeCivilId\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignee Civil ID</p>\r\n                            <input maxlength=\"50\" formControlName=\"consigneeCivilId\"\r\n                                [ngClass]=\"deliveryInfo.get('consigneeCivilId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery( 'consigneeCivilId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"name\" formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignee Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"name\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.name')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.name')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressLine1\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Line 1 </p>\r\n                            <input maxlength=\"50\" formControlName=\"addressLine1\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.addressLine1')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.addressLine1')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressLine2\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Line 2 </p>\r\n                            <input maxlength=\"50\" formControlName=\"addressLine2\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.addressLine2')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.addressLine2')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"country\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Country</p>\r\n                            <p-dropdown [options]=\"countryIdListDestination\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"country\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.country')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.country')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"state\" formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">State</p>\r\n                            <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"state\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.state')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.state')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"district\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">District</p>\r\n                            <p-dropdown [options]=\"districtIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"district\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.district')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.district')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"city\" formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">City</p>\r\n                            <p-dropdown [options]=\"cityIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"city\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.city')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                appendTo=\"body\" [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.city')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"pinCode\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Pincode</p>\r\n                            <input maxlength=\"50\" formControlName=\"pinCode\"\r\n                                [ngClass]=\"senderInfo.get('destinationDetails.pinCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingSender('destinationDetails.pinCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"latitude\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Latitude</p>\r\n                            <input maxlength=\"50\" formControlName=\"latitude\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.latitude')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.latitude')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"longitude\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Longitude</p>\r\n                            <input maxlength=\"50\" formControlName=\"longitude\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.longitude')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.longitude')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"phone\" formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Phone</p>\r\n                            <input maxlength=\"50\" formControlName=\"phone\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.phone')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.phone')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"alternatePhone\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Alternate Phone No</p>\r\n                            <input maxlength=\"50\" formControlName=\"alternatePhone\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.alternatePhone')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.alternatePhone')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"email\" formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Email</p>\r\n                            <input maxlength=\"50\" formControlName=\"email\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.email')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.email')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"companyName\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Company Name</p>\r\n                            <input maxlength=\"50\" formControlName=\"companyName\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.companyName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.companyName')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addressHubCode\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Address Hub Code</p>\r\n                            <input maxlength=\"50\" formControlName=\"addressHubCode\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.addressHubCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.addressHubCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"accountId\"\r\n                            formGroupName=\"destinationDetails\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Account ID</p>\r\n                            <input maxlength=\"50\" formControlName=\"accountId\"\r\n                                [ngClass]=\"deliveryInfo.get('destinationDetails.accountId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingDelivery('destinationDetails.accountId')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n\r\n                        <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                        <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveDelivery()\">Next</button>\r\n                    </div>\r\n                </form>\r\n            </p-tabPanel>\r\n\r\n            <p-tabPanel header=\"CN Tracking\" *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                <p-table #consignmentStatusTag [columns]=\"cnCols\" [value]=\"cnTable\" class=\"custom-table\"\r\n                    [scrollable]=\"true\" selectionMode=\"multiple\" [(selection)]=\"selectedCNTable\"\r\n                    scrollHeight=\"calc(100vh - 22.8rem)\" sortField=\"hawbTimeStamp\" [sortOrder]=\"-1\"\r\n                    [tableStyle]=\"{'width': '84rem'}\" styleClass=\"p-datatable-sm\">\r\n                    <ng-template pTemplate=\"header\" let-columns>\r\n                        <tr>\r\n                            <th style=\"width: 5rem;\">\r\n                                <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                            </th>\r\n                            <th *ngFor=\"let col of columns\">\r\n                                {{ col.header }}\r\n                            </th>    \r\n                            <th style=\"width: 6rem;\">\r\n                                Piece Details\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\" let-i=\"rowIndex\">\r\n                        <tr>\r\n                            <td style=\"width: 5rem; justify-content: center;\">\r\n                                <p-tableCheckbox [disabled]=\"true\" class=\"pl-3\" [value]=\"rowData\" />\r\n                            </td>\r\n                            <td *ngFor=\"let col of columns\" [style]=\"col.style\">\r\n                                <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                                    {{ rowData[col.field] }}\r\n                                </ng-container>\r\n                                <ng-template #dateTemplate>\r\n                                    {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                                </ng-template>\r\n                            </td>\r\n                            <td style=\"width: 5rem;  text-align: center;\">\r\n                                <img src=\"./assets/common/document.png\" style=\"padding-right: 10px;width: 2rem; cursor: pointer;\" srcset=\"\" (click)=\"cnTablePopup('Popup',rowData);\">\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"emptymessage\">\r\n                        <tr>\r\n                            <td [attr.colspan]=\"4\">\r\n                                <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n\r\n                    <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"activeIndex = activeIndex + 1\">Next</button>\r\n                </div>\r\n\r\n            </p-tabPanel>\r\n\r\n            <p-tabPanel header=\"Billing\" [disabled]=\"disabledBilling\">\r\n                <form [formGroup]=\"billing\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" [formGroup]=\"consignment\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Currency</p>\r\n                            <input maxlength=\"500\" [value]=\"this.consignment.controls.consignmentCurrency.value\"\r\n                                [disabled]=\"true\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" [formGroup]=\"consignment\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                            <input maxlength=\"500\" [value]=\"this.consignment.controls.consignmentValue.value\"\r\n                                [disabled]=\"true\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"exchangeRate\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Exchange Rate</p>\r\n                            <input maxlength=\"50\" formControlName=\"exchangeRate\"\r\n                                [ngClass]=\"billing.get('exchangeRate')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('exchangeRate')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"iata\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">IATA</p>\r\n                            <input maxlength=\"50\" formControlName=\"iata\"\r\n                                [ngClass]=\"billing.get('iata')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('iata')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsInsurance\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customs Insurance</p>\r\n                            <input maxlength=\"50\" formControlName=\"customsInsurance\"\r\n                                [ngClass]=\"billing.get('customsInsurance')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('customsInsurance')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"dutyPercentage\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Duty Percentage</p>\r\n                            <input maxlength=\"50\" formControlName=\"dutyPercentage\"\r\n                                [ngClass]=\"billing.get('dutyPercentage')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('dutyPercentage')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentValueLocal\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value Local</p>\r\n                            <input maxlength=\"50\" formControlName=\"consignmentValueLocal\"\r\n                                [ngClass]=\"billing.get('consignmentValueLocal')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('consignmentValueLocal')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addIata\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value with IATA</p>\r\n                            <input maxlength=\"50\" formControlName=\"addIata\"\r\n                                [ngClass]=\"billing.get('addIata')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('addIata')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addInsurance\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Add Insurance</p>\r\n                            <input maxlength=\"50\" formControlName=\"addInsurance\"\r\n                                [ngClass]=\"billing.get('addInsurance')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('addInsurance')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsValue\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customs Value</p>\r\n                            <input maxlength=\"50\" formControlName=\"customsValue\"\r\n                                [ngClass]=\"billing.get('customsValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('customsValue')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"calculatedTotalDuty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Calculated Total Duty</p>\r\n                            <input maxlength=\"50\" formControlName=\"calculatedTotalDuty\"\r\n                                [ngClass]=\"billing.get('calculatedTotalDuty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('calculatedTotalDuty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"dduCharge\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">DDU Charge</p>\r\n                            <input maxlength=\"50\" formControlName=\"dduCharge\"\r\n                                [ngClass]=\"billing.get('dduCharge')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('dduCharge')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"specialApprovalCharge\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Special Approval Charge</p>\r\n                            <input maxlength=\"50\" formControlName=\"specialApprovalCharge\"\r\n                                [ngClass]=\"billing.get('specialApprovalCharge')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('specialApprovalCharge')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"actualDuty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Actual Duty</p>\r\n                            <input maxlength=\"50\" formControlName=\"actualDuty\"\r\n                                [ngClass]=\"billing.get('actualDuty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('actualDuty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"paymentType\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Payment Type</p>\r\n                        <input maxlength=\"50\" formControlName=\"paymentType\"\r\n                            [ngClass]=\"senderInfo.get('paymentType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('paymentType')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"incoTerms\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Inco Terms</p>\r\n                        <input maxlength=\"50\" formControlName=\"incoTerms\"\r\n                            [ngClass]=\"senderInfo.get('incoTerms')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('incoTerms')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentValue\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                        <input maxlength=\"50\" formControlName=\"consignmentValue\"\r\n                            [ngClass]=\"senderInfo.get('consignmentValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('consignmentValue')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"actualCurrency\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Actual Currency</p>\r\n                        <input maxlength=\"50\" formControlName=\"actualCurrency\"\r\n                            [ngClass]=\"senderInfo.get('actualCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('actualCurrency')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"currency\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Currency</p>\r\n                        <input maxlength=\"50\" formControlName=\"currency\"\r\n                            [ngClass]=\"senderInfo.get('currency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('currency')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"freightCurrency\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Freight Currency</p>\r\n                        <input maxlength=\"50\" formControlName=\"freightCurrency\"\r\n                            [ngClass]=\"senderInfo.get('freightCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('freightCurrency')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div>\r\n                    <div class=\"col-3 marginFieldNew borderRadius12\" id=\"freightCharges\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Freight Charges</p>\r\n                        <input maxlength=\"50\" formControlName=\"freightCharges\"\r\n                            [ngClass]=\"senderInfo.get('freightCharges')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('freightCharges')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"countryOfSupply\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Country of Supply</p>\r\n                        <p-dropdown [options]=\"countryIdListOrigin\" placeholder=\"Select\" filter=\"true\"\r\n                            formControlName=\"countryOfSupply\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                            [panelStyle]=\"{'width':'100%'}\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('countryOfSupply')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"declaredValue\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                        <input maxlength=\"50\" formControlName=\"declaredValue\"\r\n                            [ngClass]=\"senderInfo.get('declaredValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('declaredValue')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentCurrency\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Currency</p>\r\n                        <input maxlength=\"50\" formControlName=\"consignmentCurrency\"\r\n                            [ngClass]=\"senderInfo.get('consignmentCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('consignmentCurrency')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n\r\n\r\n\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsCurrency\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Customs Currency</p>\r\n                        <input maxlength=\"50\" formControlName=\"customsCurrency\"\r\n                            [ngClass]=\"senderInfo.get('customsCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('customsCurrency')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codAmount\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">COD Amount</p>\r\n                        <input maxlength=\"50\" formControlName=\"codAmount\"\r\n                            [ngClass]=\"senderInfo.get('codAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('codAmount')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div>\r\n                    <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codFavorOf\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">COD Favour Of</p>\r\n                        <input maxlength=\"50\" formControlName=\"codFavorOf\"\r\n                            [ngClass]=\"senderInfo.get('codFavorOf')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('codFavorOf')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div>\r\n                    <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codCollectionMode\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">COD Collection Mode </p>\r\n                        <input maxlength=\"50\" formControlName=\"codCollectionMode\"\r\n                            [ngClass]=\"senderInfo.get('codCollectionMode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('codCollectionMode')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"declaredValueWithoutTax\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Declared Value Without Tax </p>\r\n                <input maxlength=\"50\" formControlName=\"declaredValueWithoutTax\"\r\n                    [ngClass]=\"senderInfo.get('declaredValueWithoutTax')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                <mat-error *ngIf=\"errorHandlingBilling('declaredValueWithoutTax')\"\r\n                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n            </div> \r\n                    <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceAmount\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Amount </p>\r\n                        <input maxlength=\"50\" formControlName=\"invoiceAmount\"\r\n                            [ngClass]=\"senderInfo.get('invoiceAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('invoiceAmount')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div>\r\n                    <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceUrl\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Invoice URL </p>\r\n                        <input maxlength=\"500\" formControlName=\"invoiceUrl\"\r\n                            [ngClass]=\"senderInfo.get('invoiceUrl')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('invoiceUrl')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"productCode\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Product Code</p>\r\n                        <input maxlength=\"50\" formControlName=\"productCode\"\r\n                            [ngClass]=\"senderInfo.get('productCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('productCode')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"amount\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Amount</p>\r\n                        <input maxlength=\"50\" formControlName=\"amount\"\r\n                            [ngClass]=\"senderInfo.get('amount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('amount')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"isCustomsDeclarable\">\r\n                        <p class=\"formControlLabel f600 textBlack mb-0\">Is customs Declarable</p>\r\n                        <input maxlength=\"50\" formControlName=\"isCustomsDeclarable\"\r\n                            [ngClass]=\"senderInfo.get('isCustomsDeclarable')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        <mat-error *ngIf=\"errorHandlingBilling('isCustomsDeclarable')\"\r\n                            class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                    </div> -->\r\n                    </div>\r\n                </form>\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n                    <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveBilling()\">Save</button>\r\n                </div>\r\n            </p-tabPanel>\r\n            <p-tabPanel header=\"Duty Charges\" *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                <p-table #consignmentTag [columns]=\"cols\" [value]=\"billingTable\" class=\"custom-table\"\r\n                    [scrollable]=\"true\" selectionMode=\"multiple\" [(selection)]=\"selectedConsignment\"\r\n                    scrollHeight=\"calc(100vh - 22.8rem)\" sortField=\"consignmentId\" [sortOrder]=\"-1\"\r\n                    [tableStyle]=\"{'width': '130rem'}\" styleClass=\"p-datatable-sm\">\r\n                    <ng-template pTemplate=\"header\" let-columns>\r\n                        <tr>\r\n                            <th style=\"width: 5rem;\">\r\n                                <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                            </th>\r\n                            <th *ngFor=\"let col of columns\">\r\n                                {{ col.header }}\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                        <tr>\r\n                            <td style=\"width: 5rem; justify-content: center;\">\r\n                                <p-tableCheckbox [disabled]=\"true\" class=\"pl-3\" [value]=\"rowData\" />\r\n                            </td>\r\n                            <td *ngFor=\"let col of columns\" [style]=\"col.style\">\r\n                                <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                                    {{ rowData[col.field] }}\r\n                                </ng-container>\r\n                                <ng-template #dateTemplate>\r\n                                    {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                                </ng-template>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"footer\" let-columns>\r\n                        <tr>\r\n                            <td></td>\r\n                            <ng-container *ngFor=\"let col of columns\">\r\n                                <ng-container *ngIf=\"col.showFooter\">\r\n                                    <td>\r\n                                        {{ calculateFooterTotal(col.field) != 0 ? calculateFooterTotal(col.field) : '' }}\r\n                                    </td>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"!col.showFooter\">\r\n                                    <td></td>\r\n                                </ng-container>\r\n                            </ng-container>\r\n                            <td></td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"emptymessage\">\r\n                        <tr>\r\n                            <td [attr.colspan]=\"4\">\r\n                                <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n                    <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n                    <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveBilling()\">Save</button>\r\n                </div>\r\n            </p-tabPanel>\r\n\r\n\r\n        </p-tabView>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!--\r\n   <form [formGroup]=\"billing\">\r\n                    <div class=\"row scrollNew22\">\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" [formGroup]=\"consignment\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Currency</p>\r\n                            <input maxlength=\"500\" [value]=\"this.consignment.controls.consignmentCurrency.value\" [disabled]=\"true\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\"  [formGroup]=\"consignment\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                            <input maxlength=\"500\" [value]=\"this.consignment.controls.consignmentValue.value\"  [disabled]=\"true\"\r\n                            class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"exchangeRate\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Exchange Rate</p>\r\n                            <input maxlength=\"50\" formControlName=\"exchangeRate\"\r\n                                [ngClass]=\"billing.get('exchangeRate')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('exchangeRate')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>    \r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"iata\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">IATA</p>\r\n                            <input maxlength=\"50\" formControlName=\"iata\"\r\n                                [ngClass]=\"billing.get('iata')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('iata')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsInsurance\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customs Insurance</p>\r\n                            <input maxlength=\"50\" formControlName=\"customsInsurance\"\r\n                                [ngClass]=\"billing.get('customsInsurance')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('customsInsurance')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"duty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Duty Percentage</p>\r\n                            <input maxlength=\"50\" formControlName=\"duty\"\r\n                                [ngClass]=\"billing.get('duty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('duty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentValueLocal\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value Local</p>\r\n                            <input maxlength=\"50\" formControlName=\"consignmentValueLocal\"\r\n                                [ngClass]=\"billing.get('consignmentValueLocal')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('consignmentValueLocal')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addIata\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value with IATA</p>\r\n                            <input maxlength=\"50\" formControlName=\"addIata\"\r\n                                [ngClass]=\"billing.get('addIata')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('addIata')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"addInsurance\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Add Insurance</p>\r\n                            <input maxlength=\"50\" formControlName=\"addInsurance\"\r\n                                [ngClass]=\"billing.get('addInsurance')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('addInsurance')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsValue\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customs Value</p>\r\n                            <input maxlength=\"50\" formControlName=\"customsValue\"\r\n                                [ngClass]=\"billing.get('customsValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('customsValue')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"calculatedTotalDuty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Calculated Total Duty</p>\r\n                            <input maxlength=\"50\" formControlName=\"calculatedTotalDuty\"\r\n                                [ngClass]=\"billing.get('calculatedTotalDuty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('calculatedTotalDuty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"dduCharge\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">DDU Charge</p>\r\n                            <input maxlength=\"50\" formControlName=\"dduCharge\"\r\n                                [ngClass]=\"billing.get('dduCharge')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('dduCharge')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>                      \r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"specialApprovalCharge\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Special Approval Charge</p>\r\n                            <input maxlength=\"50\" formControlName=\"specialApprovalCharge\"\r\n                                [ngClass]=\"billing.get('specialApprovalCharge')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('specialApprovalCharge')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"actualDuty\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Actual Duty</p>\r\n                            <input maxlength=\"50\" formControlName=\"actualDuty\"\r\n                                [ngClass]=\"billing.get('actualDuty')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('actualDuty')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"paymentType\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Payment Type</p>\r\n                            <input maxlength=\"50\" formControlName=\"paymentType\"\r\n                                [ngClass]=\"senderInfo.get('paymentType')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('paymentType')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"incoTerms\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Inco Terms</p>\r\n                            <input maxlength=\"50\" formControlName=\"incoTerms\"\r\n                                [ngClass]=\"senderInfo.get('incoTerms')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('incoTerms')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentValue\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                            <input maxlength=\"50\" formControlName=\"consignmentValue\"\r\n                                [ngClass]=\"senderInfo.get('consignmentValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('consignmentValue')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"actualCurrency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Actual Currency</p>\r\n                            <input maxlength=\"50\" formControlName=\"actualCurrency\"\r\n                                [ngClass]=\"senderInfo.get('actualCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('actualCurrency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"currency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Currency</p>\r\n                            <input maxlength=\"50\" formControlName=\"currency\"\r\n                                [ngClass]=\"senderInfo.get('currency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('currency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"freightCurrency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Freight Currency</p>\r\n                            <input maxlength=\"50\" formControlName=\"freightCurrency\"\r\n                                [ngClass]=\"senderInfo.get('freightCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('freightCurrency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"freightCharges\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Freight Charges</p>\r\n                            <input maxlength=\"50\" formControlName=\"freightCharges\"\r\n                                [ngClass]=\"senderInfo.get('freightCharges')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('freightCharges')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"countryOfSupply\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Country of Supply</p>\r\n                            <p-dropdown [options]=\"countryIdListOrigin\" placeholder=\"Select\" filter=\"true\"\r\n                                formControlName=\"countryOfSupply\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                [panelStyle]=\"{'width':'100%'}\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('countryOfSupply')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"declaredValue\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Value</p>\r\n                            <input maxlength=\"50\" formControlName=\"declaredValue\"\r\n                                [ngClass]=\"senderInfo.get('declaredValue')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('declaredValue')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"consignmentCurrency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Consignment Currency</p>\r\n                            <input maxlength=\"50\" formControlName=\"consignmentCurrency\"\r\n                                [ngClass]=\"senderInfo.get('consignmentCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('consignmentCurrency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n\r\n\r\n\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"customsCurrency\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Customs Currency</p>\r\n                            <input maxlength=\"50\" formControlName=\"customsCurrency\"\r\n                                [ngClass]=\"senderInfo.get('customsCurrency')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('customsCurrency')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codAmount\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Amount</p>\r\n                            <input maxlength=\"50\" formControlName=\"codAmount\"\r\n                                [ngClass]=\"senderInfo.get('codAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('codAmount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codFavorOf\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Favour Of</p>\r\n                            <input maxlength=\"50\" formControlName=\"codFavorOf\"\r\n                                [ngClass]=\"senderInfo.get('codFavorOf')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('codFavorOf')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"codCollectionMode\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">COD Collection Mode </p>\r\n                            <input maxlength=\"50\" formControlName=\"codCollectionMode\"\r\n                                [ngClass]=\"senderInfo.get('codCollectionMode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('codCollectionMode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"declaredValueWithoutTax\">\r\n                    <p class=\"formControlLabel f600 textBlack mb-0\">Declared Value Without Tax </p>\r\n                    <input maxlength=\"50\" formControlName=\"declaredValueWithoutTax\"\r\n                        [ngClass]=\"senderInfo.get('declaredValueWithoutTax')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                        class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                    <mat-error *ngIf=\"errorHandlingBilling('declaredValueWithoutTax')\"\r\n                        class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                </div> \r\n                       <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceAmount\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice Amount </p>\r\n                            <input maxlength=\"50\" formControlName=\"invoiceAmount\"\r\n                                [ngClass]=\"senderInfo.get('invoiceAmount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('invoiceAmount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                        <div class=\"col-3 marginFieldNew borderRadius12\" id=\"invoiceUrl\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Invoice URL </p>\r\n                            <input maxlength=\"500\" formControlName=\"invoiceUrl\"\r\n                                [ngClass]=\"senderInfo.get('invoiceUrl')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('invoiceUrl')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"productCode\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Product Code</p>\r\n                            <input maxlength=\"50\" formControlName=\"productCode\"\r\n                                [ngClass]=\"senderInfo.get('productCode')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('productCode')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"amount\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Amount</p>\r\n                            <input maxlength=\"50\" formControlName=\"amount\"\r\n                                [ngClass]=\"senderInfo.get('amount')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('amount')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div> -->\r\n<!-- <div class=\"col-3 marginFieldNew borderRadius12\" id=\"isCustomsDeclarable\">\r\n                            <p class=\"formControlLabel f600 textBlack mb-0\">Is customs Declarable</p>\r\n                            <input maxlength=\"50\" formControlName=\"isCustomsDeclarable\"\r\n                                [ngClass]=\"senderInfo.get('isCustomsDeclarable')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            <mat-error *ngIf=\"errorHandlingBilling('isCustomsDeclarable')\"\r\n                                class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- \r\n<p-tabPanel header=\"Carrier Info\" [disabled]=\"disabledCarrier\">\r\n    <form [formGroup]=\"carrierInfo\">\r\n        <div class=\"row\">\r\n    \r\n        </div>\r\n    </form>\r\n    <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 3.5%; bottom: 7%;\">\r\n        <button class=\"buttom1 textBlack mx-1\" (click)=\"activeIndex = activeIndex - 1\">Back</button>\r\n        <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"saveCarrier()\">Next</button>\r\n    </div>\r\n</p-tabPanel> -->", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ConsignmentComponent } from './consignment/consignment.component';\r\nimport { ConsignmentNewComponent } from './consignment/consignment-new/consignment-new.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'consignment',component: ConsignmentComponent, data: { title: 'Operations', module: 'Consignment' } },\r\n  {path:'consignment-new/:code',component: ConsignmentNewComponent, data: { title: 'Operations', module: 'Consignment' } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OperationRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OperationRoutingModule } from './operation-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ConsignmentComponent } from './consignment/consignment.component';\r\nimport { ConsignmentNewComponent } from './consignment/consignment-new/consignment-new.component';\r\nimport { ItemDetailsComponent } from './consignment/consignment-new/item-details/item-details.component';\r\nimport { DimensionComponent } from './consignment/consignment-new/dimension/dimension.component';\r\nimport { ImageUploadComponent } from './consignment/consignment-new/image-upload/image-upload.component';\r\nimport { ConsignmentUpdatebulkComponent } from './consignment/consignment-updatebulk/consignment-updatebulk.component';\r\nimport { ConsignmentStatusPopupComponent } from './consignment/consignment-new/consignment-status-popup/consignment-status-popup.component';\r\nimport { DownloadTemplateComponent } from './consignment/download-template/download-template.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConsignmentComponent,\r\n    ConsignmentNewComponent,\r\n    ItemDetailsComponent,\r\n    DimensionComponent,\r\n    ImageUploadComponent,\r\n    ConsignmentUpdatebulkComponent,\r\n    ConsignmentStatusPopupComponent,\r\n    DownloadTemplateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OperationRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class OperationModule { }\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcoB,IAAA,yBAAA,GAAA,OAAA,EAAA,EAA0H,GAAA,KAAA,EAAA;AACrE,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAC7D,IAAA,yBAAA,GAAA,cAAA,EAAA;AAGI,IAAA,qBAAA,YAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,mBAAA,CAAoB;IAAA,CAAA;AAHpC,IAAA,uBAAA,EAGwC;;;;;AADpC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAA,GAAA,CAAA;AAFsC,IAAA,qBAAA,WAAA,OAAA,WAAA,EAAuB,aAAA,UAAA,OAAA,KAAA,IAAA,aAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA,EACyB,cAAA,0BAAA,GAAA,GAAA,CAAA;;;;;;AAK9F,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwH,GAAA,KAAA,EAAA;AACnE,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACxD,IAAA,yBAAA,GAAA,cAAA,IAAA,CAAA;AACgC,IAAA,qBAAA,YAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,eAAA,CAAgB;IAAA,CAAA;AAD5D,IAAA,uBAAA,EAGkF;;;;;AAA9D,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAA,GAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,OAAA,eAAA,EAA2B,aAAA,UAAA,OAAA,KAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA,EAEiD,cAAA,0BAAA,GAAA,GAAA,CAAA;;;;;;AAI5F,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAwH,GAAA,KAAA,EAAA;AACnE,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACxD,IAAA,yBAAA,GAAA,cAAA,IAAA,CAAA;AACgC,IAAA,qBAAA,YAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,eAAA,CAAgB;IAAA,CAAA;AAD5D,IAAA,uBAAA,EAGkF;;;;;AAA9D,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAA,GAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,OAAA,eAAA,EAA2B,aAAA,UAAA,OAAA,KAAA,IAAA,aAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA,EAEmD,cAAA,0BAAA,GAAA,GAAA,CAAA;;;ADd5G,IAAO,6BAAP,MAAO,2BAAyB;EAIpC,YACS,WACyB,MACxB,IACA,MACA,OACA,QACA,MACA,IACA,SACA,gBACA,KACA,MACD,iBACA,kBACA,gBAA8B;AAd9B,SAAA,YAAA;AACyB,SAAA,OAAA;AACxB,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;AACA,SAAA,OAAA;AACA,SAAA,KAAA;AACA,SAAA,UAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AACA,SAAA,OAAA;AACD,SAAA,kBAAA;AACA,SAAA,mBAAA;AACA,SAAA,iBAAA;AAjBT,SAAA,cAAqB,CAAA;AACrB,SAAA,eAAsB,CAAA;AA4BrB,SAAA,OAAO,KAAK,GAAG,MAAM;MACpB,aAAa,CAAC,EAAE;MAChB,WAAW,CAAC,EAAE;MACd,cAAc,CAAC,UAAU,WAAW,QAAQ;MAC5C,aAAa,CAAA;MACb,YAAY,CAAA;MACZ,WAAW,CAAC,EAAE;MACd,aAAa,CAAC,EAAE;MAChB,UAAU,CAAC,EAAE;KACd;AASD,SAAA,kBAAyB,CAAA;AACzB,SAAA,kBAAyB,CAAA;AAwFzB,SAAA,YAAY;AArHV,SAAK,cAAc;MACjB,EAAE,OAAO,YAAY,OAAO,WAAU;MACtC,EAAE,OAAO,aAAa,OAAO,YAAW;;AAE1C,SAAK,eAAe;MAClB,EAAE,OAAO,UAAU,OAAO,SAAQ;MAClC,EAAE,OAAO,QAAQ,OAAO,OAAM;;EAEjC;EAeD,WAAQ;EAER;EAMA,qBAAkB;AAChB,QAAI,KAAK,KAAK,SAAS,YAAY,SAAS,YAAY;AACtD,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AAEpC,WAAK,kBAAkB,CAAA;AACvB,WAAK,kBAAkB,CAAA;AAEvB,WAAK,KAAK,KAAI;AACd,WAAK,gBAAgB,OAAO,GAAG,EAAE,UAAU;QACzC,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,YAAY,QAAQ,EAAE,KAAK,cAAc,OAAO,gBAAgB,QAAQ,cAAa,CAAE;AACvH,eAAK,kBAAmB,KAAK,GAAG,8BAA+B,KAAK,iBAAiB,CAAC,OAAO,CAAC;AAC9F,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;AAGH,QAAI,KAAK,KAAK,SAAS,YAAY,SAAS,aAAa;AACvD,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AAEpC,WAAK,kBAAkB,CAAA;AACvB,WAAK,kBAAkB,CAAA;AAEvB,WAAK,KAAK,KAAI;AACd,WAAK,iBAAiB,OAAO,GAAG,EAAE,UAAU;QAC1C,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,YAAY,QAAQ,EAAE,KAAK,eAAe,OAAO,iBAAiB,QAAQ,cAAa,CAAE;AACzH,eAAK,kBAAmB,KAAK,GAAG,8BAA+B,KAAK,iBAAiB,CAAC,OAAO,CAAC;AAC9F,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;EAEL;EAEA,iBAAc;AACZ,QAAI,KAAK,KAAK,SAAS,YAAY,SAAS,YAAY;AACtD,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AAEpC,WAAK,kBAAkB,CAAA;AAEvB,WAAK,KAAK,KAAI;AACd,WAAK,gBAAgB,OAAO,GAAG,EAAE,UAAU;QACzC,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,sBAAsB,QAAQ,EAAC,KAAK,aAAa,OAAO,cAAa,CAAC;AACtG,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;AAKH,QAAI,KAAK,KAAK,SAAS,YAAY,SAAS,aAAa;AACvD,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AAEpC,WAAK,kBAAkB,CAAA;AAEvB,WAAK,KAAK,KAAI;AACd,WAAK,iBAAiB,OAAO,GAAG,EAAE,UAAU;QAC1C,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,sBAAsB,QAAQ,EAAC,KAAK,aAAa,OAAO,cAAa,CAAC;AACtG,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;EAEL;EAIA,OAAI;AACF,SAAK,YAAY;AAEjB,QAAI,KAAK,KAAK,SAAS;AACrB,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;;AAGF,SAAK,UAAU,MAAM,KAAK,KAAK,YAAW,CAAE;EAC9C;EAGA,iBAAc;AACZ,UAAM,kBAAkB,KAAK,gBAAgB,KAAK,WAAS,MAAM,UAAU,KAAK,KAAK,SAAS,UAAU,KAAK;AAC7G,SAAK,KAAK,SAAS,YAAY,WAAW,gBAAgB,MAAM;AAChE,QAAG,gBAAgB,UAAU,4BAA2B;AACtD,WAAK,KAAK,SAAS,SAAS,WAAW,+BAA+B;;AAExE,QAAG,gBAAgB,UAAU,6BAA4B;AACvD,WAAK,KAAK,SAAS,SAAS,WAAW,gCAAgC;;AAEzE,QAAG,gBAAgB,UAAU,gBAAe;AAC1C,WAAK,KAAK,SAAS,SAAS,WAAW,mBAAmB;;EAE9D;;;mBAzKW,4BAAyB,4BAAA,YAAA,GAAA,4BAM1B,eAAe,GAAA,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,cAAA,CAAA;AAAA;2FANd,4BAAyB,WAAA,CAAA,CAAA,uBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,GAAA,WAAA,cAAA,QAAA,SAAA,OAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,oBAAA,QAAA,aAAA,MAAA,GAAA,CAAA,mBAAA,gBAAA,YAAA,QAAA,eAAA,UAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,eAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,aAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,eAAA,MAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,WAAA,WAAA,cAAA,QAAA,GAAA,OAAA,GAAA,CAAA,MAAA,eAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,mBAAA,eAAA,YAAA,QAAA,eAAA,UAAA,GAAA,YAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,YAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,YAAA,WAAA,WAAA,YAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACpBtC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAoD,GAAA,OAAA,CAAA,EACe,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,oBAAA;AAAkB,IAAA,uBAAA,EAAI;AAE/D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,QAAA,CAAA,EACM,GAAA,OAAA,CAAA,EACG,GAAA,OAAA,CAAA,EACH,GAAA,OAAA,CAAA,EACsD,GAAA,KAAA,EAAA;AACd,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AAC9D,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,OAAA,EAAA,EAA0H,IAAA,2CAAA,GAAA,GAAA,OAAA,EAAA,EAQF,IAAA,2CAAA,GAAA,GAAA,OAAA,EAAA;AAsB5H,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqC,IAAA,UAAA,EAAA;AACuB,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAC9D,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA8D,IAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,aAAS,IAAA,KAAA;IAAM,CAAA;AAAE,IAAA,iBAAA,EAAA;AAA6E,IAAA,uBAAA,EAAS,EACnK,EACJ,EACH,EACL;;;;AA9CI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,IAAA;AAOc,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AAFuC,IAAA,qBAAA,WAAA,IAAA,YAAA,EAAwB,aAAA,UAAA,IAAA,KAAA,IAAA,cAAA,MAAA,OAAA,OAAA,QAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EACwB,cAAA,0BAAA,IAAA,GAAA,CAAA;AAG5B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA,SAAA,aAAA,SAAA,MAAA;AAQF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA,SAAA,aAAA,SAAA,MAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,KAAA,SAAA,aAAA,SAAA,MAAA;AAiBc,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,IAAA,KAAA,SAAA,aAAA,SAAA,WAAA,WAAA,UAAA;;;AD3B7F,IAAO,4BAAP;;6EAAO,2BAAyB,EAAA,WAAA,6BAAA,UAAA,6FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;;;AG4ElB,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,CAAA;AAAiB,IAAA,oBAAA,GAAA,cAAA,EAAA;AACrB,IAAA,uBAAA;;;;AAFgC,IAAA,qBAAA,mBAAA,OAAA,KAAA;AAC5B,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,QAAA,GAAA;AAA6B,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA;;;;;;AAUjC,IAAA,yBAAA,GAAA,IAAA,EAAgC,GAAA,SAAA,EAAA;AAExB,IAAA,qBAAA,SAAA,SAAA,yEAAA,QAAA;AAAA,YAAA,SAAA,wBAAA,GAAA,EAAA;AAAA,MAAA,wBAAA,CAAA;AAAA,YAAA,oBAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,kBAAA,OAAA,OAAA,UAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAA6D,UAAU,CAAC;IAAA,CAAA;AADrF,IAAA,uBAAA,EAG4B;;;;;;AADxB,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,kBAAA,QAAA,OAAA,KAAA,KAAA,OAAA,OAAA,kBAAA,QAAA,OAAA,KAAA,EAAA,KAAA;;;;;AAlBZ,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,EAAA;AAEI,IAAA,oBAAA,GAAA,yBAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;AAGA,IAAA,yBAAA,GAAA,MAAA,EAAA;AACI,IAAA,iBAAA,GAAA,WAAA;AACJ,IAAA,uBAAA,EAAK;AAET,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,EAAA;AAEI,IAAA,oBAAA,GAAA,yBAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;AAMA,IAAA,oBAAA,IAAA,MAAA,EAAA;AAEJ,IAAA,uBAAA;;;;AAnBwB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,UAAA;AASO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AAEP,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,UAAA;;;;;AAgBhB,IAAA,kCAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,KAAA,GAAA,GAAA;;;;;;AAGA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAwC,IAAA,qBAAA,SAAA,SAAA,+FAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,cAAA,wBAAA,CAAA,EAAA;AAAA,YAAA,UAAA,wBAAA;AAAA,aAAA,sBAAS,QAAA,SAAS,QAAM,WAAA,CAAU;IAAA,CAAA;AACR,IAAA,iBAAA,CAAA;AAAwB,IAAA,uBAAA;;;;;AAAxB,IAAA,oBAAA;AAAA,IAAA,4BAAA,YAAA,QAAA,KAAA,CAAA;;;;;AAClE,IAAA,yBAAA,GAAA,MAAA;AAAmC,IAAA,iBAAA,CAAA;;AAAkD,IAAA,uBAAA;;;;;AAAlD,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,YAAA,QAAA,KAAA,GAAA,kBAAA,CAAA;;;;;AAFnC,IAAA,qBAAA,GAAA,wEAAA,GAAA,GAAA,QAAA,EAAA,EACkE,GAAA,wEAAA,GAAA,GAAA,QAAA,EAAA;;;;AAD3D,IAAA,qBAAA,QAAA,QAAA,UAAA,WAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,UAAA,MAAA;;;;;AAPf,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,qBAAA,GAAA,kEAAA,GAAA,GAAA,gBAAA,EAAA,EAA6F,GAAA,iEAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAQjG,IAAA,uBAAA;;;;;AATgC,IAAA,qBAAA,QAAA,KAAA;AACb,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,UAAA,QAAA,WAAA,WAAA,EAA2D,YAAA,gBAAA;;;;;;AALlF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAqD,GAAA,MAAA,EAAA;AAE7C,IAAA,oBAAA,GAAA,mBAAA,EAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,mDAAA,GAAA,GAAA,MAAA,EAAA;AAWA,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAoF,GAAA,OAAA,EAAA;AAC7D,IAAA,qBAAA,SAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,UAAA,OAAA,MAAA,CAAoB;IAAA,CAAA;AAAhD,IAAA,uBAAA;AAGA,IAAA,yBAAA,GAAA,kBAAA,MAAA,CAAA,EAAkD,GAAA,OAAA,EAAA,EACd,GAAA,UAAA,EAAA;AAExB,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,YAAA,UAAA,wBAAA;AAAS,gBAAA,KAAA;AAAY,aAAA,sBAAE,QAAA,cAAA,aAAuB,UAAU,CAAC;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE7C,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAC1B,IAAA,yBAAA,IAAA,UAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,YAAA,UAAA,wBAAA;AAAS,gBAAA,KAAA;AAAY,aAAA,sBAAE,QAAA,cAAA,aAAuB,OAAO,CAAC;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE1C,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA,EAAS,EAC9B,EACO,EAChB;;;;;;AA/BL,IAAA,qBAAA,WAAA,0BAAA,GAAA,KAAA,QAAA,WAAA,WAAA,CAAA,CAAA;AAEkC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,WAAA;AAEd,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;AAeA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAA,GAAA,CAAA;;;;;AAgBxB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA,EACuB,GAAA,KAAA,EAAA;AACQ,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAI,EAC9C;;;AAFD,IAAA,oBAAA;;;;ADnIlB,IAAO,wBAAP,MAAO,sBAAoB;EAM/B,YACU,gBACA,IACA,QACA,MACA,SACD,QACC,UAA4B,MAC5B,MACA,KACA,IACA,OAAgC;AAVhC,SAAA,iBAAA;AACA,SAAA,KAAA;AACA,SAAA,SAAA;AACA,SAAA,OAAA;AACA,SAAA,UAAA;AACD,SAAA,SAAA;AACC,SAAA,WAAA;AAA4B,SAAA,OAAA;AAC5B,SAAA,OAAA;AACA,SAAA,MAAA;AACA,SAAA,KAAA;AACA,SAAA,QAAA;AAhBV,SAAA,mBAA0B,CAAA;AAC1B,SAAA,sBAA6B,CAAA;AAC7B,SAAA,OAAc,CAAA;AACd,SAAA,SAAgB,CAAA;AAiNhB,SAAA,gBAA6B;AAiC7B,SAAA,aAAa,KAAK,GAAG,MAAM;MACzB,iBAAiB,CAAA;MACjB,kBAAkB,CAAA;MAClB,WAAW,CAAA;MACX,SAAS,CAAA;MACT,aAAa,CAAA;MACb,WAAW,CAAA;MACX,UAAU,CAAA;MACV,WAAW,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC;MACjC,YAAY,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC;KACpC;AAEQ,SAAA,oBAA4C;MACnD,iBAAiB;MACjB,kBAAkB;MAClB,WAAW;MACX,SAAS;MACT,aAAa;MACb,WAAW;MACX,UAAU;;AAGZ,SAAA,0BAA+B,CAAA;AAC/B,SAAA,2BAAgC,CAAA;AAChC,SAAA,kBAAuB,CAAA;AACvB,SAAA,iBAAsB,CAAA;AAgFtB,SAAA,oBAA0B,CAAA;AAY1B,SAAA,gBAAsB,CAAA;EAzVlB;EAIJ,WAAQ;AAEN,UAAM,aAAa,CAAC,cAAc,cAAc;AAChD,SAAK,KAAK,QAAQ,UAAU;AAE5B,SAAK,gBAAe;AACpB,SAAK,YAAW;EAClB;EAEA,kBAAe;AACb,SAAK,OAAO;MAEV,EAAE,OAAO,mBAAmB,QAAQ,kBAAkB,QAAO,aAAa,OAAO,kBAAiB;MAClG,EAAE,OAAO,uBAAuB,QAAQ,UAAU,OAAO,kBAAiB;MACzE,EAAE,OAAO,iBAAiB,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,kBAAiB;MACnF,EAAE,OAAO,eAAe,QAAQ,WAAW,OAAO,kBAAiB;MACnE,EAAE,OAAO,eAAe,QAAQ,WAAW,OAAO,mBAAkB;;MAEpE,EAAE,OAAO,mBAAmB,QAAQ,UAAU,OAAO,kBAAiB;MACtE,EAAE,OAAO,wBAAwB,QAAQ,eAAe,OAAO,kBAAiB;MAChF,EAAE,OAAO,mBAAmB,QAAQ,gBAAgB,OAAO,kBAAiB;MAC5E,EAAE,OAAO,eAAe,QAAQ,gBAAgB,OAAO,kBAAiB;MACxE,EAAE,OAAO,aAAa,QAAQ,cAAc,OAAO,kBAAiB;MACpE,EAAE,OAAO,aAAa,QAAQ,cAAc,OAAO,kBAAiB;MACpE,EAAE,OAAO,aAAa,QAAQ,cAAc,QAAQ,OAAM;;AAE5D,SAAK,SAAS;MACZ,EAAE,OAAO,YAAY,QAAQ,YAAW;MACxC,EAAE,OAAO,cAAc,QAAQ,cAAa;MAC5C,EAAE,OAAO,aAAa,QAAQ,aAAY;MAC1C,EAAE,OAAO,eAAe,QAAQ,eAAc;MAC9C,EAAE,OAAO,cAAc,QAAQ,cAAa;MAC5C,EAAE,OAAO,gBAAgB,QAAQ,gBAAe;MAChD,EAAE,OAAO,cAAc,QAAQ,cAAa;MAC5C,EAAE,OAAO,gBAAgB,QAAQ,gBAAe;MAChD,EAAE,OAAO,UAAU,QAAQ,UAAS;MACpC,EAAE,OAAO,YAAY,QAAQ,YAAW;MACxC,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,mBAAmB,QAAQ,oBAAmB;MACvD,EAAE,OAAO,oBAAoB,QAAQ,qBAAoB;MACzD,EAAE,OAAO,aAAa,QAAQ,aAAY;MAC1C,EAAE,OAAO,aAAa,QAAQ,cAAc,QAAQ,OAAM;;EAE9D;EAEA,cAAW;AACT,eAAW,MAAK;AAChB,WAAK,KAAK,KAAI;AACd,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,WAAK,QAAQ,OAAO,GAAG,EAAE,UAAU;QACjC,MAAM,CAAC,QAAY;AACjB,eAAK,mBAAmB;AACxB,eAAK,kBAAiB;AACtB,eAAK,KAAK,KAAI;QAChB;QACA,OAAO,CAAC,QAAO;AACb,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;IACH,GAAG,GAAI;EACP;EAEA,WAAQ;AACN,UAAM,UAAU,KAAK,oBAAoB,KAAK,oBAAoB,SAAS,CAAC;AAC5E,SAAK,oBAAoB,SAAS;AAClC,SAAK,oBAAoB,KAAK,OAAO;EACvC;EAEA,cAAW;AACT,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,QAAQ,KAAK,MAAM,QAAQ,KAAK,OAAM;KAC/C;AAED,cAAU,YAAW,EAAG,UAAU,CAAC,WAAU;AAC3C,UAAI,QAAQ;AACV,aAAK,aAAa,KAAK,oBAAoB,CAAC,CAAC;;IAEjD,CAAC;EACH;EACA,aAAU;AACR,UAAM,YAAY,KAAK,OAAO,KAAK,gCAAgC;MACjE,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAC,OAAO,eAAc,MAAQ,KAAK,oBAAmB;KAC7D;AAED,cAAU,YAAW,EAAG,UAAU,CAAC,WAAU;AAC3C,WAAK,YAAW;IAClB,CAAC;EACL;EACE,SAAS,OAAY,OAAO,WAAgB,MAAI;AAC9C,QAAG,UAAS;AACV,WAAK,sBAAsB;;AAE7B,QAAI,KAAK,oBAAoB,WAAW,KAAK,QAAQ,OAAO;AAC1D,WAAK,eAAe,IAAI,EAAE,UAAU,QAAQ,SAAS,WAAW,KAAK,MAAM,QAAQ,wBAAuB,CAAE;WACvG;AACL,UAAI,YAAY,KAAK,GAAG,QAAQ,EAAE,MAAM,YAAY,OAAO,KAAK,oBAAoB,CAAC,IAAI,UAAU,UAAU,KAAI,CAAE;AACnH,WAAK,OAAO,SAAS,CAAC,qCAAqC,SAAS,CAAC;;EAEzE;EAEA,eAAY;AACV,QAAI,KAAK,oBAAoB,WAAW,GAAG;AACzC,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;;AAEF,UAAM,YAAY,KAAK,OAAO,KAAK,iBAAiB;MAClD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM;QACJ,MAAM,KAAK;QACX,QAAQ;QACR,MAAM;;KAET;AAED,cAAU,YAAW,EAAG,UAAU,CAAC,WAAU;AAC3C,UAAI,QAAQ;AACV,aAAK,aAAa,KAAK,mBAAmB;;IAE9C,CAAC;EACH;EAEA,aAAa,OAAU;AACrB,SAAK,KAAK,KAAI;AACd,SAAK,QAAQ,OAAO,KAAK,EAAE,UAAU;MACnC,MAAM,CAAC,QAAO;AACZ,aAAK,eAAe,IAAI;UACtB,UAAU;UACV,SAAS;UACT,KAAK;UACL,QAAS;SACV;AACD,aAAK,KAAK,KAAI;AACd,aAAK,YAAW;MAClB;MACA,OAAO,CAAC,QAAO;AACb,aAAK,GAAG,eAAe,GAAG;AAC1B,aAAK,KAAK,KAAI;MAChB;KACD;EACH;EAEA,gBAAa;AACX,UAAM,aAAa,KAAK,iBAAiB,IAAI,CAAC,SAAQ;AACpD,YAAM,aAAkB,CAAA;AACxB,WAAK,KAAK,QAAQ,CAAC,QAAO;AACxB,YAAI,IAAI,UAAU,QAAQ;AACxB,qBAAW,IAAI,MAAM,IAAI,KAAK,SAAS,UACrC,KAAK,IAAI,KAAK,GACd,YAAY;eAET;AACL,qBAAW,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK;;MAE3C,CAAC;AACD,aAAO;IACT,CAAC;AAGD,SAAK,GAAG,cAAc,YAAY,aAAa;EACjD;EAEA,cAAc,MAAW,MAAS;AAChC,SAAK,IAAI,mBAAmB,MAAM,IAAI;EACxC;EAGA,eAAe,OAAU;AACvB,UAAM,OAAa,MAAM,OAAO,MAAM,CAAC;AACvC,YAAQ,IAAI,MAAM,OAAO,KAAK;AAC9B,SAAK,gBAAgB;AACrB,YAAQ,IAAK,KAAK,aAAa;AAC/B,SAAK,KAAK,KAAI;AACd,SAAK,QAAQ,kBAAkB,KAAK,aAAa,EAAE,UAAU;MAC3D,MAAM,CAAC,WAAU;AACf,aAAK,eAAe,IAAI;UACtB,UAAU;UACV,SAAS;UACT,KAAK;UACL,QAAQ;SACT;AACD,aAAK,gBAAgB;AACrB,aAAK,eAAe,MAAM,MAAM;AAChC,aAAK,YAAW;AAChB,aAAK,KAAK,KAAI;MAChB;MAAG,OAAO,CAAC,QAAO;AAChB,aAAK,KAAK,KAAI;AACd,aAAK,gBAAgB;AACrB,aAAK,eAAe,MAAM,MAAM;AAChC,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAEA,eAAe,OAAuB;AACpC,UAAM,QAAQ;EAChB;EA8BA,oBAAiB;AAEf,SAAK,iBAAiB,QAAQ,SAAM;AAElC,UAAI,IAAI,mBAAmB,MAAM;AAC/B,aAAK,wBAAwB,KAAK,EAAE,OAAO,IAAI,iBAAiB,OAAO,IAAI,gBAAe,CAAE;AAC5F,aAAK,0BAA0B,KAAK,GAAG,8BAA8B,KAAK,yBAAyB,OAAO;;AAE5G,UAAI,IAAI,aAAa,MAAM;AACzB,aAAK,gBAAgB,KAAK,EAAE,OAAO,IAAI,WAAW,OAAO,IAAI,YAAW,CAAE;AAC1E,aAAK,kBAAkB,KAAK,GAAG,8BAA8B,KAAK,iBAAiB,OAAO;;AAE5F,UAAI,IAAI,oBAAoB,MAAM;AAChC,aAAK,yBAAyB,KAAK,EAAE,OAAO,IAAI,kBAAkB,OAAO,IAAI,iBAAgB,CAAE;AAC/F,aAAK,2BAA2B,KAAK,GAAG,8BAA8B,KAAK,0BAA0B,OAAO;;AAE9G,UAAI,IAAI,YAAY,MAAM;AACxB,aAAK,eAAe,KAAK,EAAE,OAAO,IAAI,UAAU,OAAO,IAAI,kBAAiB,CAAE;AAC9E,aAAK,iBAAiB,KAAK,GAAG,8BAA8B,KAAK,gBAAgB,OAAO;;IAE5F,CAAC;EAEH;EAGA,eAAY;AACV,SAAK,aAAa,KAAI;EACxB;EAGA,SAAM;AACJ,SAAK,kBAAkB;AACvB,UAAM,aAAa,KAAK,WAAW;AACnC,SAAK,kBAAkB,OAAO,KAAK,UAAU,EAC1C,OAAO,SAAO,WAAW,GAA8B,MAAM,QAAQ,WAAW,GAA8B,MAAM,UAAa,QAAQ,eAAe,QAAQ,YAAY,EAC5K,IAAI,SAAO,KAAK,kBAAkB,GAAG,KAAK,GAAG;AAEhD,SAAK,KAAK,KAAI;AACd,SAAK,QAAQ,OAAO,KAAK,WAAW,YAAW,CAAE,EAAE,UAAU;MAC3D,MAAM,CAAC,QAAY;AACjB,aAAK,mBAAmB;AACxB,aAAK,KAAK,KAAI;AACd,aAAK,aAAa,KAAI;MACxB;MACA,OAAO,CAAC,QAAO;AACb,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAEA,QAAK;AACH,SAAK,WAAW,MAAK;AACrB,SAAK,aAAa,KAAK,GAAG,MAAM;MAC9B,iBAAiB,CAAA;MACjB,kBAAkB,CAAA;MAClB,WAAW,CAAA;MACX,SAAS,CAAA;MACT,aAAa,CAAA;MACb,WAAW,CAAA;MACX,UAAU,CAAA;MACV,WAAW,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC;MACjC,YAAY,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC;KACpC;AACD,SAAK,OAAM;EACb;EAEA,UAAU,OAAU;AAClB,UAAM,iBAAiB,OAAO,KAAK,KAAK,iBAAiB,EAAE,KAAK,SAAO,KAAK,kBAAkB,GAAG,MAAM,MAAM,KAAK;AAClH,QAAI,gBAAgB;AAClB,WAAK,WAAW,IAAI,cAAc,GAAG,MAAK;AAC1C,WAAK,OAAM;;EAEf;EACA,WAAW,MAAS;AAClB,WAAO,KAAK,oBAAoB,SAAS,IAAI;EAC/C;EAGA,kBAAe;AACb,SAAK,oBAAoB,CAAA;AACzB,QAAI,KAAK,oBAAoB,WAAW,GAAG;AACzC,WAAK,eAAe,IAAI,EAAE,UAAU,QAAQ,SAAS,WAAW,KAAK,MAAM,QAAQ,wBAAuB,CAAE;AAC5G;;AAEF,SAAK,oBAAoB,KAAK,oBAAoB,IAAI,UAAQ,KAAK,eAAe;AAClF,SAAK,MAAM,iBAAiB,KAAK,iBAAiB;EACpD;EAIA,gBAAa;AACX,SAAK,gBAAgB,CAAA;AACrB,QAAI,KAAK,oBAAoB,WAAW,GAAG;AACzC,WAAK,eAAe,IAAI,EAAE,UAAU,QAAQ,SAAS,WAAW,KAAK,MAAM,QAAQ,wBAAuB,CAAE;AAC5G;;AAEF,SAAK,oBAAoB,KAAK,oBAAoB,IAAI,UAAQ,KAAK,eAAe;AAClF,SAAK,MAAM,8BAA8B,KAAK,iBAAiB;EACjE;EAEA,mBAAgB;AACd,UAAM,YAAY,KAAK,OAAO,KAAK,2BAA2B;MAC5D,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;KACrC;AAED,cAAU,YAAW,EAAG,UAAU,CAAC,WAAU;AAC3C,UAAG,QAAO;AACR,YAAG,OAAO,gBAAgB,UAAS;AACjC,eAAK,SAAS,KAAK;eAChB;AACH,cAAI,MAAW,CAAA;AACf,cAAI,QAAQ,EAAC,YAAY,OAAO,UAAU,mBAAmB,0BAAyB;AACtF,eAAK,MAAM,iBAAiB,GAAG;;;IAGrC,CAAC;EACH;;;mBAzYW,uBAAoB,4BAAA,cAAA,GAAA,4BAAA,oBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,QAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,yBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,yBAAA,CAAA;AAAA;sFAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;;;;;;;;;ACvBjC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,OAAA,CAAA,EACwC,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AACjD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA+D,GAAA,SAAA,GAAA,CAAA;AACR,IAAA,qBAAA,UAAA,SAAA,sDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,eAAA,MAAA,CAAsB;IAAA,CAAA;AAAnF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAmB,IAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,SAAS,MAAM,CAAC;IAAA,CAAA;AAA5C,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAmB,IAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,cAAA,CAAe;IAAA,CAAA;AAA3C,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAmB,IAAA,qBAAA,SAAA,SAAA,qDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,aAAA,CAAc;IAAA,CAAA;AAA1C,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA;AAAmB,IAAA,qBAAA,SAAA,SAAA,oDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,MAAA,CAAiB;IAAA,CAAA;AAA7C,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,MAAA,CAAA,EAA+C,IAAA,OAAA,EAAA,EACX,IAAA,UAAA,EAAA;AAC6B,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,sBAAA,CAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAE,aAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE9E,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AAGxB,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,cAAA,CAAe;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAEjE,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AACvB,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,gBAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAEnE,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA,EAAS,EAChC;AAEV,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,iBAAA,CAAkB;IAAA,CAAA;AAAiE,IAAA,oBAAA,IAAA,KAAA,EAAA;AACxD,IAAA,iBAAA,IAAA,UAAA;AAAO,IAAA,uBAAA,EAAS,EAC1D;AAGV,IAAA,yBAAA,IAAA,OAAA,EAAA,EACiE,IAAA,eAAA,EAAA,EACd,IAAA,eAAA,EAAA;AAChB,IAAA,qBAAA,SAAA,SAAA,4DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,iBAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,eAAA,OAAA,MAAA,CAA0B;IAAA,CAAA;AAA9D,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,SAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,sDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,oBAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,kBAAA,aAAA,OAAA,OAAA,OAAuD,UAAU,CAAC;IAAA,CAAA;AAD/E,IAAA,uBAAA,EACmF;AAGvF,IAAA,yBAAA,IAAA,kBAAA,IAAA,CAAA,EACuD,IAAA,QAAA,EAAA,EACG,IAAA,OAAA,EAAA,EACjC,IAAA,OAAA,EAAA,EAC0B,IAAA,KAAA,EAAA;AACa,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AACpD,IAAA,oBAAA,IAAA,iBAAA,EAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuC,IAAA,KAAA,EAAA;AACa,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AACpD,IAAA,oBAAA,IAAA,iBAAA,EAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuC,IAAA,KAAA,EAAA;AACa,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,IAAA,iBAAA,EAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAuC,IAAA,KAAA,EAAA;AACa,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,oBAAA,IAAA,iBAAA,EAAA;AAGJ,IAAA,uBAAA,EAAM;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4C,IAAA,KAAA,EACnC,IAAA,OAAA,EAAA;AACkB,IAAA,qBAAA,SAAA,SAAA,sDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,MAAA,CAAO;IAAA,CAAA;AAAnC,IAAA,uBAAA,EAAsF;AAE1F,IAAA,yBAAA,IAAA,KAAA,EAAK,IAAA,UAAA,EAAA;AACsC,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtE,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,OAAA,CAAQ;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA,EAAS,EAC/E,EACJ,EACH;AAGX,IAAA,yBAAA,IAAA,WAAA,EAAA;AAAS,IAAA,qBAAA,YAAA,SAAA,2DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAY,IAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,2BAAA,iBAAA,SAAA,gEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,MAAA,6BAAA,IAAA,iBAAA,MAAA,MAAA,IAAA,kBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAAxC,IAAA,uBAAA,EAAgG;AAGpG,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6B,IAAA,WAAA,IAAA,CAAA;AAEI,IAAA,2BAAA,mBAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,MAAA,6BAAA,IAAA,qBAAA,MAAA,MAAA,IAAA,sBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAIzB,IAAA,qBAAA,IAAA,8CAAA,IAAA,GAAA,eAAA,EAAA,EAA4C,IAAA,8CAAA,IAAA,GAAA,eAAA,EAAA,EA0BoB,IAAA,8CAAA,GAAA,GAAA,eAAA,EAAA;AA0CpE,IAAA,uBAAA,EAAU,EACR;;;AAnJkB,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AA4BkC,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AAAtC,IAAA,qBAAA,eAAA,KAAA,EAAqB,cAAA,sBAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,UAAA;AAK6D,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AADL,IAAA,qBAAA,WAAA,IAAA,wBAAA,EAAoC,cAAA,0BAAA,IAAA,GAAA,CAAA;AAOhC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AADJ,IAAA,qBAAA,WAAA,IAAA,uBAAA,EAAmC,cAAA,0BAAA,IAAA,GAAA,CAAA;AAOrC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AADE,IAAA,qBAAA,WAAA,IAAA,eAAA,EAA2B,cAAA,0BAAA,IAAA,GAAA,CAAA;AAO9B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAA,GAAA,CAAA;AADG,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,cAAA,0BAAA,IAAA,GAAA,CAAA;AAiBpD,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,eAAA;AAIf,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,IAAA,EAAgB,SAAA,IAAA,gBAAA,EAA2B,cAAA,IAAA;AACvC,IAAA,2BAAA,aAAA,IAAA,mBAAA;AACzB,IAAA,qBAAA,aAAA,IAAA,EAAkB,QAAA,GAAA,EAAa,yBAAA,IAAA,EAA+B,aAAA,EAAA,EAA2C,cAAA,0BAAA,IAAA,GAAA,CAAA;;;ADjE/G,IAAO,uBAAP;;6EAAO,sBAAoB,EAAA,WAAA,wBAAA,UAAA,oEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AER3B,IAAO,sBAAP,MAAO,oBAAkB;EAO7B,YACS,WACyB,MACxB,IACA,MACA,OACA,QACA,IACA,gBACA,KACA,MAAiB;AATlB,SAAA,YAAA;AACyB,SAAA,OAAA;AACxB,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;AACA,SAAA,KAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AACA,SAAA,OAAA;AAZV,SAAA,OAAkB,IAAI,UAAU,CAAA,CAAE;EAa9B;EAIJ,WAAQ;AACR,QAAG,KAAK,KAAK,UAAU,SAAQ;AAC7B,WAAK,OAAO,KAAK,GAAG,MAAM;QACxB,WAAW,CAAC,EAAE;QACd,eAAe,CAAC,EAAE;QAClB,aAAa,CAAC,EAAE;QAChB,eAAe,CAAC,EAAE;QAClB,QAAQ,CAAC,EAAE;QACX,aAAa,KAAK,GAAG,MAAM,CAAA,CAAE;QAC7B,QAAQ,CAAC,EAAE;QACX,qBAAqB,CAAC,EAAE;QACxB,aAAa,CAAC,EAAE;QAChB,SAAS,CAAC,EAAE;QACZ,QAAQ,CAAC,EAAE;QACX,YAAY,CAAC,EAAE;QACf,QAAQ,CAAC,EAAE;QACX,YAAY,CAAC,EAAE;QACf,OAAO,CAAC,EAAE;QACV,QAAQ,CAAC,EAAE;QACX,YAAY,CAAC,EAAE;QACf,eAAe,CAAC,EAAE;OACnB;;AAEH,QAAG,KAAK,KAAK,UAAU,QAAO;AAC5B,WAAK,OAAQ,KAAK,GAAG,MAAM;QACzB,WAAW,CAAA;QACX,eAAe,CAAA;QACf,aAAa,CAAA;QACb,eAAe,CAAA;QACf,QAAQ,CAAA;QACR,QAAQ,CAAA;QACR,YAAY,CAAA;QACZ,UAAU,CAAA;QACV,QAAQ,CAAA;QACR,aAAa,CAAA;QACb,aAAa,CAAA;QACb,aAAa,CAAA;QACb,QAAQ,CAAA;QACR,QAAQ,CAAA;QACR,YAAY,CAAA;QACZ,QAAQ,CAAA;QACR,YAAY,CAAA;QACZ,OAAO,CAAA;OACR;;AAGD,SAAK,KAAK,WAAW,KAAK,KAAK,KAAK,KAAK;EACzC;EAEJ,OAAI;AACF,SAAK,UAAU,MAAM,KAAK,KAAK,KAAK;EACtC;EAGA,gBAAgB,UAAa;AAC3B,UAAM,SAAS,SAAS,SAAS,OAAO,QAAkB,SAAS,SAAS,MAAM,QAAkB,SAAS,SAAS,OAAO;AAC7H,aAAS,SAAS,OAAO,WAAW,MAAM;EAC5C;;;mBA/Ea,qBAAkB,4BAAA,YAAA,GAAA,4BASnB,eAAe,GAAA,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,CAAA;AAAA;oFATd,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,cAAA,QAAA,SAAA,OAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,oBAAA,QAAA,aAAA,MAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,QAAA,GAAA,CAAA,MAAA,SAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,SAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,QAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,QAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,iBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,OAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,OAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,OAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,OAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,eAAA,MAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,WAAA,WAAA,cAAA,QAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACf/B,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAoD,GAAA,OAAA,CAAA,EACe,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA,EAAI;AAEtD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,QAAA,CAAA,EACM,GAAA,OAAA,CAAA,EACG,GAAA,OAAA,CAAA,EACH,GAAA,OAAA,CAAA,EACgD,GAAA,KAAA,CAAA;AACT,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,yBAAA,IAAA,SAAA,CAAA;AACI,IAAA,qBAAA,UAAA,SAAA,uDAAA;AAAA,aAAU,IAAA,gBAAA,IAAA,IAAA;IAA0B,CAAA;AADxC,IAAA,uBAAA,EAEoD;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA4D,IAAA,KAAA,CAAA;AACR,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,yBAAA,IAAA,SAAA,EAAA;AACI,IAAA,qBAAA,UAAA,SAAA,uDAAA;AAAA,aAAU,IAAA,gBAAA,IAAA,IAAA;IAA0B,CAAA;AADxC,IAAA,uBAAA,EAEoD;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,KAAA,CAAA;AACT,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,yBAAA,IAAA,SAAA,EAAA;AACI,IAAA,qBAAA,UAAA,SAAA,uDAAA;AAAA,aAAU,IAAA,gBAAA,IAAA,IAAA;IAA0B,CAAA;AADxC,IAAA,uBAAA,EAEoD;AAExD,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,KAAA,CAAA;AAChB,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,KAAA,CAAA;AACT,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,KAAA,CAAA;AACT,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAC3D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6D,IAAA,KAAA,CAAA;AACT,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiE,IAAA,KAAA,CAAA;AACb,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAC3D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAEJ,IAAA,uBAAA,EAAM;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsC,IAAA,UAAA,EAAA;AAEjC,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACP,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA8D,IAAA,qBAAA,SAAA,SAAA,uDAAA;AAAA,aAAS,IAAA,KAAA;IAAM,CAAA;AAAE,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EAC1F,EACJ,EACH,EACL;;;AAtDI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,IAAA;;;ADUR,IAAO,qBAAP;;6EAAO,oBAAkB,EAAA,WAAA,sBAAA,UAAA,8FAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;AGLvB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACE,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA;AACb,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AACZ,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA,EAAK;;;;;;AAIlB,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuB,GAAA,IAAA;AACjB,IAAA,oBAAA,GAAA,SAAA,EAAA;AAAsF,IAAA,uBAAA;AAC1F,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,oBAAA,GAAA,SAAA,EAAA;AAAoF,IAAA,uBAAA;AACxF,IAAA,yBAAA,GAAA,MAAA,EAAA,EAA6C,GAAA,OAAA,EAAA;AACU,IAAA,qBAAA,SAAA,SAAA,kEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,MAAA,CAAiB;IAAA,CAAA;AAA/E,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,kBAAA,MAAA,CAAA,EAA+C,GAAA,OAAA,EAAA,EACb,IAAA,UAAA,EAAA;AAC2B,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAC,OAAA,WAAA,IAAA,CAAa;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE7E,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACpB,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,CAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAC,OAAA,SAAA,UAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAEjF,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA,EAAS,EAC3B,EACS,EACd;;;;AAhBH,IAAA,qBAAA,aAAA,OAAA;AAMgB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAAA,IAAA,CAAA;;;ADHtB,IAAO,wBAAP,MAAO,sBAAoB;EAC/B,YACS,WACyB,MACxB,IACA,MACA,OACA,WACA,QACA,IACA,SACA,gBACA,KACA,MACA,WAAoC;AAZrC,SAAA,YAAA;AACyB,SAAA,OAAA;AACxB,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,QAAA;AACA,SAAA,YAAA;AACA,SAAA,SAAA;AACA,SAAA,KAAA;AACA,SAAA,UAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AACA,SAAA,OAAA;AACA,SAAA,YAAA;AAGV,SAAA,YAAY,KAAK,GAAG,MAAM;MACxB,oBAAoB,KAAK,GAAG,MAAM,CAAA,CAAE;;KACrC;AAkBD,SAAA,gBAAiC;AAMjC,SAAA,oBAA2B,CAAA;EA5BvB;EAMJ,IAAI,eAAY;AACd,WAAO,KAAK,UAAU,IAAI,oBAAoB;EAChD;EAGA,WAAW,OAAa;AACtB,SAAK,aAAa,SAAS,KAAK;EAClC;EAEA,WAAQ;AACN,YAAQ,IAAI,KAAK,IAAI;AACrB,SAAK,UAAU,KAAK,KAAK,KAAK,KAAK;EACrC;EAKA,YAAY,OAAU;AACpB,SAAK,gBAAgB,MAAM,OAAO;AAClC,SAAK,WAAW,KAAK;EACvB;EAIA,WAAW,OAAS;AAClB,QAAI,CAAC,KAAK,iBAAiB,KAAK,cAAc,WAAW,GAAG;AAC1D,cAAQ,IAAI,+BAA+B;AAC3C;;AAEJ,SAAK,eAAe,OAAQ,oBAAI,KAAI,GAAG,QAAO,IAAK,QAAM,oBAAI,KAAI,GAAG,SAAQ,IAAK,KAAK,OAAM,oBAAI,KAAI,GAAG,YAAW,IAAM,MAAK,KAAK,GAAG,WAAW,oBAAI,KAAI,CAAE,IAAI;AAC5J,SAAK,QAAQ,YAAY,KAAK,eAAe,KAAK,YAAY,EAAE,UAAU;MACxE,MAAM,CAAC,WAAU;AACf,aAAK,eAAe,IAAI;UACtB,UAAU;UACV,SAAS;UACT,KAAK;UACL,QAAQ;SACT;AACD,eAAO,QAAQ,CAAC,MAAS;AACvB,YAAE,mBAAmB,IAAI,EAAE;AAC3B,YAAE,YAAY,IAAI,EAAE;QACtB,CAAC;AACD,aAAK,UAAU,MAAM;AACrB,aAAK,gBAAgB;AACrB,aAAK,eAAe,MAAM,MAAM;MAClC;MAAG,OAAO,CAAC,QAAO;AAChB,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAEA,eAAe,OAAuB;AACpC,UAAM,QAAQ;EAChB;EAEA,OAAI;AACF,SAAK,UAAU,MAAM,KAAK,UAAU,SAAS,mBAAmB,KAAK;EACvE;EAGA,UAAU,cAAiB;AACzB,UAAM,aAAa,KAAK,UAAU,IAAI,oBAAoB;AAC1D,iBAAa,QAAQ,CAAC,UAAc;AAClC,iBAAW,KAAK,KAAK,qBAAqB,KAAK,CAAC;IAClD,CAAC;AACD,YAAQ,IAAI,KAAK,SAAS;EAC5B;EAEA,qBAAqB,OAAU;AAC7B,WAAO,KAAK,GAAG,MAAM;MACnB,YAAY,CAAC,MAAM,UAAU;MAC7B,QAAQ,CAAC,MAAM,MAAM;MACrB,mBAAmB,CAAC,MAAM,iBAAiB;KAC5C;EACH;EAGA,SAAS,SAAW;AACnB,SAAK,UAAU,iBAAiB,OAAO;EACxC;;;mBArGW,uBAAoB,4BAAA,YAAA,GAAA,4BAGrB,eAAe,GAAA,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,yBAAA,CAAA;AAAA;sFAHd,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,WAAA,cAAA,QAAA,SAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,GAAA,WAAA,QAAA,GAAA,QAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,QAAA,gBAAA,WAAA,cAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,gBAAA,yBAAA,GAAA,cAAA,OAAA,GAAA,CAAA,aAAA,QAAA,GAAA,CAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,QAAA,qBAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,GAAA,WAAA,WAAA,cAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,QAAA,YAAA,IAAA,mBAAA,cAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,qBAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,mBAAA,GAAA,CAAA,QAAA,UAAA,OAAA,+BAAA,OAAA,IAAA,UAAA,IAAA,GAAA,UAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,aAAA,GAAA,CAAA,iBAAA,IAAA,GAAA,SAAA,GAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,OAAA,gCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,gCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;ACpBjC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0D,GAAA,OAAA,CAAA,EACO,GAAA,KAAA,CAAA;AACxB,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AACjD,IAAA,yBAAA,GAAA,SAAA,GAAA,CAAA;AAA4D,IAAA,qBAAA,UAAA,SAAA,sDAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAAzF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,sBAAA,CAAA;AAAA,aAAA,sBAAS,aAAA,MAAA,CAAiB;IAAA,CAAA;AAAiE,IAAA,oBAAA,GAAA,KAAA,CAAA;AAC3D,IAAA,iBAAA,GAAA,UAAA;AAAO,IAAA,uBAAA,EAAS;AAE1D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,IAAA,WAAA,CAAA;AAEnB,IAAA,qBAAA,IAAA,8CAAA,GAAA,GAAA,eAAA,EAAA,EAAgC,IAAA,8CAAA,IAAA,GAAA,eAAA,EAAA;AA4BlC,IAAA,uBAAA,EAAU;AAEZ,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6C,IAAA,UAAA,EAAA;AACa,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AAC5D,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,KAAA,CAAM;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EAC1E;;;AAlCK,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,SAAA,IAAA,aAAA,QAAA;;;ADY1B,IAAO,uBAAP;;6EAAO,sBAAoB,EAAA,WAAA,wBAAA,UAAA,oGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;AGTvB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACG,IAAA,iBAAA,GAAA,SAAA;AAAO,IAAA,uBAAA;AACZ,IAAA,yBAAA,GAAA,IAAA;AAAK,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AAChB,IAAA,yBAAA,GAAA,IAAA;AAAK,IAAA,iBAAA,GAAA,KAAA;AAAG,IAAA,uBAAA;AACR,IAAA,yBAAA,GAAA,IAAA;AAAK,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,IAAA;AAAK,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAChB,IAAA,yBAAA,IAAA,IAAA;AAAK,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AACb,IAAA,yBAAA,IAAA,IAAA;AAAK,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA,EAAK;;;;;;AAMf,IAAA,yBAAA,GAAA,cAAA,IAAA,CAAA;AAA+B,IAAA,qBAAA,YAAA,SAAA,2FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,YAAA,CAAa;IAAA,CAAA,EAAC,YAAA,SAAA,2FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,YAAA,sBAAA,CAAA;AAAA,YAAA,aAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACJ,OAAA,aAAA,WAAA,UAAA,CAA6B;IAAA,CAAA;AADlF,IAAA,uBAAA;;;;AAEA,IAAA,qBAAA,0BAAA,GAAAC,IAAA,CAAA;AAF0D,IAAA,qBAAA,WAAA,OAAA,UAAA,EAAsB,cAAA,0BAAA,GAAAA,IAAA,CAAA;;;;;;AAGhF,IAAA,yBAAA,GAAA,SAAA,EAAA;AAAQ,IAAA,qBAAA,YAAA,SAAA,iFAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAY,OAAA,YAAA,CAAa;IAAA,CAAA;AAAjC,IAAA,uBAAA;;;;;;AALJ,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuB,GAAA,IAAA;AAEnB,IAAA,qBAAA,GAAA,2DAAA,GAAA,GAAA,cAAA,EAAA,EAE8D,GAAA,sDAAA,GAAA,GAAA,SAAA,EAAA;AAEhE,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,oBAAA,GAAA,SAAA,EAAA;AAAwF,IAAA,uBAAA;AAC5F,IAAA,yBAAA,GAAA,IAAA,EAAK,GAAA,SAAA,EAAA;AAAwD,IAAA,qBAAA,UAAA,SAAA,uEAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,oBAAA,UAAA,CAA4B;IAAA,CAAA;AAA9F,IAAA,uBAAA,EAA2H;AAChI,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,SAAA,EAAA;AAAwD,IAAA,qBAAA,UAAA,SAAA,uEAAA;AAAA,YAAA,aAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,oBAAA,UAAA,CAA4B;IAAA,CAAA;AAA9F,IAAA,uBAAA,EAA4H;AAChI,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,oBAAA,IAAA,SAAA,EAAA;AAAwF,IAAA,uBAAA;AAC5F,IAAA,yBAAA,IAAA,IAAA;AACE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,MAAA,EAAA,EAA6C,IAAA,OAAA,EAAA;AACU,IAAA,qBAAA,SAAA,SAAA,mEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,MAAA,CAAiB;IAAA,CAAA;AAA/E,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,MAAA,CAAA,EAA+C,IAAA,OAAA,EAAA,EACX,IAAA,UAAA,EAAA;AAExB,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAE,OAAA,UAAA,OAAA,KAAA,UAA8B,QAAM,IAAA,CAAI;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAEhD,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AAC3B,IAAA,yBAAA,IAAA,UAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,aAAA,OAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAE,OAAA,WAAA,MAAA,UAAA,CAAsB;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE9B,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACxB,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,SAAA,wEAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,YAAA,KAAA;AAAS,aAAA,sBAAE,OAAA,YAAA,OAAA,KAAA,UAAA,IAAA,CAAkC;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,EAAA;AAE/F,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA,EAAS,EAC9B,EACO,EAChB;;;;;AAlCD,IAAA,qBAAA,aAAA,QAAA;AAEa,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,OAAA,SAAA;AAGuB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,SAAA;AASpC,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,0BAAA,GAAAA,IAAA,CAAA;AAFY,IAAA,qBAAA,WAAA,OAAA,gBAAA,EAA4B,cAAA,0BAAA,IAAAA,IAAA,CAAA;AAOxB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,IAAAC,IAAA,CAAA;;;ADvBxB,IAAO,wBAAP,MAAO,sBAAoB;EAE/B,YACU,IACA,MACA,QACA,IACA,SACA,gBACA,KACA,MACD,WACA,QACyB,MAAS;AAVjC,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,SAAA;AACA,SAAA,KAAA;AACA,SAAA,UAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AACA,SAAA,OAAA;AACD,SAAA,YAAA;AACA,SAAA,SAAA;AACyB,SAAA,OAAA;AAGlC,SAAA,WAAW,KAAK,GAAG,MAAM;MACvB,aAAa,KAAK,GAAG,MAAM,CAAA,CAAE;;KAC9B;AAwLC,SAAA,aAAoB,CAAA;AACpB,SAAA,mBAA0B,CAAA;AA4B1B,SAAA,YAAY;EAzNV;EAOJ,IAAI,cAAW;AACb,WAAO,KAAK,SAAS,IAAI,aAAa;EACxC;EAEA,UAAO;AACL,SAAK,YAAY,KAAK,KAAK,oBAAmB,CAAE;EAClD;EACA,sBAAmB;AACjB,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAA;MACX,eAAe,CAAA;MACf,aAAa,CAAA;MACb,eAAe,CAAA;MACf,QAAQ,CAAA;MACR,QAAQ,CAAA;MACR,YAAY,CAAA;MACZ,UAAU,CAAA;MACV,QAAQ,CAAA;MACR,aAAa,CAAA;MACb,aAAa,CAAA;MACb,aAAa,CAAA;MACb,QAAQ,CAAA;MACR,QAAQ,CAAA;MACR,YAAY,CAAA;MACZ,QAAQ,CAAA;MACR,YAAY,CAAA;MACZ,OAAO,CAAA;MACP,UAAU,CAAC,EAAE;MACb,WAAW,CAAC,EAAE;MACd,UAAU,CAAC,EAAE;MACb,kBAAkB,CAAC,EAAE;MACrB,iBAAiB,CAAC,EAAE;MACpB,WAAY,CAAC,EAAE;MACf,oBAAoB,KAAK,GAAG,MAAM,CAAA,CAAE;KACrC;EACH;EACA,WAAW,OAAe,MAAS;AACjC,SAAK,YAAY,SAAS,KAAK;AAC/B,SAAK,QAAQ,WAAW,KAAK,YAAW,CAAE,EAAE,UAAU,EAAC,MAAM,CAAC,QAAO;IAAE,EAAC,CAAC;EAC3E;EACA,WAAQ;AACN,SAAK,aAAY;AACjB,SAAK,UAAU,KAAK,KAAK,KAAK,KAAK;EACrC;EACA,OAAI;AACF,UAAM,UAAW,KAAK,SAAS,SAAS;AACxC,UAAM,aAAa,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,aAAa,GAAG,CAAC;AAC9G,UAAM,SAAS,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC;AACnG,UAAM,QAAQ,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,KAAK,GAAG,CAAC;AACjG,UAAM,SAAS,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC;AACnG,UAAM,SAAS,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC;AACnG,UAAM,SAAS,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC;AAEnG,QAAI,MAAW,CAAA;AACf,QAAI,QAAQ,KAAK,SAAS,SAAS,YAAY;AAC/C,QAAI,aAAa;AACjB,QAAI,SAAS;AACb,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,SAAS;AACb,QAAI,OAAO,QAAQ;AACnB,QAAI,aAAa,QAAQ,MAAM,CAAC,EAAE;AAClC,QAAI,gBAAgB,QAAQ,MAAM,CAAC,EAAE;AACrC,QAAI,aAAa,QAAQ,MAAM,CAAC,EAAE;AAClC,QAAI,WAAW,QAAQ,MAAM,CAAC,EAAE;AAChC,SAAK,UAAU,MAAM,GAAG;EAC1B;EACA,gBAAgB,UAAa;AAC3B,UAAM,SAAS,SAAS,SAAS,OAAO,QAAkB,SAAS,SAAS,MAAM,QAAkB,SAAS,SAAS,OAAO;AAC7H,aAAS,SAAS,OAAO,WAAW,MAAM;EAC5C;EAEA,UAAU,cAAiB;AACzB,UAAM,aAAa,KAAK,SAAS,IAAI,aAAa;AAClD,iBAAa,QAAQ,CAAC,UAAc;AAClC,iBAAW,KAAK,KAAK,gBAAgB,KAAK,CAAC;IAC7C,CAAC;EACH;EAGA,gBAAgB,MAAS;AACvB,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,KAAK,SAAS;MAC1B,eAAe,CAAC,KAAK,aAAa;MAClC,aAAa,CAAC,KAAK,WAAW;MAC9B,eAAe,CAAC,KAAK,aAAa;MAClC,QAAQ,CAAC,KAAK,MAAM;MACpB,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,UAAU,CAAC,KAAK,QAAQ;MACxB,QAAQ,CAAC,KAAK,MAAM;MACpB,aAAa,CAAC,KAAK,WAAW;MAC9B,aAAa,CAAC,KAAK,WAAW;MAC9B,aAAa,CAAC,KAAK,WAAW;MAC9B,iBAAiB,CAAC,KAAK,eAAe;MACtC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,iBAAiB,CAAC,KAAK,eAAe;MACtC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,WAAW,CAAC,KAAK,SAAS;MAC1B,iBAAiB,CAAC,KAAK,eAAe;MACtC,oBAAoB,KAAK,qBAAqB,KAAK,kBAAkB;MACrE,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,OAAO,CAAC,KAAK,KAAK;MAClB,UAAU,CAAC,KAAK,QAAQ;MACxB,WAAW,CAAC,KAAK,SAAS;MAC1B,UAAU,CAAC,KAAK,QAAQ;KACzB;EACH;EAEA,qBAAqB,oBAAyB;AAC5C,QAAI,sBAAsB,MAAM;AAC9B;;AAEF,WAAO,KAAK,GAAG,MAAM,mBAAmB,IAAI,WAAS,KAAK,GAAG,MAAM;MACjE,YAAY,CAAC,MAAM,UAAU;MAC7B,QAAQ,CAAC,MAAM,MAAM;MACrB,mBAAmB,CAAC,MAAM,iBAAiB;KAC5C,CAAC,CAAC;EACL;EAGA,UAAU,OAAY,OAAO,QAAa,OAAU;AAClD,UAAM,YAAY,KAAK,OAAO,KAAK,oBAAoB;MACrD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,UAAU,MAAM,QAAgB,MAAO,KAAK,SAAS,SAAS,YAA0B,GAAG,KAAK,EAAC;KAC1G;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,YAAM,UAAW,KAAK,SAAS,SAAS,YAA0B,GAAG,KAAK;AAC1E,cAAQ,WAAW,MAAM;IAC3B,CAAC;EAAC;EAEF,YAAY,OAAY,OAAO,OAAU;AACvC,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,UAAU,MAAM,MAAO,KAAK,SAAS,SAAS,YAA0B,GAAG,KAAK,EAAE,IAAI,oBAAoB,GAAgB,aAAc,KAAK,SAAS,SAAS,YAA0B,GAAG,KAAK,GAAG,MAAM,OAAM;KACzN;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,UAAI,QAAQ;AACV,cAAM,wBAAyB,KAAK,SAAS,SAAS,YAA0B,GAAG,KAAK,EAAE,IAAI,oBAAoB;AAClH,8BAAsB,MAAK;AAC3B,eAAO,QAAQ,CAAC,UAAc;AAC5B,gCAAsB,KAAK,KAAK,GAAG,MAAM;YACvC,YAAY,MAAM;YAClB,QAAQ,MAAM;YACd,mBAAmB,MAAM;WAC1B,CAAC;QACJ,CAAC;AACD,gBAAQ,IAAI,KAAK,QAAQ;;IAE7B,CAAC;EACH;EAIA,eAAY;AACV,SAAK,KAAK,KAAI;AACd,SAAK,IAAI,mBAAmB;MAC1B,KAAK,IAAI,aAAa,MAAM,OAAO;MACnC,KAAK,IAAI,aAAa,MAAM,SAAS;KACtC,EAAE,UAAU;MACX,MAAM,CAAC,YAAgB;AACtB,aAAK,aAAc,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,EAAC,KAAK,UAAU,OAAO,aAAa,YAAY,cAAa,WAAW,YAAW,CAAC;AAC7I,aAAK,mBAAmB,KAAK,IAAI,YAAY,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,SAAS,GAAG;AACjG,aAAK,KAAK,KAAI;MAChB;MACA,OAAO,CAAC,QAAY;AAClB,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAEA,oBAAoB,OAAS;AAC3B,UAAM,SAAS,cAAc,WAAW,MAAM,SAAS,SAAS,QAAQ,MAAM,SAAS,UAAU,KAAK;EACxG;EAEA,aAAa,OAAW,SAAW;AAClC,QAAI,OAAQ,KAAK,WAAW,KAAK,YAAU,OAAO,UAAU,QAAQ,SAAS,OAAO,KAAK,GAAG;AAC3F,YAAQ,SAAS,YAAY,WAAW,IAAI;EAC9C;EAIA,cAAW;AACT,SAAK,YAAY,CAAC,KAAK;AACvB,YAAQ,IAAI,KAAK,SAAS;EAC5B;;;mBA5OS,uBAAoB,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,YAAA,GAAA,4BAAA,SAAA,GAAA,4BAarB,eAAe,CAAA;AAAA;sFAbd,uBAAoB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,UAAA,EAAA,GAAA,CAAA,GAAA,WAAA,cAAA,QAAA,SAAA,QAAA,QAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,QAAA,gBAAA,WAAA,cAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,QAAA,QAAA,GAAA,WAAA,GAAA,CAAA,gBAAA,yBAAA,GAAA,eAAA,GAAA,cAAA,OAAA,GAAA,CAAA,aAAA,QAAA,GAAA,CAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,QAAA,qBAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,GAAA,WAAA,WAAA,cAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,UAAA,YAAA,QAAA,GAAA,WAAA,SAAA,cAAA,YAAA,YAAA,GAAA,MAAA,GAAA,CAAA,SAAA,wBAAA,eAAA,SAAA,mBAAA,UAAA,GAAA,YAAA,GAAA,MAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,eAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,YAAA,GAAA,mBAAA,QAAA,GAAA,QAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,aAAA,GAAA,mBAAA,QAAA,GAAA,QAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,iBAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,YAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,mBAAA,GAAA,CAAA,QAAA,UAAA,OAAA,+BAAA,OAAA,IAAA,UAAA,IAAA,GAAA,UAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,aAAA,GAAA,CAAA,iBAAA,IAAA,GAAA,SAAA,GAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,OAAA,iCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,gCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,6BAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,UAAA,YAAA,QAAA,GAAA,YAAA,YAAA,WAAA,YAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,UAAA,GAAA,mBAAA,QAAA,GAAA,UAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AClBjC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA0D,GAAA,OAAA,CAAA,EACO,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AAC/C,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAQ,IAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,aAAS,IAAA,QAAA;IAAS,CAAA;AAAiE,IAAA,oBAAA,GAAA,KAAA,CAAA;AACnD,IAAA,iBAAA,GAAA,UAAA;AAAO,IAAA,uBAAA,EAAS;AAE5D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAuB,GAAA,QAAA,CAAA,EAC0B,GAAA,WAAA,CAAA;AAG3C,IAAA,qBAAA,IAAA,8CAAA,IAAA,GAAA,eAAA,EAAA,EAAgC,IAAA,8CAAA,IAAA,IAAA,eAAA,EAAA;AAkDlC,IAAA,uBAAA,EAAU,EACL;AAET,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA6C,IAAA,UAAA,EAAA;AACgB,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AAC7D,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,yDAAA;AAAA,aAAS,IAAA,KAAA;IAAM,CAAA;AAAE,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EAC5E;;;AA3DE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,QAAA;AACK,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,SAAA,IAAA,YAAA,QAAA;;;ADU5B,IAAO,uBAAP;;6EAAO,sBAAoB,EAAA,WAAA,wBAAA,UAAA,oGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AGAjB,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAiF,GAAA,MAAA,EAAA;AAC7D,IAAA,iBAAA,CAAA;AAAgB,IAAA,uBAAA;AAChC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAgB,IAAA,iBAAA,CAAA;AAAkB,IAAA,uBAAA;AAElC,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAgB,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA;AAC7C,IAAA,yBAAA,GAAA,MAAA,EAAA;AAAgB,IAAA,iBAAA,CAAA;;AAAmD,IAAA,uBAAA;AACnE,IAAA,yBAAA,IAAA,MAAA,EAAA;AAAgB,IAAA,iBAAA,EAAA;AAAkB,IAAA,uBAAA,EAAK;;;;AALvB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,OAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,SAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,oBAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,QAAA,gBAAA,kBAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,QAAA,SAAA;;;ADZ9B,IAAO,mCAAP,MAAO,iCAA+B;EAE1C,YACS,WACyB,MACxB,IACA,MACA,SACA,MAAiB;AALlB,SAAA,YAAA;AACyB,SAAA,OAAA;AACxB,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,UAAA;AACA,SAAA,OAAA;AAUV,SAAA,UAAiB,CAAA;EARb;EAEJ,WAAQ;AAGN,SAAK,YAAW;EAClB;EAIA,cAAW;AACT,QAAI,MAAW,CAAA;AACf,QAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,QAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,QAAI,UAAU,CAAC,KAAK,KAAK,KAAK,OAAO;AAErC,SAAK,QAAQ,aAAa,GAAG,EAAE,UAAU,EAAC,MAAM,SAAK;AAGnD,WAAK,UAAW;AAChB,cAAQ,IAAI,KAAK,OAAO;IAC1B,GAAE,OAAO,SAAM;AACb,WAAK,KAAK,KAAI;AACd,WAAK,GAAG,eAAe,GAAG;IAC5B,EAAC,CAAC;EACJ;;;mBAnCW,kCAA+B,4BAAA,YAAA,GAAA,4BAIhC,eAAe,GAAA,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,WAAA,CAAA;AAAA;iGAJd,kCAA+B,WAAA,CAAA,CAAA,8BAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,cAAA,QAAA,SAAA,OAAA,MAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,GAAA,UAAA,aAAA,MAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,cAAA,aAAA,GAAA,CAAA,SAAA,KAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,SAAA,4BAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,UAAA,eAAA,QAAA,GAAA,YAAA,YAAA,SAAA,QAAA,UAAA,IAAA,GAAA,CAAA,oBAAA,IAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,GAAA,UAAA,iBAAA,GAAA,CAAA,SAAA,KAAA,CAAA,GAAA,UAAA,SAAA,yCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACZ5C,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAoD,GAAA,OAAA,CAAA,EACe,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,GAAA,eAAA;AAAa,IAAA,uBAAA,EAAI;AAG1D,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAmC,GAAA,SAAA,CAAA,EACY,GAAA,SAAA,CAAA,EACC,GAAA,IAAA,EAChC,GAAA,MAAA,CAAA;AACgB,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AACxB,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AAEpB,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAC3B,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AACpB,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAgB,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAK,EACxB;AAET,IAAA,yBAAA,IAAA,SAAA,CAAA;AACI,IAAA,qBAAA,IAAA,gDAAA,IAAA,GAAA,MAAA,CAAA;AAQJ,IAAA,uBAAA,EAAQ,EACJ;AAGZ,IAAA,yBAAA,IAAA,OAAA,CAAA,EAA0F,IAAA,UAAA,EAAA;AAC9B,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA,EAAS,EACrE;;;AAd4D,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,OAAA;;;ADNhE,IAAO,kCAAP;;6EAAO,iCAA+B,EAAA,WAAA,mCAAA,UAAA,4HAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;;AGYhB,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAU/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAqB/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAoC/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAU/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAiB/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAiB/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAiB/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AA0B/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAkE/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAY/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;;AAXnC,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAqG,GAAA,KAAA,EAAA;AACjD,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,yBAAA,GAAA,cAAA;AACI,IAAA,oBAAA,GAAA,SAAA,GAAA;AAGA,IAAA,yBAAA,GAAA,UAAA,EAAA;AACI,IAAA,qBAAA,SAAA,SAAA,kEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,OAAA,aAAA,SAAA,WAAA,KAAA,CAA4D;IAAA,CAAA;AAC5C,IAAA,oBAAA,GAAA,KAAA,GAAA;AAA8B,IAAA,uBAAA,EAAS;AAExE,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;AARY,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,UAAA,OAAA,aAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA;AAMI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,sBAAA,YAAA,CAAA;;;;;AAUZ,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAU/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AARnC,IAAA,yBAAA,GAAA,OAAA,GAAA,EACkC,GAAA,KAAA,EAAA;AACkB,IAAA,iBAAA,GAAA,qBAAA;AAAmB,IAAA,uBAAA;AACnE,IAAA,oBAAA,GAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;AAHwB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAAC,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,OAAA,iBAAA,EAA6B,aAAA,UAAA,OAAA,aAAA,IAAA,mBAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA,EAE+D,cAAA,0BAAA,GAAAA,IAAA,CAAA;AAE5F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,sBAAA,mBAAA,CAAA;;;;;AASZ,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AANnC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA8F,GAAA,KAAA,EAAA;AAC1C,IAAA,iBAAA,GAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,GAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;AAJQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,UAAA,OAAA,aAAA,IAAA,WAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,sBAAA,WAAA,CAAA;;;;;AASZ,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AANnC,IAAA,yBAAA,GAAA,OAAA,GAAA,EAA+F,GAAA,KAAA,EAAA;AAC3C,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,GAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,GAAA,qDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;;;;;AAJQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,UAAA,OAAA,aAAA,IAAA,YAAA,MAAA,OAAA,OAAA,QAAA,YAAA,OAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,sBAAA,YAAA,CAAA;;;;;AAiBZ,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA;AACI,IAAA,iBAAA,GAAA,UAAA;AAAQ,IAAA,uBAAA;AACZ,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,cAAA;AAAY,IAAA,uBAAA;AAChB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,aAAA;AAAW,IAAA,uBAAA;AACf,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AACZ,IAAA,yBAAA,IAAA,MAAA,GAAA;AACI,IAAA,iBAAA,IAAA,UAAA;AAAO,IAAA,uBAAA,EAAK;;;;;;AAIpB,IAAA,yBAAA,GAAA,MAAA,EAAA,EAAuB,GAAA,IAAA;AAEf,IAAA,oBAAA,GAAA,SAAA,GAAA;AAC8B,IAAA,uBAAA;AAClC,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,oBAAA,GAAA,SAAA,GAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,oBAAA,GAAA,SAAA,GAAA;AAA+E,IAAA,uBAAA;AACnF,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,oBAAA,GAAA,SAAA,GAAA;AACiC,IAAA,uBAAA;AACrC,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,oBAAA,IAAA,cAAA,GAAA;AAGJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,MAAA,GAAA,EAA6C,IAAA,OAAA,GAAA;AACY,IAAA,qBAAA,SAAA,SAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,MAAA,OAAA,MAAA,CAAiB;IAAA,CAAA;AAA/E,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,kBAAA,MAAA,CAAA,EAA+C,IAAA,OAAA,GAAA,EACX,IAAA,UAAA,GAAA;AAExB,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,UAAA,OAAA,UAAA,UAAmC,SAAO,IAAA;AAAI,aAAA,sBAAE,MAAA,KAAA,CAAS;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,GAAA;AAGtD,IAAA,iBAAA,IAAA,WAAA;AAAS,IAAA,uBAAA;AAC3B,IAAA,yBAAA,IAAA,UAAA,GAAA;AACI,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,WAAA,OAAA,UAAA,UAAA,IAAA;AAAsC,aAAA,sBAAE,MAAA,KAAA,CAAS;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,GAAA;AAEL,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AAC/D,IAAA,yBAAA,IAAA,UAAA,GAAA;AACI,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,SAAA,wBAAA,GAAA;AAAA,YAAA,OAAA,OAAA;AAAA,YAAA,aAAA,OAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,kBAAA,MAAA,UAAA;AAA6B,aAAA,sBAAE,MAAA,KAAA,CAAS;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,GAAA;AAEI,IAAA,iBAAA,IAAA,QAAA;AAAM,IAAA,uBAAA;AACjE,IAAA,yBAAA,IAAA,UAAA,GAAA;AACI,IAAA,qBAAA,SAAA,SAAA,4EAAA;AAAA,YAAA,OAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,QAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAS,aAAA,YAAA,OAAA,UAAA,UAAA,IAAA;AAAuC,aAAA,sBAAE,MAAA,KAAA,CAAS;IAAA,CAAA;AAAE,IAAA,oBAAA,IAAA,OAAA,GAAA;AAEN,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA,EAAS,EACvE,EACO,EAChB;;;;;AAvCL,IAAA,qBAAA,aAAA,QAAA;AAYwD,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,0BAAA,GAAAA,IAAA,CAAA;AADxC,IAAA,qBAAA,WAAA,OAAA,gBAAA,EAA4B,cAAA,0BAAA,GAAAA,IAAA,CAAA;AAOxB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,GAAAC,IAAA,CAAA;;;;;AA+CxB,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAgB/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAe/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAe/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AA6B/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAoC/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAS/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAQ/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAqB/B,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,QAAA,GAAA;;;;;AALR,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,GAAA;AAEI,IAAA,oBAAA,GAAA,yBAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,oEAAA,GAAA,GAAA,MAAA,GAAA;AAGA,IAAA,yBAAA,GAAA,MAAA,GAAA;AACI,IAAA,iBAAA,GAAA,iBAAA;AACJ,IAAA,uBAAA,EAAK;;;;AAPmC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AAEpB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAchB,IAAA,kCAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,KAAA,GAAA,GAAA;;;;;AAGA,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,YAAA,WAAA,kBAAA,GAAA,GAAA;;;;;AALR,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,qBAAA,GAAA,mFAAA,GAAA,GAAA,gBAAA,GAAA,EAA+D,GAAA,kFAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAMnE,IAAA,uBAAA;;;;;AAPgC,IAAA,qBAAA,QAAA,KAAA;AACb,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,MAAA,EAA6B,YAAA,gBAAA;;;;;;AALpD,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,GAAA;AAEI,IAAA,oBAAA,GAAA,mBAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,oEAAA,GAAA,GAAA,MAAA,GAAA;AAQA,IAAA,yBAAA,GAAA,MAAA,GAAA,EAA8C,GAAA,OAAA,GAAA;AACkE,IAAA,qBAAA,SAAA,SAAA,qFAAA;AAAA,YAAA,cAAA,wBAAA,IAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAa,SAAO,WAAA,CAAS;IAAA,CAAA;AAAlJ,IAAA,uBAAA,EAAqJ,EACpJ;;;;;AAZgB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,EAAiB,SAAA,WAAA;AAElB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAcxB,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA,EACuB,GAAA,KAAA,GAAA;AACQ,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAI,EAC9C;;;AAFD,IAAA,oBAAA;;;;;;;AAtCpB,IAAA,yBAAA,GAAA,cAAA,GAAA,EAA0E,GAAA,WAAA,KAAA,CAAA;AAErB,IAAA,2BAAA,mBAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,iBAAA,MAAA,MAAA,OAAA,kBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAG7C,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,eAAA,EAAA,EAA4C,GAAA,+DAAA,GAAA,GAAA,eAAA,EAAA,EAa6D,GAAA,+DAAA,GAAA,GAAA,eAAA,GAAA;AAyB7G,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkG,GAAA,UAAA,EAAA;AAEvD,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,OAAA,cAAA,OAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,OAAA,cAAA,OAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACnG;;;;AAhDyB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,MAAA,EAAkB,SAAA,OAAA,OAAA,EAAkB,cAAA,IAAA;AAClB,IAAA,2BAAA,aAAA,OAAA,eAAA;AACkB,IAAA,qBAAA,aAAA,EAAA,EAAgB,cAAA,0BAAA,GAAAC,IAAA,CAAA;;;;;AAoFvE,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AA+C/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AAO/B,IAAA,yBAAA,GAAA,aAAA,GAAA,EACwB,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAqB,IAAA,uBAAA,EAAQ;;;;AAA7B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,gBAAA,CAAA;;;;;AA8L/B,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,QAAA,GAAA;;;;;AALR,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,GAAA;AAEI,IAAA,oBAAA,GAAA,yBAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,oEAAA,GAAA,GAAA,MAAA,GAAA;AAGJ,IAAA,uBAAA;;;;AAL4C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA;AAEpB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAWhB,IAAA,kCAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,YAAA,QAAA,KAAA,GAAA,GAAA;;;;;AAGA,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,YAAA,WAAA,kBAAA,GAAA,GAAA;;;;;AALR,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,qBAAA,GAAA,mFAAA,GAAA,GAAA,gBAAA,GAAA,EAA+D,GAAA,kFAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAMnE,IAAA,uBAAA;;;;;AAPgC,IAAA,qBAAA,QAAA,KAAA;AACb,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,WAAA,MAAA,EAA6B,YAAA,gBAAA;;;;;AALpD,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,MAAA,GAAA;AAEI,IAAA,oBAAA,GAAA,mBAAA,GAAA;AACJ,IAAA,uBAAA;AACA,IAAA,qBAAA,GAAA,oEAAA,GAAA,GAAA,MAAA,GAAA;AAQJ,IAAA,uBAAA;;;;;AAVyB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,EAAiB,SAAA,WAAA;AAElB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAchB,IAAA,kCAAA,CAAA;AACI,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;;;;;;AADI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,qBAAA,QAAA,KAAA,KAAA,IAAA,OAAA,qBAAA,QAAA,KAAA,IAAA,IAAA,GAAA;;;;;AAGR,IAAA,kCAAA,CAAA;AACI,IAAA,oBAAA,GAAA,IAAA;;;;;;AAPR,IAAA,kCAAA,CAAA;AACI,IAAA,qBAAA,GAAA,6FAAA,GAAA,GAAA,gBAAA,GAAA,EAAqC,GAAA,6FAAA,GAAA,GAAA,gBAAA,GAAA;;;;;AAAtB,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,QAAA,UAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,CAAA,QAAA,UAAA;;;;;AARvB,IAAA,yBAAA,GAAA,IAAA;AACI,IAAA,oBAAA,GAAA,IAAA;AACA,IAAA,qBAAA,GAAA,8EAAA,GAAA,GAAA,gBAAA,GAAA;AAUA,IAAA,oBAAA,GAAA,IAAA;AACJ,IAAA,uBAAA;;;;AAXkC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,WAAA;;;;;AAclC,IAAA,yBAAA,GAAA,IAAA,EAAI,GAAA,IAAA,EACuB,GAAA,KAAA,GAAA;AACQ,IAAA,iBAAA,GAAA,kBAAA;AAAgB,IAAA,uBAAA,EAAI,EAC9C;;;AAFD,IAAA,oBAAA;;;;;;;AAhDpB,IAAA,yBAAA,GAAA,cAAA,GAAA,EAA2E,GAAA,WAAA,KAAA,CAAA;AAEtB,IAAA,2BAAA,mBAAA,SAAA,mFAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,qBAAA,MAAA,MAAA,OAAA,sBAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AAG7C,IAAA,qBAAA,GAAA,+DAAA,GAAA,GAAA,eAAA,EAAA,EAA4C,GAAA,+DAAA,GAAA,GAAA,eAAA,EAAA,EAUoB,GAAA,+DAAA,GAAA,GAAA,eAAA,GAAA,EAepB,GAAA,+DAAA,GAAA,GAAA,eAAA,GAAA;AAuBhD,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkG,GAAA,UAAA,EAAA;AACvD,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAA,OAAA,cAAA,OAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAAE,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACnF;;;;AAxDmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,IAAA,EAAgB,SAAA,OAAA,YAAA,EAAuB,cAAA,IAAA;AACf,IAAA,2BAAA,aAAA,OAAA,mBAAA;AACkB,IAAA,qBAAA,aAAA,EAAA,EAAgB,cAAA,0BAAA,GAAAC,IAAA,CAAA;;;ADrvC7F,IAAO,2BAAP,MAAO,yBAAuB;EAmBlC,YACU,IACA,MACA,OACA,QACA,MACA,IACA,SACA,gBACA,KACA,MACA,IACD,QACA,gBACA,iBACA,kBACA,UAAmC;AAflC,SAAA,KAAA;AACA,SAAA,OAAA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;AACA,SAAA,OAAA;AACA,SAAA,KAAA;AACA,SAAA,UAAA;AACA,SAAA,iBAAA;AACA,SAAA,MAAA;AACA,SAAA,OAAA;AACA,SAAA,KAAA;AACD,SAAA,SAAA;AACA,SAAA,iBAAA;AACA,SAAA,kBAAA;AACA,SAAA,mBAAA;AACA,SAAA,WAAA;AAhCT,SAAA,cAAsB;AACtB,SAAA,SAAgB,CAAA;AAChB,SAAA,cAAqB,CAAA;AACrB,SAAA,cAAqB,CAAA;AACrB,SAAA,YAAmB,CAAA;AACnB,SAAA,oBAA2B,CAAA;AAC3B,SAAA,kBAAkB;AAClB,SAAA,iBAAiB;AACjB,SAAA,mBAAmB;AACnB,SAAA,kBAAkB;AAClB,SAAA,sBAAsB;AACtB,SAAA,gBAAgB;AAChB,SAAA,oBAAoB;AACpB,SAAA,iBAAiB;AAgDjB,SAAA,eAAe,KAAK,GAAG,MAAM;MAC3B,WAAW,CAAC,KAAK,KAAK,SAAS;MAC/B,UAAU,CAAA;MACV,WAAW,CAAA;MACX,aAAa,CAAC,IAAI,WAAW,QAAQ;MACrC,eAAe,CAAA;MACf,WAAW,CAAC,EAAE,WAAW,QAAQ;MACjC,aAAa,CAAC,CAAA;MACd,UAAU,CAAC,CAAA;MACX,aAAa,CAAC,CAAA;MACd,WAAW,CAAA;MACX,aAAa,CAAA;MACb,cAAc,CAAA;MACd,gBAAgB,CAAA;MAChB,eAAe,CAAC,EAAE,WAAW,QAAQ;MACrC,iBAAiB,CAAA;MACjB,cAAc,CAAA;MACd,kBAAkB,CAAA;MAClB,iBAAiB,CAAA;MACjB,eAAe,CAAA;MACf,iBAAiB,CAAA;MACjB,iBAAiB,CAAA;MACjB,sBAAsB,CAAA;MACtB,iBAAiB,CAAC,CAAA;MAClB,cAAc,CAAA;MACd,YAAY,CAAA;MACZ,WAAW,CAAA;MACX,mBAAmB,CAAA;MACnB,YAAY,CAAA;MACZ,yBAAyB,CAAA;MACzB,YAAY,CAAA;MACZ,cAAc,CAAA;MACd,wBAAwB,CAAA;MACxB,YAAY,CAAA;MACZ,UAAU,CAAC,CAAA;MACX,YAAY,CAAC,EAAE,WAAW,QAAQ;MAClC,gBAAgB,CAAA;MAChB,gBAAgB,CAAA;MAChB,eAAe,CAAA;MACf,+BAA+B,CAAA;MAC/B,eAAe,CAAA;MACf,YAAY,CAAA;KACb;AAED,SAAA,cAAc,KAAK,GAAG,MAAM,CAAA,CAE3B;AAGD,SAAA,gBAAgB,KAAK,GAAG,MAAM;MAC5B,WAAW,CAAA;MACX,gBAAgB,CAAC,CAAA;MACjB,cAAc,CAAA;MACd,cAAc,CAAA;MACd,gBAAgB,CAAA;MAChB,MAAM,CAAA;MACN,aAAa,CAAA;MACb,SAAS,CAAA;MACT,UAAU,CAAA;MACV,OAAO,CAAA;MACP,UAAU,CAAA;MACV,WAAW,CAAA;MACX,MAAM,CAAA;MACN,OAAO,CAAA;MACP,SAAS,CAAA;MACT,OAAO,CAAA;KACR;AAGD,SAAA,qBAAqB,KAAK,GAAG,MAAM;MACjC,WAAW,CAAC,CAAA;MACZ,gBAAgB,CAAA;MAChB,cAAc,CAAA;MACd,cAAc,CAAA;MACd,gBAAgB,CAAA;MAChB,MAAM,CAAC,CAAA;MACP,aAAa,CAAA;MACb,SAAS,CAAA;MACT,UAAU,CAAA;MACV,OAAO,CAAA;MACP,UAAU,CAAA;MACV,WAAW,CAAA;MACX,MAAM,CAAA;MACN,OAAO,CAAA;MACP,SAAS,CAAA;MACT,OAAO,CAAA;KACR;AAGD,SAAA,aAAa,KAAK,GAAG,MAAM;MACzB,WAAW,CAAA;MACX,aAAa,CAAA;MACb,eAAe,KAAK;KACrB;AAED,SAAA,eAAe,KAAK,GAAG,MAAM;MAC3B,eAAe,CAAC,CAAA;MAChB,kBAAkB,CAAA;MAClB,oBAAoB,KAAK;KAC1B;AAED,SAAA,UAAU,KAAK,GAAG,MAAM;;;;;;MAMtB,iBAAiB,CAAA;MACjB,eAAe,CAAA;;;;MAIf,WAAW,CAAA;MACX,iBAAiB,CAAA;MACjB,sBAAsB,CAAA;;;;MAItB,yBAAyB,CAAA;;;MAGzB,aAAa,CAAA;;;MAGb,MAAM,CAAA;MACN,WAAW,CAAA;MACX,cAAc,CAAA;MACd,uBAAuB,CAAA;MACvB,cAAc,CAAA;MACd,uBAAuB,CAAA;MACvB,gBAAgB,CAAC,IAAI;MACrB,cAAc,CAAA;MACd,kBAAkB,CAAA;MAClB,SAAS,CAAA;MACT,YAAY,CAAA;MACZ,qBAAqB,CAAA;KACtB;AAED,SAAA,cAAc,KAAK,GAAG,MAAM;MAC1B,QAAQ,CAAA;MACR,OAAO,CAAA;MACP,QAAQ,CAAA;MACR,eAAe,CAAA;MACf,QAAQ,CAAA;MACR,YAAY,CAAA;MACZ,QAAQ,CAAA;MACR,YAAY,CAAA;MACZ,aAAa,CAAC,CAAA;MACd,eAAe,CAAC,oBAAI,MAAI;MACxB,qBAAqB,CAAA;MACrB,kBAAkB,CAAA;MAClB,aAAa,CAAA;MACb,qBAAqB,CAAA;MACrB,kBAAkB,CAAA;MAClB,wBAAwB,CAAA;MACxB,yBAAyB,CAAA;MACzB,mBAAmB,CAAA;MACnB,mBAAmB,CAAA;MACnB,cAAc,CAAA;MACd,YAAY,CAAA;MACZ,UAAU,CAAA;MACV,aAAa,CAAA;MACb,WAAW,CAAA;MACX,aAAa,CAAA;KACd;AAED,SAAA,QAAQ,KAAK,GAAG,MAAM;MACpB,cAAc,KAAK,GAAG,MAAM,CAAA,CAC3B;KACF;AAiPD,SAAA,OAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,CAAA;MACZ,WAAW,CAAC,EAAE;MACd,WAAW,CAAC,EAAE;MACd,WAAW,CAAC,CAAA;MACZ,eAAe,CAAA;KAChB;AAID,SAAA,YAAY;AACZ,SAAA,QAAQ,IAAI,YAAY,IAAI,CAAC,WAAW,UAAU,WAAW,KAAK,CAAC;AAsDnE,SAAA,gBAAuB,CAAA;AACvB,SAAA,iBAAwB,CAAA;AACxB,SAAA,gBAAuB,CAAA;AACvB,SAAA,mBAA0B,CAAA;AAC1B,SAAA,oBAA2B,CAAA;AAC3B,SAAA,wBAA+B,CAAA;AAC/B,SAAA,iBAAwB,CAAA;AACxB,SAAA,sBAA6B,CAAA;AAC7B,SAAA,2BAAkC,CAAA;AAClC,SAAA,aAAoB,CAAA;AACpB,SAAA,iBAAwB,CAAA;AACxB,SAAA,cAAqB,CAAA;AACrB,SAAA,mBAA0B,CAAA;AAwC1B,SAAA,kBAAyB,CAAA;AA8EzB,SAAA,eAAqB,CAAA;AACrB,SAAA,sBAA4B,CAAA;AAE5B,SAAA,OAAa,CAAA;AAEb,SAAA,UAAiB,CAAA;AACjB,SAAA,kBAAyB,CAAA;AAEzB,SAAA,SAAiB,CAAA;AAkbjB,SAAA,WAAsB,IAAI,UAAU,CAAA,CAEnC;AAyDD,SAAA,wBAAwB;AAUxB,SAAA,sBAA6B,CAAA;AA4B7B,SAAA,gBAAiC;AAMjC,SAAA,oBAA2B,CAAA;AAzpCzB,SAAK,SAAS;MACZ,EAAE,OAAO,MAAM,OAAO,WAAU;MAChC,EAAE,OAAO,MAAM,OAAO,SAAQ;;AAEhC,SAAK,cAAc;MACjB,EAAE,OAAO,YAAY,OAAO,WAAU;MACtC,EAAE,OAAO,aAAa,OAAO,YAAW;;AAE1C,SAAK,cAAc;MACjB,EAAE,OAAO,WAAW,OAAO,UAAS;MACpC,EAAE,OAAO,OAAO,OAAO,MAAK;;AAE9B,SAAK,YAAY;MACf,EAAE,OAAO,OAAO,OAAO,MAAK;MAC5B,EAAE,OAAO,OAAO,OAAO,MAAK;;AAE9B,SAAK,oBAAoB;MACvB,EAAE,OAAO,QAAQ,OAAO,OAAM;MAC9B,EAAE,OAAO,UAAU,OAAO,SAAQ;MAClC,EAAE,OAAO,UAAU,OAAO,SAAQ;MAClC,EAAE,OAAO,QAAQ,OAAO,OAAM;;EAElC;EAgLA,kBAAe;AACd,UAAM,UAAW,KAAK,MAAM,SAAS;AACpC,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,EAAE;MACd,eAAe,CAAC,EAAE;MAClB,aAAa,CAAC,EAAE;MAChB,eAAe,CAAC,EAAE;MAClB,QAAQ,CAAC,EAAE;MACX,aAAa,KAAK,GAAG,MAAM,CAAA,CAAE;MAC7B,QAAQ,CAAC,EAAE;MACX,qBAAqB,CAAC,QAAQ,MAAM,SAAS,CAAC;MAC9C,kBAAkB,CAAC,EAAE;MACrB,WAAW,CAAC,EAAE;MACd,iBAAiB,CAAC,EAAE;MACpB,kBAAkB,CAAC,EAAE;MACrB,MAAM,CAAC,EAAE;MACT,aAAa,CAAC,EAAE;MAChB,SAAS,CAAC,EAAE;MACZ,iBAAiB,CAAC,EAAE;MACpB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,iBAAiB,CAAC,EAAE;MACpB,kBAAkB,CAAC,EAAE;MACrB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,oBAAoB,KAAK,GAAG,MAAM,CAAA,CAAE;MACpC,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,OAAO,CAAC,EAAE;MACV,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,eAAe,CAAC,EAAE;KACnB;EACH;EAEA,iBAAc;AACZ,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,EAAE;MACd,eAAe,CAAC,EAAE;MAClB,aAAa,CAAC,EAAE;MAChB,eAAe,CAAC,EAAE;MAClB,QAAQ,CAAC,EAAE;MACX,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,UAAU,CAAC,EAAE;MACb,QAAQ,CAAC,EAAE;MACX,aAAa,CAAC,EAAE;MAChB,aAAa,CAAC,EAAE;MAChB,aAAa,CAAC,EAAE;MAChB,iBAAiB,CAAC,EAAE;MACpB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,kBAAkB,CAAC,EAAE;MACrB,iBAAiB,CAAC,EAAE;MACpB,kBAAkB,CAAC,EAAE;MACrB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,iBAAiB,CAAC,EAAE;MACpB,oBAAoB,KAAK,GAAG,MAAM,CAAA,CAAE;MACpC,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,QAAQ,CAAC,EAAE;MACX,YAAY,CAAC,EAAE;MACf,OAAO,CAAC,EAAE;MACV,UAAU,CAAC,EAAE;MACb,WAAW,CAAC,EAAE;MACd,UAAU,CAAC,EAAE;KACd;EACH;EAEA,iBAAc;AACZ,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,YAAQ,KAAK,KAAK,gBAAe,CAAE;EACrC;EAEA,kBAAkB,OAAe,MAAQ;AACvC,UAAM,UAAU,KAAK,MAAM,SAAS;AACpC,YAAQ,SAAS,KAAK;AACtB,SAAK,QAAQ,YAAY,KAAK,YAAW,CAAE,EAAE,UAAU,EAAC,MAAM,CAAC,QAAO;IAAE,EAAC,CAAC;EAC5E;EAEA,cAAc,YAAkB;AAC9B,UAAM,UAAW,KAAK,MAAM,SAAS,aAA2B,GAAG,UAAU,EAAE,IAAI,aAAa;AAChG,YAAQ,KAAK,KAAK,eAAc,CAAE;EACpC;EAEA,iBAAiB,YAAoB,WAAiB;AACpD,UAAM,UAAW,KAAK,MAAM,SAAS,aAA2B,GAAG,UAAU,EAAE,IAAI,aAAa;AAChG,YAAQ,SAAS,SAAS;EAC5B;EAGA,UAAU,cAAiB;AACzB,UAAM,cAAc,KAAK,MAAM,IAAI,cAAc;AACjD,iBAAa,aAAa,QAAQ,CAAC,UAAc;AAC/C,kBAAY,KAAK,KAAK,iBAAiB,KAAK,CAAC;IAC/C,CAAC;EACH;EAEA,iBAAiB,OAAU;AACzB,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,MAAM,SAAS;MAC3B,eAAe,CAAC,MAAM,aAAa;MACnC,aAAa,CAAC,MAAM,WAAW;MAC/B,eAAe,CAAC,MAAM,aAAa;MACnC,QAAQ,CAAC,MAAM,MAAM;MACrB,aAAa,KAAK,iBAAiB,MAAM,WAAW;MACpD,QAAQ,CAAC,MAAM,MAAM;MACrB,qBAAqB,CAAC,MAAM,mBAAmB;MAC/C,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,iBAAiB,CAAC,MAAM,eAAe;MACvC,WAAW,CAAC,MAAM,SAAS;MAC3B,aAAa,CAAC,MAAM,WAAW;MAC/B,SAAS,CAAC,MAAM,OAAO;MACvB,iBAAiB,CAAC,MAAM,eAAe;MACvC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,iBAAiB,CAAC,MAAM,eAAe;MACvC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,iBAAiB,CAAC,MAAM,eAAe;MACvC,oBAAoB,KAAK,qBAAqB,MAAM,kBAAkB;MACtE,QAAQ,CAAC,MAAM,MAAM;MACrB,YAAY,CAAC,MAAM,UAAU;MAC7B,QAAQ,CAAC,MAAM,MAAM;MACrB,YAAY,CAAC,MAAM,UAAU;MAC7B,OAAO,CAAC,MAAM,KAAK;MACnB,QAAQ,CAAC,MAAM,MAAM;MACrB,YAAY,CAAC,MAAM,UAAU;MAC7B,eAAe,CAAC,MAAM,aAAa;MACnC,kBAAkB,CAAC,MAAM,gBAAgB;MACzC,MAAO,CAAC,MAAM,IAAI;KACnB;EACH;EAEA,iBAAiB,aAAkB;AACjC,WAAO,KAAK,GAAG,MAAM,YAAY,IAAI,UAAQ,KAAK,gBAAgB,IAAI,CAAC,CAAC;EAC1E;EAEA,gBAAgB,MAAS;AACvB,WAAO,KAAK,GAAG,MAAM;MACnB,WAAW,CAAC,KAAK,SAAS;MAC1B,eAAe,CAAC,KAAK,aAAa;MAClC,aAAa,CAAC,KAAK,WAAW;MAC9B,eAAe,CAAC,KAAK,aAAa;MAClC,QAAQ,CAAC,KAAK,MAAM;MACpB,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,UAAU,CAAC,KAAK,QAAQ;MACxB,QAAQ,CAAC,KAAK,MAAM;MACpB,aAAa,CAAC,KAAK,WAAW;MAC9B,aAAa,CAAC,KAAK,WAAW;MAC9B,aAAa,CAAC,KAAK,WAAW;MAC9B,iBAAiB,CAAC,KAAK,eAAe;MACtC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,iBAAiB,CAAC,KAAK,eAAe;MACtC,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,iBAAiB,CAAC,KAAK,eAAe;MACtC,oBAAoB,KAAK,qBAAqB,KAAK,kBAAkB;MACrE,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,QAAQ,CAAC,KAAK,MAAM;MACpB,YAAY,CAAC,KAAK,UAAU;MAC5B,OAAO,CAAC,KAAK,KAAK;MAClB,UAAU,CAAC,KAAK,QAAQ;MACxB,WAAW,CAAC,KAAK,SAAS;MAC1B,UAAU,CAAC,KAAK,QAAQ;MACxB,kBAAkB,CAAC,KAAK,gBAAgB;MACxC,iBAAiB,CAAC,KAAK,eAAe;MACtC,WAAW,CAAC,KAAK,SAAS;KAC3B;EACH;EAEA,qBAAqB,oBAAyB;AAC5C,QAAI,sBAAsB,MAAM;AAC9B;;AAEF,WAAO,KAAK,GAAG,MAAM,mBAAmB,IAAI,WAAS,KAAK,GAAG,MAAM;MACjE,YAAY,CAAC,MAAM,UAAU;MAC7B,QAAQ,CAAC,MAAM,MAAM;MACrB,mBAAmB,CAAC,MAAM,iBAAiB;KAC5C,CAAC,CAAC;EACL;EAeA,sBAAsB,SAAiB,QAAgB,YAAU;AAC/D,UAAM,kBAAkB,KAAK,aAAa,IAAI,OAAO;AACrD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,qBAAqB,SAAiB,QAAgB,YAAU;AAC9D,UAAM,kBAAkB,KAAK,YAAY,IAAI,OAAO;AACpD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,oBAAoB,SAAiB,QAAgB,YAAU;AAC7D,UAAM,kBAAkB,KAAK,WAAW,IAAI,OAAO;AACnD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,sBAAsB,SAAiB,QAAgB,YAAU;AAC/D,UAAM,kBAAkB,KAAK,aAAa,IAAI,OAAO;AACrD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,qBAAqB,SAAiB,QAAgB,YAAU;AAC9D,UAAM,kBAAkB,KAAK,QAAQ,IAAI,OAAO;AAChD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,yBAAyB,SAAiB,QAAgB,YAAU;AAClE,UAAM,kBAAkB,KAAK,YAAY,IAAI,OAAO;AACpD,WAAO,mBAAmB,gBAAgB,SAAS,KAAK,KAAK,KAAK;EACpE;EACA,kBAAe;AACb,QAAI,KAAK,MAAM,SAAS,UAAU,GAAG;AACnC,aAAO;;AAET,WAAO,KAAK,MAAM,SAAS,OAAO,IAAI,sBAAsB;EAC9D;EAEA,WAAQ;AACN,QAAI,OAAO,KAAK,MAAM,SAAS,OAAO,MAAM;AAC5C,SAAK,YAAY,KAAK,GAAG,QAAQ,IAAI;AAErC,UAAM,aAAa,CAAC,cAAc,eAAe,KAAK,UAAU,QAAQ;AACxE,SAAK,KAAK,QAAQ,UAAU;AAE5B,SAAK,aAAY;AAEjB,SAAK,aAAa,SAAS,UAAU,QAAO;AAE5C,QAAI,KAAK,UAAU,YAAY,OAAO;AACpC,WAAK,KAAK,KAAK,UAAU,IAAI;AAC7B,WAAK,KAAK,SAAS,UAAU,QAAO;AACpC,WAAK,KAAK,SAAS,UAAU,QAAO;AACpC,WAAK,KAAK,SAAS,UAAU,QAAO;AACpC,WAAK,KAAK,SAAS,UAAU,QAAO;;AAGtC,SAAK,YAAW;EAClB;EAgBA,eAAY;AACV,SAAK,KAAK,KAAI;AACd,SAAK,IAAI,mBAAmB;MAC1B,KAAK,IAAI,aAAa,MAAM,QAAQ;MACpC,KAAK,IAAI,aAAa,MAAM,SAAS;MACrC,KAAK,IAAI,aAAa,MAAM,QAAQ;MACpC,KAAK,IAAI,aAAa,MAAM,WAAW;MACvC,KAAK,IAAI,aAAa,MAAM,YAAY;MACxC,KAAK,IAAI,aAAa,MAAM,gBAAgB;MAC5C,KAAK,IAAI,aAAa,MAAM,SAAS;MACrC,KAAK,IAAI,aAAa,MAAM,QAAQ;MACpC,KAAK,IAAI,aAAa,MAAM,KAAK;MACjC,KAAK,IAAI,aAAa,MAAM,SAAS;MACrC,KAAK,IAAI,aAAa,MAAM,SAAS;KACtC,EAAE,UAAU;MACX,MAAM,CAAC,YAAgB;AACrB,aAAK,gBAAgB,KAAK,IAAI,YAAY,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,QAAQ,GAAG;AAC7F,aAAK,iBAAiB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,SAAS,GAAG;AACrG,aAAK,gBAAgB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,QAAQ,GAAG;AACnG,aAAK,mBAAmB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,WAAW,GAAG;AACzG,aAAK,oBAAoB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,YAAY,GAAG;AAC3G,aAAK,wBAAwB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,gBAAgB,GAAG;AACnH,aAAK,iBAAiB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,SAAS,GAAG;AACrG,aAAK,sBAAsB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,QAAQ,GAAG;AACzG,aAAK,2BAA2B,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,QAAQ,GAAG;AAC9G,aAAK,aAAa,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,KAAK,GAAG;AAC7F,aAAK,iBAAiB,KAAK,IAAI,kBAAkB,QAAQ,CAAC,GAAG,KAAK,IAAI,aAAa,MAAM,SAAS,GAAG;AACtG,aAAK,mBAAmB,KAAK,IAAI,YAAY,QAAQ,EAAE,GAAG,KAAK,IAAI,aAAa,MAAM,SAAS,GAAG;AACjG,aAAK,KAAK,KAAI;MAChB;MACA,OAAO,CAAC,QAAY;AAClB,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EAEH;EAIA,qBAAkB;AAChB,QAAI,KAAK,aAAa,SAAS,YAAY,SAAS,YAAY;AAC9D,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,WAAK,kBAAkB,CAAA;AACvB,WAAK,KAAK,KAAI;AACd,WAAK,gBAAgB,OAAO,GAAG,EAAE,UAAU;QACzC,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,YAAY,QAAQ,EAAE,KAAK,cAAc,OAAO,eAAc,CAAE;AAChG,eAAK,kBAAmB,KAAK,GAAG,8BAA+B,KAAK,iBAAiB,OAAO;AAC5F,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;AAGH,QAAI,KAAK,aAAa,SAAS,YAAY,SAAS,aAAa;AAC/D,UAAI,MAAW,CAAA;AACf,UAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,UAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,WAAK,kBAAkB,CAAA;AACvB,WAAK,KAAK,KAAI;AACd,WAAK,iBAAiB,OAAO,GAAG,EAAE,UAAU;QAC1C,MAAM,CAAC,WAAU;AACf,eAAK,kBAAkB,KAAK,IAAI,YAAY,QAAQ,EAAE,KAAK,eAAe,OAAO,gBAAe,CAAE;AAClG,eAAK,kBAAmB,KAAK,GAAG,8BAA+B,KAAK,iBAAiB,OAAO;AAC5F,eAAK,KAAK,KAAI;QAChB;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;EAEL;EAKA,KAAK,MAAS;AACZ,SAAK,KAAK,WAAW,IAAI;AACzB,SAAK,KAAK,SAAS,UAAU,WAAW,KAAK,GAAG,UAAU,KAAK,KAAK,SAAS,UAAU,KAAK,CAAC;AAC7F,SAAK,KAAK,SAAS,UAAU,WAAW,KAAK,GAAG,UAAU,KAAK,KAAK,SAAS,UAAU,KAAK,CAAC;AAE7F,SAAK,sBAAsB;AAC3B,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AAErB,SAAK,aAAa,WAAW,IAAI,GACjC,KAAK,YAAY,WAAW,IAAI,GAChC,KAAK,WAAW,WAAW,IAAI,GAC/B,KAAK,aAAa,WAAW,IAAI,GACjC,KAAK,QAAQ,WAAW,IAAI;AAG5B,SAAK,sBAAuB,KAAK,YAAY,SAAS,oBAAoB;AAC1E,SAAK,mBAAoB,KAAK,YAAY,SAAS,iBAAiB;AAEtE,SAAK,UAAU,IAAI;AACnB,QAAI,KAAK,YAAY,SAAS,YAAY,OAAO;AAC/C,WAAK,YAAY,SAAS,cAAc,WAAW,KAAK,GAAG,UAAU,KAAK,YAAY,SAAS,YAAY,KAAK,CAAC;;AAEnH,SAAK,mBAAkB;AAEvB,SAAK,aAAa,SAAS,iBAAiB,QAAO;AACnD,SAAK,aAAa,SAAS,gBAAgB,QAAO;AAElD,SAAK,kBAAiB;AACtB,SAAK,cAAc,IAAI;AACvB,SAAK,gBAAe;EACtB;;EAcA,oBAAiB;AACf,SAAK,SAAS;MACZ,EAAE,OAAO,mBAAmB,QAAQ,iBAAgB;MACpD,EAAE,OAAO,YAAY,QAAQ,OAAM;;MAEnC,EAAE,OAAO,uBAAuB,QAAQ,cAAa;MACrD,EAAE,OAAO,iBAAiB,QAAQ,QAAQ,QAAQ,OAAM;MACxD,EAAE,OAAO,aAAa,QAAQ,OAAM;;EAExC;EAEA,YAAY,OAA0B;EACtC;EACA,cAAc,OAA4B;EAC1C;EAEA,aAAU;AACR,WAAO,KAAK,KAAK,SAAS;EAC5B;EAEA,cAAW;AACT,QAAI,MAAW,CAAA;AACf,QAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,QAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,QAAI,kBAAkB,CAAC,KAAK,UAAU,KAAK,eAAe;AAE1D,SAAK,QAAQ,aAAa,GAAG,EAAE,UAAU,EAAC,MAAM,SAAK;AACnD,WAAK,UAAW;IAClB,GAAE,OAAO,SAAM;AACb,WAAK,KAAK,KAAI;AACd,WAAK,GAAG,eAAe,GAAG;IAC5B,EAAC,CAAC;EACJ;EAEA,aAAa,MAAU,MAAS;AAC9B,UAAM,YAAY,KAAK,OAAO,KAAK,iCAAiC;MAClE,cAAc;MACd,OAAO;MACP,QAAQ;MACR,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAC,UAAU,MAAM,MAAM,KAAI;KAClC;EAEH;EAGA,kBAAe;AACb,SAAK,OAAO;MACV,EAAE,OAAO,uBAAuB,QAAQ,wBAAwB,YAAY,MAAK;MACjF,EAAE,OAAO,oBAAoB,QAAQ,qBAAqB,YAAY,KAAI;MAC1E,EAAE,OAAO,gBAAgB,QAAQ,iBAAiB,YAAY,MAAK;MACnE,EAAE,OAAO,cAAc,QAAQ,QAAQ,YAAY,MAAK;MACxD,EAAE,OAAO,oBAAoB,QAAQ,qBAAqB,YAAY,KAAI;MAC1E,EAAE,OAAO,QAAQ,QAAQ,QAAQ,YAAY,KAAI;MACjD,EAAE,OAAO,yBAAyB,QAAQ,2BAA2B,YAAY,KAAI;MACrF,EAAE,OAAO,WAAW,QAAQ,YAAY,YAAY,KAAI;MACxD,EAAE,OAAO,gBAAgB,QAAQ,iBAAiB,YAAY,KAAI;MAClE,EAAE,OAAO,gBAAgB,QAAQ,UAAU,YAAY,KAAI;MAC3D,EAAE,OAAO,uBAAuB,QAAQ,yBAAyB,YAAY,KAAI;MACjF,EAAE,OAAO,aAAa,QAAQ,cAAc,YAAY,KAAI;MAC5D,EAAE,OAAO,yBAAyB,QAAQ,uBAAuB,YAAY,MAAK;MAClF,EAAE,OAAO,aAAa,QAAQ,mBAAmB,YAAY,MAAK;;EAEtE;EAEA,cAAc,MAAQ;AACpB,QAAI,MAAW,CAAA;AACf,QAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,QAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,QAAI,kBAAkB,CAAC,KAAK,eAAe;AAE3C,SAAK,QAAQ,OAAO,GAAG,EAAE,UAAU,EAAC,MAAM,SAAK;AAC7C,WAAK,eAAgB;IACvB,GAAE,OAAO,SAAM;AACb,WAAK,KAAK,KAAI;AACd,WAAK,GAAG,eAAe,GAAG;IAC5B,EAAC,CAAC;EACJ;EAEA,qBAAqB,OAAa;AAChC,QAAI,QAAQ;AACZ,SAAK,aAAa,QAAQ,UAAO;AAC/B,eAAS,OAAO,WAAW,KAAK,KAAK,CAAC,KAAK;IAC7C,CAAC;AACD,WAAO,WAAW,MAAM,QAAQ,CAAC,CAAC;EACpC;EAEA,WAAW,OAAY,OAAO,OAAU;AACtC,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,UAAU,MAAM,MAAO,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,EAAE,IAAI,aAAa,EAAc;KACxH;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,UAAI,QAAQ;AACV,cAAM,uBAAwB,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,EAAE,IAAI,aAAa;AACxG,6BAAqB,MAAK;AAC3B,cAAM,eAAgB,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK;AAC7E,qBAAa,WAAW;UACvB,YAAY,OAAO;UACnB,QAAQ,OAAO;UACf,OAAO,OAAO;UACd,QAAQ,OAAO;UACf,QAAQ,OAAO;UACf,MAAM,OAAO;UACb,QAAQ,OAAO;UACf,YAAY,OAAO;UACnB,YAAY,OAAO;UACnB,eAAe,OAAO;UACtB,eAAe,OAAO;SACvB;AACC,eAAO,MAAM,QAAQ,CAAC,SAAa;AACjC,+BAAqB,KAAK,KAAK,GAAG,MAAM;YACtC,WAAW,KAAK;YAChB,eAAe,KAAK;YACpB,aAAa,KAAK;YAClB,eAAe,KAAK;YACpB,QAAQ,KAAK;YACb,QAAQ,KAAK;YACb,YAAY,KAAK;YACjB,UAAU,KAAK;YACf,QAAQ,KAAK;YACb,aAAa,KAAK;YAClB,aAAa,KAAK;YAClB,aAAa,KAAK;YAClB,QAAQ,KAAK;YACb,YAAY,KAAK;YACjB,QAAQ,KAAK;YACb,YAAY,KAAK;YACjB,OAAO,KAAK;YACZ,UAAU,KAAK;YACf,WAAW,KAAK;YAChB,UAAU,KAAK;YACf,kBAAkB,KAAK;YACvB,WAAW,KAAK;YAChB,iBAAiB,KAAK;YACtB,oBAAoB,KAAK,qBAAqB,KAAK,kBAAkB;WACtE,CAAC;QACJ,CAAC;AACD,gBAAQ,IAAI,KAAK,KAAK;;IAE1B,CAAC;EACH;EAEA,UAAU,OAAY,OAAO,QAAa,OAAU;AAClD,UAAM,YAAY,KAAK,OAAO,KAAK,oBAAoB;MACrD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,UAAU,MAAM,QAAgB,MAAO,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,EAAC;KACxG;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,YAAM,UAAW,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK;AACxE,cAAQ,WAAW,MAAM;IAC3B,CAAC;EACH;EAEA,YAAY,OAAY,OAAO,OAAU;AACvC,UAAM,YAAY,KAAK,OAAO,KAAK,sBAAsB;MACvD,cAAc;MACd,OAAO;MACP,UAAU;MACV,UAAU,EAAE,KAAK,QAAQ,MAAM,MAAK;MACpC,MAAM,EAAE,UAAU,MAAM,MAAO,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,EAAE,IAAI,oBAAoB,GAAgB,aAAc,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,GAAG,MAAM,QAAO;KACtN;AAED,cAAU,YAAW,EAAG,UAAU,YAAS;AACzC,UAAI,QAAQ;AACV,cAAM,wBAAyB,KAAK,MAAM,SAAS,aAA2B,GAAG,KAAK,EAAE,IAAI,oBAAoB;AAChH,8BAAsB,MAAK;AAC3B,eAAO,QAAQ,CAAC,UAAc;AAC5B,gCAAsB,KAAK,KAAK,GAAG,MAAM;YACvC,YAAY,MAAM;YAClB,QAAQ,MAAM;YACd,mBAAmB,MAAM;WAC1B,CAAC;QACJ,CAAC;;IAEL,CAAC;EACH;EAEA,OAAI;AACF,SAAK,YAAY;AAEjB,QAAI,KAAK,KAAK,SAAS;AACrB,iBAAW,WAAW,KAAK,KAAK,UAAU;AACxC,cAAM,kBAAkB,KAAK,KAAK,IAAI,OAAO;AAC7C,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,kBAAQ,IAAI,cAAc;AAC1B,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAMR,QAAI,KAAK,KAAK,SAAS;AACrB,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;;AAGF,QAAI,KAAK,UAAU,YAAY,OAAO;AACpC,WAAK,KAAK,KAAI;AACd,WAAK,QAAQ,OAAO,KAAK,KAAK,YAAW,CAAE,EAAE,UAAU;QACrD,MAAM,CAAC,QAAO;AACZ,eAAK,eAAe,IAAI;YACtB,UAAU;YACV,SAAS;YACT,KAAK;YACL,QAAQ,IAAI,gBAAgB;WAC7B;AACD,eAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;AAC1C,eAAK,KAAK,KAAI;QAChB;QACA,OAAO,CAAC,QAAO;AACb,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;WACI;AACL,WAAK,KAAK,KAAI;AACd,WAAK,QAAQ,OAAO,KAAK,KAAK,YAAW,CAAE,EAAE,UAAU;QACrD,MAAM,CAAC,QAAO;AACZ,cAAI,KAAK;AACP,iBAAK,eAAe,IAAI;cACtB,UAAU;cACV,SAAS;cACT,KAAK;cACL,QAAQ,IAAI,gBAAgB;aAC7B;AACD,iBAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;AAC1C,iBAAK,KAAK,KAAI;;QAElB;QACA,OAAO,CAAC,QAAO;AACb,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;EAEL;EAEA,gBAAgB,UAAa;AAC3B,UAAM,SAAS,SAAS,SAAS,OAAO,QAAkB,SAAS,SAAS,MAAM,QAAkB,SAAS,SAAS,OAAO;AAC7H,aAAS,SAAS,OAAO,WAAW,MAAM;EAC5C;EAEA,eAAY;AACV,SAAK,YAAY;AACjB,QAAI,KAAK,aAAa,SAAS;AAC7B,iBAAW,WAAW,KAAK,aAAa,UAAU;AAChD,cAAM,kBAAkB,KAAK,aAAa,IAAI,OAAO;AACrD,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAMR,QAAI,KAAK,aAAa,SAAS;AAC7B,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;WACK;AACL,WAAK,cAAc;AACnB,WAAK,gBAAgB;AACrB,WAAK,YAAY;;EAErB;EAEA,kBAAe;AACb,SAAK,YAAY;AACjB,QAAI,KAAK,YAAY,SAAS;AAC5B,iBAAW,WAAW,KAAK,YAAY,UAAU;AAC/C,cAAM,kBAAkB,KAAK,YAAY,IAAI,OAAO;AACpD,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAMR,QAAI,KAAK,YAAY,SAAS;AAC5B,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;WACK;AACL,WAAK,cAAc;AACnB,WAAK,YAAY;AACjB,WAAK,iBAAiB;;EAE1B;EACA,YAAS;AAEP,UAAM,UAAW,KAAK,MAAM,SAAS;AACtC,QAAG,QAAQ,MAAM,SAAS,GAAE;AAC7B,WAAK,YAAY,SAAS,OAAO,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,CAAC;AACjI,WAAK,YAAY,SAAS,MAAM,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC;AAC/H,WAAK,YAAY,SAAS,OAAO,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,CAAC;AACjI,WAAK,YAAY,SAAS,OAAO,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,CAAC;AACjI,WAAK,YAAY,SAAS,OAAO,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,MAAM,GAAG,CAAC,CAAC;AACjI,WAAK,YAAY,SAAS,iBAAiB,WAAW,QAAQ,MAAM,OAAO,CAAC,KAAS,SAAa,SAAS,GAAG,IAAI,SAAS,KAAK,UAAU,GAAG,CAAC,CAAC;AAC/I,WAAK,YAAY,SAAS,WAAW,WAAW,QAAQ,MAAM,CAAC,EAAE,UAAU;AAC3E,WAAK,YAAY,SAAS,cAAc,WAAW,QAAQ,MAAM,CAAC,EAAE,aAAa;AACjF,WAAK,YAAY,SAAS,WAAW,WAAW,QAAQ,MAAM,CAAC,EAAE,UAAU;AAC3E,WAAK,YAAY,SAAS,oBAAoB,WAAW,QAAQ,MAAM,CAAC,EAAE,aAAa;;AAErF,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,sBAAsB;EAC7B;EACA,aAAU;AACR,SAAK,YAAY;AACjB,QAAI,KAAK,WAAW,SAAS;AAC3B,iBAAW,WAAW,KAAK,WAAW,UAAU;AAC9C,cAAM,kBAAkB,KAAK,WAAW,IAAI,OAAO;AACnD,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAMR,QAAI,KAAK,WAAW,SAAS;AAC3B,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;WACK;AACL,WAAK,cAAc;AACnB,WAAK,mBAAmB;AACxB,WAAK,YAAY;;EAErB;EACA,eAAY;AACV,SAAK,YAAY;AACjB,QAAI,KAAK,aAAa,SAAS;AAC7B,iBAAW,WAAW,KAAK,aAAa,UAAU;AAChD,cAAM,kBAAkB,KAAK,aAAa,IAAI,OAAO;AACrD,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAMR,QAAI,KAAK,aAAa,SAAS;AAC7B,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;WACK;AAEH,WAAK,cAAc;AACnB,WAAK,YAAY;AACjB,WAAK,kBAAkB;;EAO7B;EAEA,cAAW;AACT,SAAK,YAAY;AACjB,QAAI,KAAK,QAAQ,SAAS;AACxB,iBAAW,WAAW,KAAK,QAAQ,UAAU;AAC3C,cAAM,kBAAkB,KAAK,QAAQ,IAAI,OAAO;AAChD,YAAI,iBAAiB,SAAS;AAC5B,gBAAM,iBAAiB,KAAK,GAAG,cAAc,cAAc,IAAI,OAAO,EAAE;AACxE,cAAI,gBAAgB;AAClB,2BAAe,eAAe,EAAE,UAAU,UAAU,OAAO,SAAQ,CAAE;AACrE;;;;;AAKR,QAAI,KAAK,QAAQ,SAAS;AACxB,WAAK,eAAe,IAAI;QACtB,UAAU;QACV,SAAS;QACT,KAAK;QACL,QAAQ;OACT;AACD;WACK;AACL,WAAK,UAAS;;EAElB;EAMA,YAAS;AACP,SAAK,WAAW,KAAK,GAAG,MAAM,6FACzB,KAAK,aAAa,YAAW,IAC7B,KAAK,YAAY,YAAW,IAC5B,KAAK,WAAW,YAAW,IAC3B,KAAK,aAAa,YAAW,IAC7B,KAAK,QAAQ,YAAW,IALC;MAM5B,cAAc,KAAK,MAAM,SAAS;MAClC,WAAW,CAAC,CAAA;MACZ,WAAW,CAAC,EAAE;MACd,WAAW,CAAC,EAAE;MACd,WAAW,CAAC,CAAA;MACZ,WAAW,CAAC,KAAK,KAAK,SAAS;MAC/B,YAAY,CAAC,KAAK,KAAK,UAAU;MACjC,aAAa,KAAK,GAAG,SAAS,KAAK,YAAY,SAAS,cAAc,KAAK;MAC5E;AAED,QAAI,KAAK,UAAU,YAAY,OAAO;AACpC,WAAK,KAAK,KAAI;AACd,WAAK,QAAQ,OAAO,CAAC,KAAK,SAAS,YAAW,CAAE,CAAC,EAAE,UAAU;QAC3D,MAAM,CAAC,QAAO;AACZ,eAAK,eAAe,IAAI;YACtB,UAAU;YACV,SAAS;YACT,KAAK;YACL,QAAQ,IAAI,CAAC,EAAE,kBAAkB;WAClC;AACD,eAAK,KAAK,KAAI;AACd,eAAK,OAAO,SAAS,CAAC,6BAA6B,CAAC;QACtD;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;WACI;AACL,WAAK,KAAK,KAAI;AACd,WAAK,QAAQ,OAAO,CAAC,KAAK,SAAS,YAAW,CAAE,CAAC,EAAE,UAAU;QAC3D,MAAM,CAAC,QAAO;AACZ,eAAK,eAAe,IAAI;YACtB,UAAU;YACV,SAAS;YACT,KAAK;YACL,QAAQ,IAAI,CAAC,EAAE,kBAAkB;WAClC;AACD,eAAK,KAAK,KAAI;AACd,eAAK,OAAO,SAAS,CAAC,6BAA6B,CAAC;QACtD;QAAG,OAAO,CAAC,QAAO;AAChB,eAAK,KAAK,KAAI;AACd,eAAK,GAAG,eAAe,GAAG;QAC5B;OACD;;EAEL;EAIA,gBAAa;AACX,UAAM,mBAAmB,KAAK,aAAa,SAAS,YAAY;AAChE,QAAI,OAAO,qBAAqB,YAAY,qBAAqB,OAAO;AACtE,WAAK,wBAAwB;WAC1B;AACH,WAAK,wBAAwB;;EAEjC;EAIA,iBAAc;AAEZ,QAAI,MAAW,CAAA;AACf,QAAI,aAAa,CAAC,KAAK,KAAK,UAAU;AACtC,QAAI,YAAY,CAAC,KAAK,KAAK,SAAS;AACpC,QAAI,YAAY,CAAC,KAAK,aAAa,SAAS,UAAU,KAAK;AAE3D,SAAK,mBAAmB,CAAA;AACxB,SAAK,KAAK,KAAI;AACd,SAAK,eAAe,OAAO,GAAG,EAAE,UAAU;MACxC,MAAM,CAAC,WAAU;AAGf,aAAK,mBAAmB,KAAK,IAAI,YAAY,QAAQ,EAAE,KAAK,kBAAkB,OAAO,kBAAiB,CAAG;AACzG,aAAK,mBAAmB,KAAK,GAAG,8BAA8B,KAAK,kBAAkB,OAAO;AAE5F,aAAK,KAAK,KAAI;MAChB;MAAG,OAAO,CAAC,QAAO;AAChB,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAKA,YAAY,OAAU;AACpB,SAAK,gBAAgB,MAAM,OAAO;AAClC,SAAK,WAAW,KAAK;EACvB;EAIA,WAAW,OAAS;AAClB,QAAI,CAAC,KAAK,iBAAiB,KAAK,cAAc,WAAW,GAAG;AAC1D,cAAQ,IAAI,+BAA+B;AAC3C;;AAEJ,SAAK,eAAe;AAClB,SAAK,QAAQ,YAAY,KAAK,eAAe,KAAK,YAAY,EAAE,UAAU;MACxE,MAAM,CAAC,WAAU;AACf,aAAK,eAAe,IAAI;UACtB,UAAU;UACV,SAAS;UACT,KAAK;UACL,QAAQ;SACT;AACD,aAAK,aAAa,SAAS,WAAW,WAAW,OAAO,CAAC,EAAE,QAAQ;AACnE,aAAK,gBAAgB;AACrB,aAAK,eAAe,MAAM,MAAM;MAClC;MAAG,OAAO,CAAC,QAAO;AAChB,aAAK,KAAK,KAAI;AACd,aAAK,GAAG,eAAe,GAAG;MAC5B;KACD;EACH;EAEA,eAAe,OAAuB;AACpC,UAAM,QAAQ;EAChB;EAEA,gBAAgB,OAAS;AACvB,QAAI,MAAW,CAAA;AACf,QAAI,QAAQ,EAAC,YAAY,OAAO,mBAAmB,YAAW;AAC9D,SAAK,SAAS,iBAAiB,GAAG;EACpC;;;mBAhuCW,0BAAuB,4BAAA,oBAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,WAAA,GAAA,4BAAA,UAAA,GAAA,4BAAA,SAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,eAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,yBAAA,CAAA;AAAA;yFAAvB,0BAAuB,WAAA,CAAA,CAAA,qBAAA,CAAA,GAAA,OAAA,KAAA,MAAA,KAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,MAAA,EAAA,GAAA,CAAA,wBAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,UAAA,2BAAA,oBAAA,GAAA,CAAA,GAAA,mBAAA,QAAA,MAAA,GAAA,CAAA,QAAA,UAAA,cAAA,+BAAA,OAAA,gCAAA,OAAA,IAAA,UAAA,IAAA,GAAA,UAAA,UAAA,UAAA,QAAA,GAAA,CAAA,QAAA,UAAA,OAAA,8BAAA,OAAA,IAAA,UAAA,IAAA,GAAA,UAAA,UAAA,UAAA,UAAA,GAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,QAAA,gBAAA,WAAA,cAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,MAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,QAAA,SAAA,GAAA,CAAA,GAAA,qBAAA,aAAA,GAAA,CAAA,UAAA,eAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA,aAAA,GAAA,CAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,oBAAA,QAAA,aAAA,MAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,SAAA,eAAA,GAAA,MAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,YAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,GAAA,oBAAA,QAAA,aAAA,QAAA,UAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,iBAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,eAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,mBAAA,eAAA,YAAA,QAAA,eAAA,UAAA,GAAA,YAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,mBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,iBAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,cAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,2BAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,2BAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,iBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,mBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,mBAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,MAAA,wBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,wBAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,iBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,CAAA,QAAA,UAAA,WAAA,IAAA,GAAA,WAAA,YAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,WAAA,QAAA,GAAA,QAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,iBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,SAAA,uCAAA,GAAA,MAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,aAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,eAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,eAAA,YAAA,QAAA,GAAA,YAAA,WAAA,WAAA,YAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,qBAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,aAAA,GAAA,MAAA,GAAA,CAAA,SAAA,uCAAA,MAAA,cAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,QAAA,uBAAA,GAAA,YAAA,YAAA,SAAA,QAAA,UAAA,IAAA,GAAA,CAAA,cAAA,+BAAA,GAAA,WAAA,aAAA,MAAA,GAAA,CAAA,GAAA,WAAA,WAAA,cAAA,QAAA,GAAA,OAAA,GAAA,CAAA,UAAA,mBAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,WAAA,GAAA,CAAA,gBAAA,yBAAA,GAAA,eAAA,GAAA,cAAA,OAAA,GAAA,CAAA,aAAA,QAAA,GAAA,CAAA,aAAA,MAAA,GAAA,CAAA,GAAA,WAAA,aAAA,QAAA,GAAA,OAAA,GAAA,CAAA,UAAA,eAAA,GAAA,UAAA,GAAA,CAAA,MAAA,2BAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,2BAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,0BAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,0BAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,qBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,qBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,YAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,YAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,qBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,mBAAA,qBAAA,YAAA,QAAA,eAAA,kBAAA,GAAA,SAAA,kBAAA,GAAA,WAAA,eAAA,UAAA,GAAA,CAAA,MAAA,gBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,gBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,UAAA,SAAA,GAAA,CAAA,MAAA,SAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,SAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,UAAA,SAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,UAAA,SAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,iBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,cAAA,OAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,UAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,UAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,aAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,eAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,eAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,mBAAA,iBAAA,YAAA,QAAA,eAAA,kBAAA,GAAA,SAAA,kBAAA,GAAA,WAAA,eAAA,UAAA,GAAA,CAAA,MAAA,oBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,OAAA,mBAAA,oBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,oBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,OAAA,mBAAA,oBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,uBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,uBAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,UAAA,UAAA,GAAA,UAAA,GAAA,CAAA,MAAA,QAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,QAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,eAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,eAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,gBAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,gBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,gBAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,gBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,WAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,WAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,SAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,YAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,YAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,QAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,QAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,WAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,WAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,YAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,YAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,aAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,aAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,SAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,kBAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,kBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,SAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,kBAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,kBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,aAAA,iBAAA,iBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,aAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,UAAA,eAAA,GAAA,UAAA,GAAA,CAAA,MAAA,QAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,gBAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,gBAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,WAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,YAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,QAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,WAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,YAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,aAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,kBAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,SAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,eAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,kBAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,MAAA,aAAA,iBAAA,sBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,UAAA,eAAA,GAAA,MAAA,GAAA,CAAA,UAAA,WAAA,GAAA,UAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,SAAA,kBAAA,kBAAA,GAAA,WAAA,GAAA,CAAA,aAAA,OAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,UAAA,GAAA,CAAA,MAAA,oBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,oBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,kBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,kBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,aAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,yBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,yBAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,UAAA,gBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,aAAA,OAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,CAAA,GAAA,MAAA,aAAA,GAAA,CAAA,MAAA,qBAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,qBAAA,YAAA,QAAA,GAAA,WAAA,WAAA,YAAA,GAAA,CAAA,MAAA,aAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,aAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,MAAA,cAAA,GAAA,SAAA,kBAAA,gBAAA,GAAA,CAAA,aAAA,MAAA,mBAAA,cAAA,cAAA,IAAA,eAAA,SAAA,GAAA,SAAA,GAAA,SAAA,GAAA,CAAA,GAAA,aAAA,QAAA,mBAAA,QAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,WAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,oBAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,QAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,SAAA,mBAAA,cAAA,GAAA,mBAAA,MAAA,GAAA,CAAA,eAAA,UAAA,UAAA,QAAA,mBAAA,iBAAA,YAAA,QAAA,GAAA,WAAA,YAAA,GAAA,CAAA,GAAA,gBAAA,mBAAA,GAAA,CAAA,QAAA,UAAA,OAAA,+BAAA,OAAA,IAAA,UAAA,IAAA,GAAA,UAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,aAAA,GAAA,CAAA,iBAAA,IAAA,GAAA,SAAA,GAAA,SAAA,QAAA,GAAA,OAAA,GAAA,CAAA,OAAA,iCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,2BAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,gCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,OAAA,6BAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,MAAA,GAAA,CAAA,UAAA,aAAA,GAAA,CAAA,iBAAA,YAAA,gBAAA,yBAAA,aAAA,iBAAA,cAAA,kBAAA,GAAA,gBAAA,GAAA,mBAAA,WAAA,SAAA,cAAA,aAAA,aAAA,YAAA,GAAA,CAAA,aAAA,cAAA,GAAA,CAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,QAAA,GAAA,UAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,SAAA,QAAA,mBAAA,QAAA,GAAA,CAAA,GAAA,QAAA,GAAA,YAAA,OAAA,GAAA,CAAA,GAAA,SAAA,GAAA,SAAA,SAAA,GAAA,CAAA,GAAA,SAAA,QAAA,cAAA,QAAA,GAAA,CAAA,OAAA,gCAAA,UAAA,IAAA,GAAA,iBAAA,QAAA,SAAA,QAAA,UAAA,WAAA,GAAA,OAAA,GAAA,CAAA,GAAA,QAAA,UAAA,GAAA,CAAA,GAAA,QAAA,SAAA,MAAA,GAAA,CAAA,UAAA,cAAA,GAAA,CAAA,iBAAA,YAAA,gBAAA,yBAAA,aAAA,iBAAA,cAAA,kBAAA,GAAA,gBAAA,GAAA,mBAAA,WAAA,SAAA,cAAA,aAAA,aAAA,YAAA,GAAA,CAAA,aAAA,QAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;ACpCpC,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA2B,GAAA,OAAA,CAAA,EACwC,GAAA,KAAA,CAAA;AACtB,IAAA,iBAAA,CAAA;AAAyC,IAAA,uBAAA;AAC9E,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,oBAAA,GAAA,OAAA,CAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAmB,IAAA,qBAAA,SAAA,SAAA,wDAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,UAAA,CAAW;IAAA,CAAA;AAAvC,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAsC,IAAA,qBAAA,SAAA,SAAA,2DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,eAAA,CAAgB;IAAA,CAAA;AACV,IAAA,oBAAA,GAAA,KAAA,EAAA;AAAuC,IAAA,iBAAA,GAAA,YAAA;AACnF,IAAA,uBAAA,EAAS,EAChB;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA0B,IAAA,aAAA,EAAA;AAEX,IAAA,2BAAA,qBAAA,SAAA,yEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,MAAA,6BAAA,IAAA,aAAA,MAAA,MAAA,IAAA,cAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,CAAA;AACP,IAAA,yBAAA,IAAA,cAAA,EAAA,EAAmC,IAAA,QAAA,EAAA,EACE,IAAA,OAAA,EAAA,EACA,IAAA,OAAA,EAAA,EACwB,IAAA,KAAA,EAAA;AACG,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAgE,IAAA,KAAA,EAAA;AACZ,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,yBAAA,IAAA,cAAA,EAAA;AAII,IAAA,qBAAA,YAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAY,IAAA,eAAA,CAAgB;IAAA,CAAA;AAJhC,IAAA,uBAAA;AAKA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAcA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,KAAA,EAAA;AACP,IAAA,iBAAA,IAAA,eAAA;AAAa,IAAA,uBAAA;AACtE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AA6BA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkE,IAAA,KAAA,EAAA;AACL,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AACrE,IAAA,yBAAA,IAAA,cAAA,EAAA;AAGI,IAAA,qBAAA,YAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAY,IAAA,mBAAA,CAAoB;IAAA,CAAA;AAHpC,IAAA,uBAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAgE,IAAA,KAAA,EAAA;AACH,IAAA,iBAAA,IAAA,SAAA;AAAO,IAAA,uBAAA;AAChE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAKA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAWA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,KAAA,EAAA;AAClB,IAAA,iBAAA,IAAA,kBAAA;AAAgB,IAAA,uBAAA;AAChE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiE,IAAA,KAAA,EAAA;AACJ,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,oBAAA,IAAA,MAAA;AAAa,IAAA,uBAAA;AAChF,IAAA,oBAAA,IAAA,cAAA,EAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAWA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA8E,IAAA,KAAA,EAAA;AAC1B,IAAA,iBAAA,IAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAWA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAoBA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsE,IAAA,KAAA,EAAA;AAClB,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA;AACjE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2E,IAAA,KAAA,EAAA;AACvB,IAAA,iBAAA,IAAA,wBAAA;AAAsB,IAAA,uBAAA;AACtE,IAAA,oBAAA,IAAA,cAAA,EAAA;AAGA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAwDA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,IAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,yBAAA,IAAA,cAAA;AACI,IAAA,oBAAA,IAAA,SAAA,EAAA;AAGA,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA8B,IAAA,qBAAA,SAAA,SAAA,4DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,eAAA,sBAAA,EAAA;AAAA,aAAA,sBAAS,aAAA,MAAA,CAAiB;IAAA,CAAA;AAA2B,IAAA,oBAAA,IAAA,KAAA,EAAA;AAClD,IAAA,uBAAA,EAAS;AAE9C,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,SAAA,IAAA,CAAA;AAAmD,IAAA,qBAAA,UAAA,SAAA,0DAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,YAAA,MAAA,CAAmB;IAAA,CAAA;AAAhF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoE,IAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,IAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,IAAA,SAAA,EAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,OAAA,EAAA;AAcA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAgE,IAAA,KAAA,EAAA;AACZ,IAAA,iBAAA,IAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,IAAA,cAAA,EAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkE,IAAA,KAAA,EAAA;AACd,IAAA,iBAAA,IAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,yBAAA,IAAA,cAAA,EAAA;AAAoC,IAAA,qBAAA,YAAA,SAAA,mEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAY,IAAA,cAAA,CAAe;IAAA,CAAA;AAA/D,IAAA,uBAAA;AAIA,IAAA,qBAAA,IAAA,+CAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,OAAA,EAAA,EACkC,IAAA,yCAAA,GAAA,GAAA,OAAA,EAAA,EAU4D,IAAA,yCAAA,GAAA,GAAA,OAAA,EAAA;AAkBlG,IAAA,uBAAA,EAAM;AAEV,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AACd,IAAA,iBAAA,KAAA,QAAA;AAAM,IAAA,uBAAA;AACtF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACpF;AAGV,IAAA,yBAAA,KAAA,cAAA,EAAA,EAAgE,KAAA,QAAA,EAAA,EACrB,KAAA,WAAA,EAAA;AAG/B,IAAA,qBAAA,KAAA,kDAAA,IAAA,GAAA,eAAA,EAAA,EAAgC,KAAA,kDAAA,IAAA,IAAA,eAAA,EAAA;AAuDpC,IAAA,uBAAA,EAAU;AAOd,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AAEvD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAA,IAAA,cAAA,IAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,UAAA,CAAW;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACjF;AAGV,IAAA,yBAAA,KAAA,cAAA,EAAA,EAAkE,KAAA,QAAA,EAAA,EAC9B,KAAA,OAAA,EAAA,EACC,KAAA,OAAA,EAAA,EACqD,KAAA,KAAA,EAAA;AAC1B,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6E,KAAA,KAAA,EAAA;AACzB,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAwE,KAAA,KAAA,EAAA;AACpB,IAAA,iBAAA,KAAA,qBAAA;AAAmB,IAAA,uBAAA;AACnE,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA+D,KAAA,KAAA,EAAA;AACX,IAAA,iBAAA,KAAA,WAAA;AAAS,IAAA,uBAAA;AACzD,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAwE,KAAA,KAAA,EAAA;AACpB,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,KAAA,cAAA,EAAA;AAKA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAmE,KAAA,KAAA,EAAA;AACf,IAAA,iBAAA,KAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAiE,KAAA,KAAA,EAAA;AACb,IAAA,iBAAA,KAAA,aAAA;AAAW,IAAA,uBAAA;AAC3D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AASA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6D,KAAA,KAAA,EAAA;AACT,IAAA,iBAAA,KAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,yBAAA,KAAA,SAAA,EAAA;AACI,IAAA,qBAAA,UAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,gBAAA,IAAA,WAAA,CAAiC;IAAA,CAAA;AAD/C,IAAA,uBAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA4D,KAAA,KAAA,EAAA;AACR,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,yBAAA,KAAA,SAAA,EAAA;AACI,IAAA,qBAAA,UAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,gBAAA,IAAA,WAAA,CAAiC;IAAA,CAAA;AAD/C,IAAA,uBAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6D,KAAA,KAAA,EAAA;AACT,IAAA,iBAAA,KAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,yBAAA,KAAA,SAAA,EAAA;AACI,IAAA,qBAAA,UAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAU,IAAA,gBAAA,IAAA,WAAA,CAAiC;IAAA,CAAA;AAD/C,IAAA,uBAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAoE,KAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,KAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6D,KAAA,KAAA,EAAA;AACT,IAAA,iBAAA,KAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAiE,KAAA,KAAA,EAAA;AACb,IAAA,iBAAA,KAAA,aAAA;AAAW,IAAA,uBAAA;AAC3D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA6D,KAAA,KAAA,EAAA;AACT,IAAA,iBAAA,KAAA,QAAA;AAAM,IAAA,uBAAA;AACtD,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAiE,KAAA,KAAA,EAAA;AACb,IAAA,iBAAA,KAAA,aAAA;AAAW,IAAA,uBAAA;AAC3D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAgE,KAAA,KAAA,EAAA;AACZ,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,KAAA,SAAA,EAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkE,KAAA,KAAA,EAAA;AACd,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAoE,KAAA,KAAA,EAAA;AAChB,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AASA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAuE,KAAA,KAAA,EAAA;AACnB,IAAA,iBAAA,KAAA,mBAAA;AAAiB,IAAA,uBAAA;AACjE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AASA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAuE,KAAA,KAAA,EAAA;AACnB,IAAA,iBAAA,KAAA,mBAAA;AAAiB,IAAA,uBAAA;AACjE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA0E,KAAA,KAAA,EAAA;AACtB,IAAA,iBAAA,KAAA,sBAAA;AAAoB,IAAA,uBAAA;AACpE,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA,EAAM;AAEV,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AACvD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAA,IAAA,cAAA,IAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,gBAAA,CAAiB;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACvF,EACH;AAKX,IAAA,yBAAA,KAAA,cAAA,GAAA,EAAwD,KAAA,QAAA,EAAA,EACrB,KAAA,OAAA,EAAA,EACE,KAAA,OAAA,GAAA,EAUgE,KAAA,KAAA,EAAA;AACrC,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACpD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAgG,KAAA,KAAA,EAAA;AAC5C,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACkC,KAAA,KAAA,EAAA;AACkB,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACkC,KAAA,KAAA,EAAA;AACkB,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA4F,KAAA,KAAA,EAAA;AACxC,IAAA,iBAAA,KAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA0F,KAAA,KAAA,EAAA;AACtC,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA6F,KAAA,KAAA,EAAA;AACzC,IAAA,iBAAA,KAAA,UAAA;AAAQ,IAAA,uBAAA;AACxD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAyF,KAAA,KAAA,EAAA;AACrC,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACpD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA4F,KAAA,KAAA,EAAA;AACxC,IAAA,iBAAA,KAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA6F,KAAA,KAAA,EAAA;AACzC,IAAA,iBAAA,KAAA,UAAA;AAAQ,IAAA,uBAAA;AACxD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA8F,KAAA,KAAA,EAAA;AAC1C,IAAA,iBAAA,KAAA,WAAA;AAAS,IAAA,uBAAA;AACzD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA0F,KAAA,KAAA,EAAA;AACtC,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACkC,KAAA,KAAA,EAAA;AACkB,IAAA,iBAAA,KAAA,oBAAA;AAAkB,IAAA,uBAAA;AAClE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA0F,KAAA,KAAA,EAAA;AACtC,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACkC,KAAA,KAAA,EAAA;AACkB,IAAA,iBAAA,KAAA,kBAAA;AAAgB,IAAA,uBAAA;AAChE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA8F,KAAA,KAAA,EAAA;AAC1C,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA,EAAM,EACJ;AAEV,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AAEvD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAA,IAAA,cAAA,IAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,WAAA,CAAY;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EAClF;AAGV,IAAA,yBAAA,KAAA,cAAA,GAAA,EAA+D,KAAA,QAAA,EAAA,EAC1B,KAAA,OAAA,EAAA,EACA,KAAA,OAAA,GAAA,EAkBqE,KAAA,KAAA,EAAA;AAC1C,IAAA,iBAAA,KAAA,gBAAA;AAAc,IAAA,uBAAA;AAC9D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA+F,KAAA,KAAA,EAAA;AAC3C,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,UAAA;AAAQ,IAAA,uBAAA;AACxD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAIA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA8F,KAAA,KAAA,EAAA;AAC1C,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACpD,IAAA,oBAAA,KAAA,cAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,SAAA;AAAO,IAAA,uBAAA;AACvD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAEA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,UAAA;AAAQ,IAAA,uBAAA;AACxD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,WAAA;AAAS,IAAA,uBAAA;AACzD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA+F,KAAA,KAAA,EAAA;AAC3C,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,oBAAA;AAAkB,IAAA,uBAAA;AAClE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA+F,KAAA,KAAA,EAAA;AAC3C,IAAA,iBAAA,KAAA,OAAA;AAAK,IAAA,uBAAA;AACrD,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,cAAA;AAAY,IAAA,uBAAA;AAC5D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,kBAAA;AAAgB,IAAA,uBAAA;AAChE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EACuC,KAAA,KAAA,EAAA;AACa,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA,EAAM;AAEV,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AAEvD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAA,IAAA,cAAA,IAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,aAAA,CAAc;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACpF,EACH;AAGX,IAAA,qBAAA,KAAA,iDAAA,IAAA,GAAA,cAAA,GAAA;AAqDA,IAAA,yBAAA,KAAA,cAAA,GAAA,EAA0D,KAAA,QAAA,EAAA,EAC1B,KAAA,OAAA,GAAA,EACP,KAAA,OAAA,GAAA,EAC8D,KAAA,KAAA,EAAA;AACvB,IAAA,iBAAA,KAAA,sBAAA;AAAoB,IAAA,uBAAA;AACpE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA2E,KAAA,KAAA,EAAA;AACvB,IAAA,iBAAA,KAAA,mBAAA;AAAiB,IAAA,uBAAA;AACjE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAEJ,IAAA,uBAAA;AAiBA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAuE,KAAA,KAAA,EAAA;AACnB,IAAA,iBAAA,KAAA,mBAAA;AAAiB,IAAA,uBAAA;AACjE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAqE,KAAA,KAAA,EAAA;AACjB,IAAA,iBAAA,KAAA,iBAAA;AAAe,IAAA,uBAAA;AAC/D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AAyCA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAAgE,KAAA,KAAA,EAAA;AACZ,IAAA,iBAAA,KAAA,YAAA;AAAU,IAAA,uBAAA;AAC1D,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,OAAA,GAAA,EAA4E,KAAA,KAAA,EAAA;AACxB,IAAA,iBAAA,KAAA,yBAAA;AAAuB,IAAA,uBAAA;AACvE,IAAA,oBAAA,KAAA,SAAA,GAAA;AAGA,IAAA,qBAAA,KAAA,gDAAA,GAAA,GAAA,aAAA,EAAA;AAEJ,IAAA,uBAAA,EAAM,EA4KJ;AAEV,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkG,KAAA,UAAA,EAAA;AACvD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAA,IAAA,cAAA,IAAA,cAAqC,CAAC;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA;AACnF,IAAA,yBAAA,KAAA,UAAA,EAAA;AAAgD,IAAA,qBAAA,SAAA,SAAA,6DAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAS,IAAA,YAAA,CAAa;IAAA,CAAA;AAAE,IAAA,iBAAA,KAAA,MAAA;AAAI,IAAA,uBAAA,EAAS,EACnF;AAEV,IAAA,qBAAA,KAAA,iDAAA,IAAA,GAAA,cAAA,GAAA;AA6DJ,IAAA,uBAAA,EAAY,EACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAl1CmC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,kBAAA,IAAA,UAAA,UAAA,EAAA;AAMzB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,eAAA,CAAA;AAOD,IAAA,oBAAA,CAAA;AAAA,IAAA,2BAAA,eAAA,IAAA,WAAA;AAEG,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,YAAA;AAKsD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAH,IAAA,CAAA;AADD,IAAA,qBAAA,WAAA,IAAA,aAAA,EAAyB,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAG5D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,WAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,aAAA,EAAyB,aAAA,WAAA,IAAA,aAAA,IAAA,WAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE2D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAGpF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,WAAA,CAAA;AAqBQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,iBAAA,EAA6B,aAAA,WAAA,IAAA,aAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE2D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAExF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,eAAA,CAAA;AAmCR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAFsC,IAAA,qBAAA,WAAA,IAAA,WAAA,EAAuB,aAAA,WAAA,IAAA,aAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EACiC,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAGtF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,aAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,eAAA,EAA2B,aAAA,WAAA,IAAA,aAAA,IAAA,WAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEyD,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAGpF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,WAAA,CAAA;AAgBwC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AADxC,IAAA,qBAAA,WAAA,IAAA,qBAAA,EAAiC,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAGjC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,iBAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,aAAA,WAAA,IAAA,aAAA,IAAA,YAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE2D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAErF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,YAAA,CAAA;AAgBR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,aAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,yBAAA,CAAA;AAgBR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,aAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,eAAA,CAAA;AAyB0C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAD1C,IAAA,qBAAA,WAAA,IAAA,mBAAA,EAA+B,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAG/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,iBAAA,CAAA;AAO+C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAD/C,IAAA,qBAAA,WAAA,IAAA,mBAAA,EAA+B,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAG/B,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,sBAAA,CAAA;AA8DJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,aAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAKI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,eAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAGQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,eAAA,CAAA;AAGkC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,aAAA,SAAA,WAAA,KAAA;AAmB1B,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,SAAA,EAAqB,aAAA,WAAA,IAAA,aAAA,IAAA,WAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE+D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAEpF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,WAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,WAAA,EAAuB,aAAA,WAAA,IAAA,aAAA,IAAA,aAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE+D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAEtF,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,aAAA,CAAA;AAKX,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA;AAU4D,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA;AASC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA;AAiBzC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,aAAA;AAC3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,KAAA;AAC2B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,SAAA,IAAA,MAAA,SAAA,aAAA,QAAA;AAuEvB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,mBAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,WAAA;AAKU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,yBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,wBAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,wBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,mBAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,mBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,UAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,UAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,mBAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAAmG,eAAA,OAAA,EACjB,YAAA,IAAA;AAG1E,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,mBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,cAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,cAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,YAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,YAAA,CAAA;AAeR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,QAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,OAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,OAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,QAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,eAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,eAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,WAAA,IAAA,YAAA,IAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,QAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,YAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,YAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,QAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,QAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,YAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,YAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,WAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,WAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,aAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,aAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,eAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAA+F,eAAA,OAAA,EACb,YAAA,IAAA;AAE1E,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,eAAA,CAAA;AAcR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,kBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,kBAAA,CAAA;AAcR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,YAAA,IAAA,kBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,kBAAA,CAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,gBAAA,EAA4B,aAAA,YAAA,IAAA,YAAA,IAAA,qBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEiE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAE7F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,yBAAA,qBAAA,CAAA;AAaA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,cAAA;AAClB,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,UAAA;AAcU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,oBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,oBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,aAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,aAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,4BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,4BAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,4BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,4BAAA,CAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,mBAAA,EAA+B,aAAA,YAAA,IAAA,WAAA,IAAA,uBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE+D,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAE9F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,uBAAA,CAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,aAAA,YAAA,IAAA,WAAA,IAAA,qBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEkE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAE5F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,qBAAA,CAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,aAAA,YAAA,IAAA,WAAA,IAAA,wBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEqE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAE/F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,wBAAA,CAAA;AAOQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAFR,IAAA,qBAAA,WAAA,IAAA,UAAA,EAAsB,aAAA,YAAA,IAAA,WAAA,IAAA,oBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EACqE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAE3F,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,oBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,uBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,uBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,wBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,wBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,yBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,qBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,qBAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,8BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,8BAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,qBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,qBAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,8BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,8BAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,yBAAA,CAAA;AAYK,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,gBAAA;AACvB,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,YAAA;AAsBU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,yBAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,iCAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,iCAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,iCAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,iCAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,wBAAA,EAAoC,aAAA,YAAA,IAAA,aAAA,IAAA,4BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEiE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAErG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,4BAAA,CAAA;AAQQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,aAAA,YAAA,IAAA,aAAA,IAAA,0BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAEyE,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAEnG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,0BAAA,CAAA;AASQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAHR,IAAA,qBAAA,WAAA,IAAA,cAAA,EAA0B,aAAA,YAAA,IAAA,aAAA,IAAA,6BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAE4E,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAEtG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,6BAAA,CAAA;AAOQ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,0BAAA,KAAAA,IAAA,CAAA;AAFR,IAAA,qBAAA,WAAA,IAAA,UAAA,EAAsB,aAAA,YAAA,IAAA,aAAA,IAAA,yBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA,EAC4E,cAAA,0BAAA,KAAAA,IAAA,CAAA;AAElG,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,yBAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,WAAA,IAAA,4BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,oBAAA,4BAAA,CAAA;AAQR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,6BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,6BAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,8BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,8BAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,0BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,0BAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,mCAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,mCAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,0BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,0BAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,gCAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,gCAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,mCAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,mCAAA,CAAA;AAOR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,aAAA,IAAA,8BAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,sBAAA,8BAAA,CAAA;AAYM,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,UAAA,YAAA,KAAA;AAqDL,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,eAAA;AACnB,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,OAAA;AAEmD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,WAAA;AAEtB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,YAAA,SAAA,oBAAA,KAAA,EAA6D,YAAA,IAAA;AAGvC,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,IAAA,WAAA;AAEtB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,YAAA,SAAA,iBAAA,KAAA,EAA0D,YAAA,IAAA;AAsB7E,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,QAAA,IAAA,kBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA,kBAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,QAAA,IAAA,gBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA,gBAAA,CAAA;AA8CR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,QAAA,IAAA,WAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA,WAAA,CAAA;AAMR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,aAAA,YAAA,IAAA,QAAA,IAAA,uBAAA,MAAA,OAAA,OAAA,UAAA,YAAA,IAAA,YAAA,wBAAA,EAAA;AAEQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,qBAAA,uBAAA,CAAA;AAqLO,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,UAAA,YAAA,KAAA;;iqDD1vCjC;EACV,QAAQ,aAAa;IACnB,MAAM,WAAW,MAAM,EAAE,SAAS,GAAG,WAAW,gBAAe,CAAE,CAAC;IAClE,MAAM,YAAY,MAAM,EAAE,SAAS,GAAG,WAAW,gBAAe,CAAE,CAAC;IACnE,WAAW,wBAAwB,QAAQ,kBAAkB,CAAC;GAC/D;EACF,EAAA,CAAA;AAEG,IAAO,0BAAP;;6EAAO,yBAAuB,EAAA,WAAA,2BAAA,UAAA,yFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;AE/BpC,IAAM,SAAiB;EACrB,EAAC,MAAK,eAAc,WAAW,sBAAsB,MAAM,EAAE,OAAO,cAAc,QAAQ,cAAa,EAAE;EACzG,EAAC,MAAK,yBAAwB,WAAW,yBAAyB,MAAM,EAAE,OAAO,cAAc,QAAQ,cAAa,EAAE;;AAQlH,IAAO,0BAAP,MAAO,wBAAsB;;;mBAAtB,yBAAsB;AAAA;uFAAtB,wBAAsB,CAAA;2FAHvB,aAAa,SAAS,MAAM,GAC5B,YAAY,EAAA,CAAA;AAElB,IAAO,yBAAP;;;ACgBA,IAAO,mBAAP,MAAO,iBAAe;;;mBAAf,kBAAe;AAAA;gFAAf,iBAAe,CAAA;;EALxB;EACA;EACA;AAAY,EAAA,CAAA;AAGV,IAAO,kBAAP;",
  "names": ["_c0", "_c0", "_c1", "_c0", "_c1", "_c2", "_c3"]
}
