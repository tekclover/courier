{
  "version": 3,
  "sources": ["src/app/main/id-masters/company/company.service.ts", "src/app/main/id-masters/company/company.component.ts", "src/app/main/id-masters/company/company.component.html", "src/app/main/id-masters/language/language.service.ts", "src/app/main/id-masters/language/language.component.ts", "src/app/main/id-masters/language/language.component.html", "src/app/main/id-masters/language/language-new/language-new.component.ts", "src/app/main/id-masters/language/language-new/language-new.component.html", "src/app/main/id-masters/consignment-type/consignment-type.service.ts", "src/app/main/id-masters/consignment-type/consignment-type.component.ts", "src/app/main/id-masters/consignment-type/consignment-type.component.html", "src/app/common-service/common-api.service.ts", "src/app/main/id-masters/consignment-type/consignment-type-new/consignment-type-new.component.ts", "src/app/main/id-masters/consignment-type/consignment-type-new/consignment-type-new.component.html", "src/app/main/id-masters/menu/menu.service.ts", "src/app/main/id-masters/menu/menu.component.ts", "src/app/main/id-masters/menu/menu.component.html", "src/app/main/id-masters/menu/menu-new/menu-new.component.ts", "src/app/main/id-masters/menu/menu-new/menu-new.component.html", "src/app/main/id-masters/status/status.service.ts", "src/app/main/id-masters/status/status-new/status-new.component.ts", "src/app/main/id-masters/status/status-new/status-new.component.html", "src/app/main/id-masters/status/status.component.ts", "src/app/main/id-masters/status/status.component.html", "src/app/main/id-masters/currency/currency.service.ts", "src/app/main/id-masters/currency/currency-new/currency-new.component.ts", "src/app/main/id-masters/currency/currency-new/currency-new.component.html", "src/app/main/id-masters/currency/currency.component.ts", "src/app/main/id-masters/currency/currency.component.html", "src/app/main/id-masters/company/company-new/company-new.component.ts", "src/app/main/id-masters/company/company-new/company-new.component.html", "src/app/main/id-masters/sub-product/sub-product.service.ts", "src/app/main/id-masters/sub-product/sub-product.component.ts", "src/app/main/id-masters/sub-product/sub-product.component.html", "src/app/main/id-masters/sub-product/sub-product-new/sub-product-new.component.ts", "src/app/main/id-masters/sub-product/sub-product-new/sub-product-new.component.html", "src/app/main/id-masters/load-type/load-type.service.ts", "src/app/main/id-masters/load-type/load-type.component.ts", "src/app/main/id-masters/load-type/load-type.component.html", "src/app/config/spaceValidator.ts", "src/app/main/id-masters/load-type/load-type-new/load-type-new.component.ts", "src/app/main/id-masters/load-type/load-type-new/load-type-new.component.html", "src/app/main/id-masters/service-type/service-type.service.ts", "src/app/main/id-masters/service-type/service-type.component.ts", "src/app/main/id-masters/service-type/service-type.component.html", "src/app/main/id-masters/service-type/service-type-new/service-type-new.component.ts", "src/app/main/id-masters/service-type/service-type-new/service-type-new.component.html", "src/app/main/id-masters/module/module.service.ts", "src/app/main/id-masters/module/module.component.ts", "src/app/main/id-masters/module/module.component.html", "src/app/main/id-masters/module/module-new/module-new.component.ts", "src/app/main/id-masters/module/module-new/module-new.component.html", "src/app/main/id-masters/province/province.service.ts", "src/app/main/id-masters/province/province.component.ts", "src/app/main/id-masters/province/province.component.html", "src/app/main/id-masters/province/province-new/province-new.component.ts", "src/app/main/id-masters/province/province-new/province-new.component.html", "src/app/main/id-masters/district/district.service.ts", "src/app/main/id-masters/district/district.component.ts", "src/app/main/id-masters/district/district.component.html", "src/app/main/id-masters/district/district-new/district-new.component.ts", "src/app/main/id-masters/district/district-new/district-new.component.html", "src/app/main/id-masters/city/city.service.ts", "src/app/main/id-masters/city/city.component.ts", "src/app/main/id-masters/city/city.component.html", "src/app/main/id-masters/city/city-new/city-new.component.ts", "src/app/main/id-masters/city/city-new/city-new.component.html", "src/app/main/id-masters/consignor/consignor.service.ts", "src/app/main/id-masters/consignor/consignor-new/consignor-new.component.ts", "src/app/main/id-masters/consignor/consignor-new/consignor-new.component.html", "src/app/main/id-masters/consignor/consignor.component.ts", "src/app/main/id-masters/consignor/consignor.component.html", "src/app/main/id-masters/customer/customer.service.ts", "src/app/main/id-masters/customer/customer-new/customer-new.component.ts", "src/app/main/id-masters/customer/customer-new/customer-new.component.html", "src/app/main/id-masters/customer/customer.component.ts", "src/app/main/id-masters/customer/customer.component.html", "src/app/main/id-masters/product/product.service.ts", "src/app/main/id-masters/product/product-new/product-new.component.ts", "src/app/main/id-masters/product/product-new/product-new.component.html", "src/app/main/id-masters/product/product.component.ts", "src/app/main/id-masters/product/product.component.html", "src/app/main/id-masters/hs-code/hs-code.service.ts", "src/app/main/id-masters/hs-code/hs-code-new/hs-code-new.component.ts", "src/app/main/id-masters/hs-code/hs-code-new/hs-code-new.component.html", "src/app/main/id-masters/hs-code/hs-code.component.ts", "src/app/main/id-masters/hs-code/hs-code.component.html", "src/app/main/id-masters/numberrange/numberrange.service.ts", "src/app/main/id-masters/numberrange/numberrange-new/numberrange-new.component.ts", "src/app/main/id-masters/numberrange/numberrange-new/numberrange-new.component.html", "src/app/main/id-masters/numberrange/numberrange.component.ts", "src/app/main/id-masters/numberrange/numberrange.component.html", "src/app/main/id-masters/opstatus/opstatus.service.ts", "src/app/main/id-masters/opstatus/opstatus-new/opstatus-new.component.ts", "src/app/main/id-masters/opstatus/opstatus-new/opstatus-new.component.html", "src/app/main/id-masters/opstatus/opstatus.component.ts", "src/app/main/id-masters/opstatus/opstatus.component.html", "src/app/main/id-masters/id-masters-routing.module.ts", "src/app/main/id-masters/user-role/user-role.component.ts", "src/app/main/id-masters/user-role/user-role.component.html", "src/app/main/id-masters/id-masters.module.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompanyService {\r\n  constructor(private http: HttpClient, private auth: AuthService) {}\r\n\r\n  Get(companyId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/company/' + companyId + '?languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/company', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/company/' + obj.companyId + '?languageId='+ this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(companyId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/company/' + companyId + '?languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>(\r\n      '/overc-idmaster-service/company/' + 'find',\r\n      obj\r\n    );\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { CompanyService } from './company.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrl: './company.component.scss',\r\n})\r\nexport class CompanyComponent {\r\n  companyTable: any[] = [];\r\n  selectedCompany: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: CompanyService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Company - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      \r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'companyName', header: 'Company Name' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'countryId', header: 'Country ID' },\r\n      { field: 'countryName', header: 'Country Name' },\r\n      { field: 'provinceId', header: 'Province ID' },\r\n      { field: 'provinceName', header: 'Province Name' },\r\n      { field: 'districtId', header: 'District ID' },\r\n      { field: 'districtName', header: 'District Name' },\r\n      { field: 'cityId', header: 'City ID' },\r\n      { field: 'cityName', header: 'City Name' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.companyTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedCompany[this.selectedCompany.length - 1];\r\n    this.selectedCompany.length = 0;\r\n    this.selectedCompany.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCompany[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    console.log(3)\r\n    if (this.selectedCompany.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedCompany[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/company-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedCompany.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedCompany,\r\n        module: 'Company',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCompany[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.companyId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.companyId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.companyTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Company');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Company - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button (click)=\"openCrud('New')\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"companyTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #companyTag [columns]=\"cols\" [value]=\"companyTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCompany[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCompany\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(languageId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/language/' + languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/language', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/language/'+ obj.languageId, obj);\r\n  }\r\n\r\n  Delete(languageId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/language/' + languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/language/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { LanguageService } from './language.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-language-new',\r\n  templateUrl: './language.component.html',\r\n  styleUrl: './language.component.scss'\r\n})\r\nexport class LanguageComponent {\r\n\r\n  languageTable: any[] = [];\r\n  selectedLanguage: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: LanguageService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Language - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'languageId', header: 'ID' },\r\n      { field: 'languageDescription', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.languageTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedLanguage[this.selectedLanguage.length - 1];\r\n    this.selectedLanguage.length = 0;\r\n    this.selectedLanguage.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedLanguage[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedLanguage.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedLanguage[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/language-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedLanguage.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedLanguage, module: 'Language', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedLanguage[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.languageId).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.languageId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.languageTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Language');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Language - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"languageTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #languageTag [columns]=\"cols\" [value]=\"languageTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" sortField=\"createdOn\" [sortOrder]=\"-1\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedLanguage[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedLanguage\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { LanguageService } from '../language.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-language-new',\r\n  templateUrl: './language-new.component.html',\r\n  styleUrl: './language-new.component.scss',\r\n})\r\nexport class LanguageNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: LanguageService, private messageService: MessageService,) { }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [, Validators.required],\r\n    languageDescription: [, Validators.required],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  btnText = 'Save'\r\n  ngOnInit() {\r\n    const dataToSend = ['Setup', 'Language', 'Add New'];\r\n    this.path.setData(dataToSend);\r\n\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.btnText = 'Update';\r\n      console.log(this.btnText)\r\n      this.fill(this.pageToken.line)\r\n    }\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.languageId.disable();\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/language']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/language']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Language - Add New</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"languageId\" [ngClass]=\"form.get('languageId')?.invalid && form.get('languageId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"languageDescription\" [ngClass]=\"form.get('languageDescription')?.invalid && form.get('languageDescription')?.dirty ? 'invalid' : ''\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageDescription')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/language\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">  {{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\"  formControlName=\"updatedOn\" [value]=\"form.controls.updatedOn.value | date: 'dd-MM-yyyy'\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                                {{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}\r\n                            </button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsignmentTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(consignmentTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/consignmentType/' + consignmentTypeId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignmentType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/consignmentType/'+ obj.consignmentTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(consignmentTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/consignmentType/' + consignmentTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignmentType/findConsignmentType', obj);\r\n  }\r\n}\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ConsignmentTypeService } from './consignment-type.service';\r\n\r\n@Component({\r\n  selector: 'app-consignment-type',\r\n  templateUrl: './consignment-type.component.html',\r\n  styleUrl: './consignment-type.component.scss'\r\n})\r\nexport class ConsignmentTypeComponent {\r\n  \r\n\r\n  consignmentTypeTable: any[] = [];\r\n  selectedConsignmentType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: ConsignmentTypeService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'ConsignmentType - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'consignmentTypeId', header: 'ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Comapany' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'consignmentTypeText', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.consignmentTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedConsignmentType[this.selectedConsignmentType.length - 1];\r\n    this.selectedConsignmentType.length = 0;\r\n    this.selectedConsignmentType.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignmentType[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedConsignmentType.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedConsignmentType[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/consignmentType-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedConsignmentType.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedConsignmentType, module: 'ConsignmentType', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignmentType[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.consignmentTypeId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.consignmentTypeId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.consignmentTypeTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'ConsignmentType');\r\n  }\r\n\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">ConsignmentType - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"ConsignmentTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #ConsignmentTag [columns]=\"cols\" [value]=\"consignmentTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedConsignmentType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedConsignmentType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { catchError, of, forkJoin } from 'rxjs';\r\nimport { AuthService } from '../core/core';\r\nimport { CommonServiceService } from './common-service.service';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nexport interface dropdownelement {\r\n  key: any;\r\n  value: any;\r\n  referenceField?: any;\r\n}\r\n\r\nexport interface dropdownelement1 {\r\n  value: any;\r\n  label: any;\r\n  referenceField?: any;\r\n}\r\nexport interface dropdownelement2 {\r\n  key: any;\r\n  value: any;\r\n  referenceField?: any;\r\n  languageId?: any;\r\n  companyId?: any;\r\n\r\n}\r\nexport interface dropdownelement3 {\r\n  value: any;\r\n  label: any;\r\n  languageId?: any;\r\n  companyId?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonAPIService {\r\n\r\n  constructor(private http: HttpClient, private cs: CommonServiceService, private auth: AuthService, private spin: NgxSpinnerService, public messageService: MessageService) { }\r\n\r\n  setup = '/overc-idmaster-service/';\r\n  dropdownlist: any = {\r\n    setup: {\r\n      language:{url:this.setup + 'language',key:{key:'languageId',value:'languageDescription'}},\r\n      company:{url:this.setup + 'company',key:{key:'companyId',value:'companyName'}},\r\n      subProduct:{url:this.setup + 'subProduct', key:{key:'subProductId', value:'subProductName'}},\r\n      country:{url:this.setup + 'country',key:{key:'countryId',value:'countryName', languageId :'languageId', companyId: 'companyId'}},\r\n      province:{url:this.setup + 'province',key:{key:'provinceId',value:'provinceName', languageId :'languageId', companyId: 'companyId'}},\r\n      menu:{url:this.setup + 'menu', key:{key:'menuId',value:'menuName', languageId :'languageId', companyId: 'companyId'}},\r\n      district:{url:this.setup + 'district',key:{key:'districtId',value:'districtName', languageId :'languageId', companyId: 'companyId'}},\r\n      product:{url:this.setup + 'product', key:{key:'productId', value:'productName'}},\r\n      customer:{url:this.setup + 'customer', key:{key:'customerId', value:'customerName'}},\r\n    },\r\n  }\r\n \r\n\r\n\r\n  getalldropdownlist(url: string[]) {\r\n    let observableBatch: any[] = [];\r\n    url.forEach((url: string) => { observableBatch.push(this.http.get<any>(url).pipe(catchError(err => of(err)))) });\r\n    return forkJoin(observableBatch);\r\n  }\r\n\r\n  foreachlist(list: any, val: { key: any, value: any }, _filter: any = {}, addblank: boolean = false,) {\r\n    let dropdownlist: dropdownelement[] = [];\r\n    let dropdownlist1: dropdownelement1[] = [];\r\n    let filter = list;\r\n    if (_filter)\r\n      filter = this.cs.filterArray(list, _filter);\r\n    if (addblank)\r\n      dropdownlist.push({ key: '', value: '' });\r\n    for (const l of filter) {\r\n      let filter2 = this.cs.filterArray(dropdownlist, { key: l[val.key] })\r\n      if (filter2.length == 0)\r\n      dropdownlist1.push({ value: l[val.key], label: l[val.key] + ' - ' + l[val.value] });\r\n    }\r\n    return dropdownlist1.sort((a, b) => (a.value > b.value) ? 1 : -1);\r\n  }\r\n\r\n  forLanguageFilter(list: any, val: { key: any, value: any, languageId: any, companyId: any }, _filter: any = {}, addblank: boolean = false,) {\r\n    let dropdownlist: dropdownelement2[] = [];\r\n    let dropdownlist1: dropdownelement3[] = [];\r\n    let dropdownlist2: dropdownelement3[] = [];\r\n    let filter = list;\r\n    if (_filter)\r\n      filter = this.cs.filterArray(list, _filter);\r\n    if (addblank)\r\n      dropdownlist.push({ key: '', value: '', languageId: '', companyId: '' });\r\n    for (const l of filter) {\r\n      let filter2 = this.cs.filterArray(dropdownlist, { key: l[val.key] })\r\n      if (filter2.length == 0)\r\n      dropdownlist1.push({ value: l[val.key], label: l[val.key] + ' - ' + l[val.value], languageId: l[val.languageId], companyId: l[val.companyId]});\r\n    }\r\n    dropdownlist1.forEach(x=> {\r\n      if(this.auth.languageId == x.languageId && this.auth.companyId == x.companyId){\r\n        dropdownlist2.push(x)\r\n      }\r\n    })\r\n    return dropdownlist2.sort((a, b) => (a.value > b.value) ? 1 : -1);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { ConsignmentTypeService } from '../consignment-type.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-consignment-type-new',\r\n  templateUrl: './consignment-type-new.component.html',\r\n  styleUrl: './consignment-type-new.component.scss'\r\n})\r\nexport class ConsignmentTypeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: ConsignmentTypeService, private messageService: MessageService,  private auth: AuthService, private cas: CommonAPIService) {\r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n    ];\r\n    \r\n     }\r\n       \r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    consignmentTypeId: [],\r\n    consignmentTypeText: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    remark: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    statusId:[\"1\", ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'ConsignmentType', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  \r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.consignmentTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/consignmentType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.consignmentTypeId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/consignmentType']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">ConsignmentType - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                        \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input type=\"text\" formControlName=\"consignmentTypeId\" [ngClass]=\"form.get('consignmentTypeId')?.invalid && form.get('consignmentTypeId')?.dirty ? 'invalid' : ''\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('consignmentTypeId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input type=\"text\" formControlName=\"consignmentTypeText\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/consignmentType\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(languageId: string, companyId: string, menuId: string, subMenuId: string, authorizationObjectId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/menu/' + menuId + '?languageId=' +\r\n        this.auth.languageId + authorizationObjectId + companyId + subMenuId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/menu', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/menu/' + obj.menuId + '?authorizationObjectId=' + obj.authorizationObjectId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&subMenuId=' + obj.subMenuId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/menu/' + obj.menuId + '?authorizationObjectId=' + obj.authorizationObjectId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&subMenuId=' + obj.subMenuId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/menu/find', obj);\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { MenuService } from './menu.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrl: './menu.component.scss'\r\n})\r\nexport class MenuComponent {\r\n\r\n  menuTable: any[] = [];\r\n  selectedMenu: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService, \r\n    private service: MenuService,\r\n    public dialog: MatDialog, \r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    // to pass Breadcrumbs onto the main component\r\n    const dataToSend = ['Setup', 'Menu - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'languageIdAndDescription', header: 'Language '},\r\n      { field: 'companyIdAndDescription', header: 'Company '},\r\n      { field: 'menuName', header: 'Menu Name'},\r\n      { field: 'subMenuName', header: 'SubMenu Name'},\r\n      { field: 'authorizationObjectValue', header: 'AuthorizationObject Value'},\r\n      { field: 'createdBy', header: 'Created By'},\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target =[\r\n      { field: 'menuId', header: 'MenuID'},\r\n      { field: 'subMenuId', header: 'SubMenuID'},\r\n      { field: 'authorizationObject', header: 'AuthorizationObject' },\r\n      { field: 'authorizationObjectId', header: 'AuthorizationObjectID'},\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.menuTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedMenu[this.selectedMenu.length -1];\r\n    this.selectedMenu.length = 0;\r\n    this.selectedMenu.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedMenu[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedMenu.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedMenu[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/menu-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedMenu.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedMenu, module: 'Menu', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedMenu[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.languageId + lines.companyId + lines.menuId + lines.subMenuId + lines.authorizationObjectId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.menuTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if(col.format == 'date') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Calling ExcelService \r\n    this.cs.exportAsExcel(exportData, 'Menu');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Menu - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"menuTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Menu Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #menuTag [columns]=\"cols\" [value]=\"menuTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <!-- <th style=\"width: 6rem;\">Actions</th> -->\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedMenu[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedMenu\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <!-- <td style=\"width:6rem;\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{rowData: rowData}\">\r\n                            <i class=\"bi bi-three-dots-vertical\" style=\"font-size: 1.2rem;\"></i> </button>\r\n                    </td> -->\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MenuService } from '../menu.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-new',\r\n  templateUrl: './menu-new.component.html',\r\n  styleUrl: './menu-new.component.scss'\r\n})\r\nexport class MenuNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(\r\n    private cs: CommonServiceService, \r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, \r\n    private router: Router, \r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: MenuService, \r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n  \r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageIdAndDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyIdAndDescription: [],\r\n    menuId: [, Validators.required],\r\n    menuName: [, Validators.required],\r\n    subMenuId: [, Validators.required],\r\n    subMenuName: [, Validators.required],\r\n    authorizationObject: [],\r\n    authorizationObjectId: [, Validators.required],\r\n    authorizationObjectValue: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Menu', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.updatedBy.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + res.companyId + res.menuId + res.subMenuId + res.authorizationObjectId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/menu']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + res.companyId + res.menuId + res.subMenuId + res.authorizationObjectId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/menu']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Menu - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Company ID</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Menu ID</p>\r\n                                <input formControlName=\"menuId\"\r\n                                    [ngClass]=\"form.get('menuId')?.invalid && form.get('menuId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('menuId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Menu Name</p>\r\n                                <input formControlName=\"menuName\" class=\" w-100\"  pInputText pKeyFilter=\"alphanum\"\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">SubMenu ID</p>\r\n                                <input formControlName=\"subMenuId\"\r\n                                    [ngClass]=\"form.get('subMenuId')?.invalid && form.get('subMenuId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('subMenuId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">SubMenu Name</p>\r\n                                <input formControlName=\"subMenuName\" class=\" w-100\"  pInputText pKeyFilter=\"alphanum\"\r\n                                    placeholder=\"Enter\" />  \r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">AuthorizationObject ID</p>\r\n                                <input formControlName=\"authorizationObjectId\"\r\n                                    [ngClass]=\"form.get('authorizationObjectId')?.invalid && form.get('authorizationObjectId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('authorizationObjectId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Value</p>\r\n                                <input formControlName=\"authorizationObjectValue\" class=\" w-100\"  pInputText pKeyFilter=\"alphanum\"\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/menu\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatusService {\r\n\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(statusId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/status/' + statusId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/status', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/status/'+ obj.statusId +'?languageId='+ this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(statusId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/status/' + statusId +'?languageId='+ this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/status/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { StatusService } from '../status.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-status-new',\r\n  templateUrl: './status-new.component.html',\r\n  styleUrl: './status-new.component.scss',\r\n})\r\nexport class StatusNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: StatusService,  private cas: CommonAPIService,  private auth: AuthService, private messageService: MessageService,) { }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    statusId: [],\r\n    statusDescription: [,  Validators.required],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    languageId: [this.auth.languageId,  Validators.required],\r\n    languageDescription: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Status', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n  languageIdList: any[] = [];\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res:any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.statusId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/status']);\r\n          this.spin.hide();\r\n        }, error: (err:any) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res:any) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.statusId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/status']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err:any) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Status - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"statusId\" [ngClass]=\"form.get('statusId')?.invalid && form.get('statusId')?.dirty ? 'invalid' : ''\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('statusId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"statusDescription\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/status\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { StatusService } from './status.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrl: './status.component.scss'\r\n})\r\n\r\n\r\nexport class StatusComponent {\r\n\r\n  statusTable: any[] = [];\r\n  selectedStatus: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: StatusService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Status - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'statusId', header: 'ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'statusDescription', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.statusTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedStatus[this.selectedStatus.length - 1];\r\n  this.selectedStatus.length = 0;\r\n  this.selectedStatus.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedStatus[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedStatus.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedStatus[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/status-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedStatus.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedStatus, module: 'Status', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedStatus[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.statusId).subscribe({\r\n    next: (res: any) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.statusId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err: any) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.statusTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'Status');\r\n}\r\n}\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Status - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"statusTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #statusTag [columns]=\"cols\" [value]=\"statusTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedStatus[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedStatus\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(currencyId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/currency/' + currencyId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/currency', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/currency/'+ obj.currencyId, obj);\r\n  }\r\n\r\n  Delete(currencyId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/currency/' + currencyId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/currency/find', obj);\r\n  }\r\n}\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CurrencyService } from '../currency.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-currency-new',\r\n  templateUrl: './currency-new.component.html',\r\n  styleUrl: './currency-new.component.scss'\r\n})\r\nexport class CurrencyNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: CurrencyService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService) { \r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    currencyId: [],\r\n    currencyDescription: [,  Validators.required],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    statusDescription: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const dataToSend = ['Setup', 'Currency', 'Add New'];\r\n    this.path.setData(dataToSend);\r\n\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n    }\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.currencyId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/currency']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.currencyId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/currency']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Currency - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"currencyId\" [ngClass]=\"form.get('currencyId')?.invalid && form.get('currencyId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('currencyId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"currencyDescription\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>  \r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/currency\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CurrencyService } from './currency.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-currency',\r\n  templateUrl: './currency.component.html',\r\n  styleUrl: './currency.component.scss'\r\n})\r\nexport class CurrencyComponent {\r\n\r\n  \r\n  currencyTable: any[] = [];\r\n  selectedCurrency: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: CurrencyService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Currency - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'currencyId', header: 'ID' },\r\n      { field: 'currencyDescription', header: 'Description' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.currencyTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedCurrency[this.selectedCurrency.length - 1];\r\n  this.selectedCurrency.length = 0;\r\n  this.selectedCurrency.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCurrency[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedCurrency.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedCurrency[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/currency-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedCurrency.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedCurrency, module: 'Currency', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCurrency[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.currencyId).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.currencyId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.currencyTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'Currency');\r\n}\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Currency - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"currencyTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #currencyTag [columns]=\"cols\" [value]=\"currencyTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCurrency[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCurrency\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { CompanyService } from '../company.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-company-new',\r\n  templateUrl: './company-new.component.html',\r\n  styleUrl: './company-new.component.scss',\r\n})\r\nexport class CompanyNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  status: any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: CompanyService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '0', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    addressLine1: [, Validators.required],\r\n    addressLine2: [],\r\n    addressLine3: [],\r\n    addressLine4: [],\r\n    cityId: [],\r\n    cityName: [],\r\n    companyId: [],\r\n    companyName: [, Validators.required],\r\n    countryId: [],\r\n    countryName: [],\r\n    districtId: [],\r\n    districtName: [],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    provinceId: [],\r\n    provinceName: [],\r\n    statusId: [],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Company', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.companyId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/company']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.companyId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/company']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n  <div class=\"d-flex justify-content-between align-items-center\">\r\n    <p class=\"componentHeader f600 mb-0\">\r\n      Company- {{ this.pageToken.pageflow }}\r\n    </p>\r\n  </div>\r\n  <div class=\"w-75 mt-4 mx-auto\">\r\n    <form [formGroup]=\"form\">\r\n      <p-stepper [(activeStep)]=\"active\">\r\n        <p-stepperPanel>\r\n          <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n            <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n              <div class=\"d-flex justify-content-center align-items-center\">\r\n                <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">1</p>\r\n                <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n              </div>\r\n              <div>\r\n                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Language ID</p>\r\n                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                  [style]=\"{'width': '100%'}\"  [panelStyle]=\"{'width':'100%'}\" />\r\n                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                    getErrorMessage()}}</small></mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Company ID</p>\r\n                <input type=\"text\" formControlName=\"companyId\" [ngClass]=\"\r\n                    form.get('companyId')?.invalid &&\r\n                    form.get('companyId')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <!-- <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error> -->\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0 required\">\r\n                  Company Name\r\n                </p>\r\n                <input type=\"text\" formControlName=\"companyName\" [ngClass]=\"\r\n                    form.get('companyName')?.invalid &&\r\n                    form.get('companyName')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <mat-error *ngIf=\"errorHandling('companyName')\" class=\"text-danger\"><small>{{ getErrorMessage()\r\n                    }}</small></mat-error>\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0 required\">\r\n                  Address Line 1\r\n                </p>\r\n                <input type=\"text\" formControlName=\"addressLine1\" [ngClass]=\"\r\n                    form.get('addressLine1')?.invalid &&\r\n                    form.get('addressLine1')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <mat-error *ngIf=\"errorHandling('addressLine1')\" class=\"text-danger\"><small>{{ getErrorMessage()\r\n                    }}</small></mat-error>\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\" placeholder=\"Select \" />\r\n            </div>\r\n            </div>\r\n            <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n              <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/company\">\r\n                Cancel\r\n              </button>\r\n              <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </p-stepperPanel>\r\n        <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n          <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n            <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n              <div class=\"d-flex justify-content-center align-items-center\">\r\n                <p class=\"circle mb-0\" [ngClass]=\"\r\n                    active == 2 ? 'borderCircle' : 'disabled text-muted'\r\n                  \">\r\n                  2\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                  Admin\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                <input type=\"text\" formControlName=\"createdBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                <input type=\"text\" formControlName=\"createdOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                <input type=\"text\" formControlName=\"updatedBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                <input type=\"text\" formControlName=\"updatedOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n              <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">\r\n                Back\r\n              </button>\r\n              <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </p-stepperPanel>\r\n      </p-stepper>\r\n    </form>\r\n  </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubProductService {\r\n  constructor(private http: HttpClient, private auth: AuthService) {}\r\n\r\n  Get(subProductId: string) {\r\n    return this.http.get<any>(\r\n      '/overc-idmaster-service/subProduct/' + subProductId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/subProduct', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>(\r\n      '/overc-idmaster-service/subProduct/' + obj.subProductId +'?companyId=' +this.auth.companyId +'&languageId=' +this.auth.languageId,obj);\r\n  }\r\n\r\n  Delete(subProductId: string) {\r\n    return this.http.delete<any>(\r\n      '/overc-idmaster-service/subProduct/' + subProductId + '?companyId=' + this.auth.companyId +'&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/subProduct/' + 'find', obj);\r\n  }\r\n}\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { SubProductService } from './sub-product.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-product',\r\n  templateUrl: './sub-product.component.html',\r\n  styleUrl: './sub-product.component.scss',\r\n})\r\nexport class SubProductComponent {\r\n  subProductTable: any[] = [];\r\n  selectedSubProduct: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: SubProductService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Sub Product - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'subProductId', header: 'Sub Product ID' },\r\n      { field: 'subProductName', header: 'Sub Product Name' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.subProductTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedSubProduct[this.selectedSubProduct.length - 1];\r\n    this.selectedSubProduct.length = 0;\r\n    this.selectedSubProduct.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedSubProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedSubProduct.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedSubProduct[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/subProduct-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedSubProduct.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedSubProduct,\r\n        module: 'Company',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedSubProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.subProductId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.subProductTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'SubProduct');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Sub Product - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\"\r\n                style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\"\r\n                style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\"\r\n                style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\"\r\n                style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n        <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n            <p-inputIcon styleClass=\"pi pi-search\" />\r\n            <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                (input)=\"subProductTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n        </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\"\r\n                [showIcon]=\"true\" />\r\n            <p-dropdown class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #subProductTag [columns]=\"cols\" [value]=\"subProductTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedSubProduct[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedSubProduct\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                        </ng-container>\r\n                        <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                        </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { SubProductService } from '../sub-product.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-product-new',\r\n  templateUrl: './sub-product-new.component.html',\r\n  styleUrl: './sub-product-new.component.scss',\r\n})\r\nexport class SubProductNewComponent {\r\n  active: number | undefined = 0;\r\n  status:any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: SubProductService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '0', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [],\r\n    subProductName: [, Validators.required],\r\n    remark: [],\r\n    statusId: ['1',],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Sub Product', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.subProductId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/subProduct']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.subProductId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/subProduct']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Sub Product - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"subProductId\"\r\n                                    [ngClass]=\"form.get('subProductId')?.invalid && form.get('subProductId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">SubProduct Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"subProductName\"\r\n                                    [ngClass]=\"form.get('subProductName')?.invalid && form.get('subProductName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\" placeholder=\"Select \" />\r\n                        \r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" pInputText pKeyFilter=\"alphanum\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/subProduct\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(loadTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/loadType/' + loadTypeId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/loadType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/loadType/'+ obj.loadTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(loadTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/loadType/' + loadTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/loadType/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { LoadTypeService } from './load-type.service';\r\n\r\n@Component({\r\n  selector: 'app-load-type',\r\n  templateUrl: './load-type.component.html',\r\n  styleUrl: './load-type.component.scss'\r\n})\r\nexport class LoadTypeComponent {\r\n\r\n  \r\n  loadTypeTable: any[] = [];\r\n  selectedLoadType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: LoadTypeService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'LoadType - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'loadTypeId', header: 'ID' },\r\n      { field: 'loadTypeText', header: 'Description' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.loadTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedLoadType[this.selectedLoadType.length - 1];\r\n  this.selectedLoadType.length = 0;\r\n  this.selectedLoadType.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedLoadType[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedLoadType.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedLoadType[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/loadType-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedLoadType.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedLoadType, module: 'LoadType', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedLoadType[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.loadTypeId).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.loadTypeId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.loadTypeTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'LoadType');\r\n}\r\n}\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">LoadType - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"loadTypeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #loadTypeTag [columns]=\"cols\" [value]=\"loadTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedLoadType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedLoadType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n", "import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function noLeadingTrailingSpacesValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (control.value && (control.value as string).trim() !== control.value) {\r\n      return { 'leadingTrailingSpaces': true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadTypeService } from '../load-type.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { noLeadingTrailingSpacesValidator } from '../../../../config/spaceValidator';\r\n\r\n@Component({\r\n  selector: 'app-load-type-new',\r\n  templateUrl: './load-type-new.component.html',\r\n  styleUrl: './load-type-new.component.scss'\r\n})\r\nexport class LoadTypeNewComponent {\r\n\r\n  \r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: LoadTypeService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService) { \r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    loadTypeId: [],\r\n    loadTypeText: [,  Validators.required, noLeadingTrailingSpacesValidator()],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription:[],\r\n    companyId:[this.auth.companyId, Validators.required],\r\n    companyName:[],\r\n    statusDescription:[],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark:[],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'LoadType', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.loadTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/loadType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.loadTypeId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/loadType']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">LoadType - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"loadTypeId\" [ngClass]=\"form.get('loadTypeId')?.invalid && form.get('loadTypeId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('loadTypeId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"loadTypeText\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div> \r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/loadType\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(serviceTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/serviceType/' + serviceTypeId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/serviceType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/serviceType/'+ obj.serviceTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(serviceTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/serviceType/' + serviceTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/serviceType/find', obj);\r\n  }\r\n\r\n}\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ServiceTypeService } from '../service-type/service-type.service';\r\n\r\n@Component({\r\n  selector: 'app-service-type',\r\n  templateUrl: './service-type.component.html',\r\n  styleUrl: './service-type.component.scss'\r\n})\r\nexport class ServiceTypeComponent {\r\n  \r\n  serviceTypeTable: any[] = [];\r\n  selectedServiceType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: ServiceTypeService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'ServiceType - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'serviceTypeId', header: 'ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Comapany' },\r\n      { field: 'statusDescription', header: 'Status ' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'serviceTypeText', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.serviceTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedServiceType[this.selectedServiceType.length - 1];\r\n    this.selectedServiceType.length = 0;\r\n    this.selectedServiceType.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedServiceType[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedServiceType.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedServiceType[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/serviceType-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedServiceType.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedServiceType, module: 'ServiceType', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedServiceType[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.serviceTypeId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.serviceTypeId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.serviceTypeTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'ServiceType');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">ServiceType - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"ServiceTypeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #ServiceTypeTag [columns]=\"cols\" [value]=\"serviceTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedServiceType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedServiceType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { ServiceTypeService } from '../service-type.service';\r\n\r\n@Component({\r\n  selector: 'app-service-type-new',\r\n  templateUrl: './service-type-new.component.html',\r\n  styleUrl: './service-type-new.component.scss'\r\n})\r\nexport class ServiceTypeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: ServiceTypeService, private messageService: MessageService,  private auth: AuthService, private cas: CommonAPIService) {\r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n    ];\r\n    \r\n     }\r\n       \r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    serviceTypeId: [],\r\n    serviceTypeText: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    remark: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    statusId:[\"1\", ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'ServiceType', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  \r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.serviceTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/serviceType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.serviceTypeId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/serviceType']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">ServiceType - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                        \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input type=\"text\" formControlName=\"serviceTypeId\" [ngClass]=\"form.get('serviceTypeId')?.invalid && form.get('serviceTypeId')?.dirty ? 'invalid' : ''\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('serviceTypeId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input type=\"text\" formControlName=\"serviceTypeText\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/serviceType\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModuleService {\r\n\r\n    constructor(private http: HttpClient, private auth: AuthService) {}\r\n  \r\n    Get(moduleId: string) {\r\n      return this.http.get<any>('/overc-idmaster-service/module/modulelist/' + moduleId + '?languageId=' + this.auth.languageId + '&companyId=' + this.auth.companyId);\r\n    }\r\n  \r\n    Create(obj: any) {\r\n      return this.http.post<any>('/overc-idmaster-service/module/bulk', obj);\r\n    }\r\n  \r\n    Update(obj: any) {\r\n      return this.http.patch<any>('/overc-idmaster-service/module/' + obj[0].moduleId + '?languageId='+ this.auth.languageId + '&companyId=' + this.auth.companyId, obj);\r\n    }\r\n  \r\n    Delete(moduleId: string) {\r\n      return this.http.delete<any>('/overc-idmaster-service/module/' + moduleId + '?languageId=' + this.auth.languageId  + '&companyId=' + this.auth.companyId);\r\n    }\r\n  \r\n    search(obj: any) {\r\n      return this.http.post<any>('/overc-idmaster-service/module/find',obj);\r\n    }\r\n  }\r\n  \r\n", "import { Component } from '@angular/core';\r\nimport { ModuleService } from './module.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-module',\r\n  templateUrl: './module.component.html',\r\n  styleUrl: './module.component.scss'\r\n})\r\nexport class ModuleComponent {\r\n  moduleTable: any[] = [];\r\n  selectedModule: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ModuleService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Module - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [     \r\n      { field: 'languageIdAndDescription', header: 'Language' },\r\n      { field: 'companyIdAndDescription', header: 'Company' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'moduleId', header: 'Module ID' },\r\n      { field: 'moduleDescription', header: 'Description' },\r\n      { field: 'menuName', header: 'Menu' },\r\n      { field: 'subMenuName', header: 'Menu' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'menuId', header: 'Menu ID' },\r\n      { field: 'subMenuId', header: 'Sub Menu ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        res = this.cs.removeDuplicatesFromArrayList(res, 'moduleId')\r\n        this.moduleTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedModule[this.selectedModule.length - 1];\r\n    this.selectedModule.length = 0;\r\n    this.selectedModule.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedModule[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    console.log(3)\r\n    if (this.selectedModule.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedModule[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/module-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedModule.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedModule,\r\n        module: 'Module',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedModule[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.moduleId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.moduleId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.moduleTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Module Id');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Module - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button (click)=\"openCrud('New')\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"moduleTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #moduleTag [columns]=\"cols\" [value]=\"moduleTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedModule[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedModule\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { ModuleService } from '../module.service';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { MenuService } from '../../menu/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-module-new',\r\n  templateUrl: './module-new.component.html',\r\n  styleUrl: './module-new.component.scss'\r\n})\r\nexport class ModuleNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  moduleTable: any[] = [];\r\n  selectedModule: any[] = [];\r\n  cols: any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ModuleService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    private menuService: MenuService,\r\n  ) {}\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    companyId: [this.auth.companyId,],\r\n    languageId: [this.auth.languageId,],\r\n    addModule: [],\r\n    companyIdAndDescription: [],\r\n    createUpdate: [true,],\r\n    createdBy: [],\r\n    createdOn: [],\r\n    delete: [true,],\r\n    deletionIndicator: [],\r\n    languageIdAndDescription: [],\r\n    menuId: [, Validators.required],\r\n    menuName: [],\r\n    moduleDescription: [, Validators.required],\r\n    moduleId: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    subMenuId: [],\r\n    statusId: [],\r\n    statusDescription: [],\r\n    subMenuName: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    view: [true,],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Module', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.moduleId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subMenuIdList: any[] = [];\r\n  menuIdList: any[] = [];\r\n  \r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.menu.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.menuIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.menu.key);\r\n      this.menuIdList = this.cs.removeDuplicatesFromArrayList(this.menuIdList, 'value');\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.service.Get(line.moduleId).subscribe({next: (res) =>{\r\n      if(res){\r\n        this.form.patchValue(res[0]);\r\n        this.patchTableUpdate(res);        \r\n      }\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n  }\r\n\r\n  patchTableUpdate(res: any){\r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.menuId = [this.form.controls.menuId.value];\r\n    this.menuService.search(obj).subscribe({next: (menures) =>{\r\n      this.moduleTable = [];\r\n      this.selectedModule = [];\r\n     \r\n      let combined = this.cs.removeDuplicateObj(res, menures);\r\n      this.moduleTable = combined;\r\n      this.selectedModule  = res;\r\n      \r\n      this.cols = [ \r\n        { field: 'menuId', header: 'Menu ID'},\r\n        { field: 'menuName', header: 'Menu Name'},\r\n        { field: 'subMenuId', header: 'Sub Menu ID'},\r\n        { field: 'subMenuName', header: 'Sub Menu Name'}\r\n      ];\r\n\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n  }\r\n\r\n  space(event: any) {\r\n    if (event.target.selectionStart === 0 && event.code === 'Space') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.selectedModule.forEach(x => {\r\n      x.moduleDescription = this.form.controls.moduleDescription.value;\r\n      x.moduleId = this.form.controls.moduleId.value;\r\n    })\r\n  \r\n    \r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.selectedModule).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res[0].moduleId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/module']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.selectedModule).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res[0].moduleId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/module']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n  menuIdChanged(event:any){ \r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.menuId = [event.value];\r\n    this.menuService.search(obj).subscribe({next: (res) =>{\r\n      this.moduleTable = [];\r\n      this.selectedModule = [];\r\n     this.moduleTable = res;\r\n     this.selectedModule = res;\r\n      \r\n      this.cols = [ \r\n        { field: 'menuId', header: 'Menu ID'},\r\n        { field: 'menuName', header: 'Menu Name'},\r\n        { field: 'subMenuId', header: 'Sub Menu ID'},\r\n        { field: 'subMenuName', header: 'Sub Menu Name'}\r\n      ];\r\n\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <p class=\"componentHeader f600 mb-0\">\r\n        Module- {{ this.pageToken.pageflow }}\r\n      </p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n      <form [formGroup]=\"form\">\r\n        <p-stepper [(activeStep)]=\"active\">\r\n          <p-stepperPanel>\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">1</p>\r\n                  <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Language ID</p>\r\n                  <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                    [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                  <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                      getErrorMessage()}}</small></mat-error>\r\n                </div>\r\n  \r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Company ID</p>\r\n                  <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                </div>\r\n\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                    <p class=\"formControlLabel f600 textBlack mb-0 required\">Menu ID</p>\r\n                    <p-dropdown [options]=\"menuIdList\" placeholder=\"Select\" (onChange)=\"menuIdChanged($event)\" formControlName=\"menuId\" appendTo=\"body\"\r\n                    [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                  </div>\r\n\r\n                  <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                    <p class=\"formControlLabel f600 textBlack mb-0 \">Module ID</p>\r\n                    <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"moduleId\" [ngClass]=\"form.get('moduleId')?.invalid && form.get('moduleId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                    <mat-error *ngIf=\"errorHandling('moduleId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0 required\"> Module Description</p>\r\n                  <input maxlength=\"100\" pInputText (keydown)=\"space($event)\" formControlName=\"moduleDescription\" [ngClass]=\"form.get('moduleDescription')?.invalid && form.get('moduleDescription')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                  <mat-error *ngIf=\"errorHandling('moduleDescription')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n              </div>\r\n              </div>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/module\">\r\n                  Cancel\r\n                </button>\r\n                <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"nextCallback.emit()\">\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n\r\n          <p-stepperPanel>\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">2</p>\r\n                  <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600 textBlack\">Lines</p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n              <p-table #moduleTag [columns]=\"cols\" [value]=\"moduleTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"multiple\" [(selection)]=\"selectedModule\" scrollHeight=\"calc(100vh - 27.8rem)\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" ></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedModule[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                            <p-tableCheckbox class=\"pl-3\" [value]=\"rowData\" />\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/module\">\r\n                  Cancel\r\n                </button>\r\n                <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                  {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n\r\n          <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p class=\"circle mb-0\" [ngClass]=\"\r\n                      active == 2 ? 'borderCircle' : 'disabled text-muted'\r\n                    \">\r\n                    2\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                    Admin\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                  <input type=\"text\" formControlName=\"createdBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                  <input type=\"text\" formControlName=\"createdOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                  <input type=\"text\" formControlName=\"updatedBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                  <input type=\"text\" formControlName=\"updatedOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">\r\n                  Back\r\n                </button>\r\n                <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                  {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n        </p-stepper>\r\n      </form>\r\n    </div>\r\n  </div>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvinceService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get() {\r\n\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/province', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/province/' + obj.provinceId + '?companyId=' + this.auth.companyId + '&countryId=' + obj.countryId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/province/' + obj.provinceId + '?companyId=' + this.auth.companyId + '&countryId=' + obj.countryId + '&languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/province/find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ProvinceService } from './province.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-province',\r\n  templateUrl: './province.component.html',\r\n  styleUrl: './province.component.scss'\r\n})\r\nexport class ProvinceComponent {\r\n\r\n  provinceTable: any[] = [];\r\n  selectedProvince: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ProvinceService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'Province - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'provinceName', header: 'Province Name' },\r\n      { field: 'countryName', header: 'Country Name' },\r\n      { field: 'companyName', header: 'Company Name' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n    ];\r\n    this.target = [\r\n      { field: 'provinceId', header: 'ProvinceID' },\r\n      { field: 'countryId', header: 'CountryID' },\r\n      { field: 'companyId', header: 'CompanyID' },\r\n      { field: 'languageId', header: 'LanguageId' },\r\n      { field: 'statusId', header: 'StatusID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.provinceTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedProvince[this.selectedProvince.length -1];\r\n    this.selectedProvince.length = 0;\r\n    this.selectedProvince.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProvince[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedProvince.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedProvince[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/province-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedProvince.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedProvince, module: 'Menu', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProvince[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.provinceId + lines.languageId + lines.countryId + lines.companyId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.provinceTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'Province');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Province - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"provinceTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Province Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #provinceTag [columns]=\"cols\" [value]=\"provinceTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedProvince[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedProvince\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ProvinceService } from '../province.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-province-new',\r\n  templateUrl: './province-new.component.html',\r\n  styleUrl: './province-new.component.scss'\r\n})\r\nexport class ProvinceNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ProvinceService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { \r\n    this.status = [\r\n      { value: '0', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    countryId: [, Validators.required],\r\n    countryName: [],\r\n    provinceId: [],\r\n    provinceName: [, Validators.required],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    statusId: [\"1\", Validators.required],\r\n    statusDescription: [],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Province', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    // this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      // this.form.controls.companyId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + res.countryId + res.provinceId + res.companyId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/province']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + res.countryId + res.provinceId + res.companyId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/province']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Province - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('languageId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Company ID</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country ID</p>\r\n                                <input type=\"text\" formControlName=\"countryId\" maxlength=\"50\"\r\n                                    [ngClass]=\"form.get('countryId')?.invalid && form.get('countryId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Province ID</p>\r\n                                <input formControlName=\"provinceId\" maxlength=\"50\"\r\n                                    [ngClass]=\"form.get('provinceId')?.invalid && form.get('provinceId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Province Name</p>\r\n                                <input  pInputText pKeyFilter=\"alphanum\" formControlName=\"provinceName\" maxlength=\"50\" class=\" w-100\" \r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status Description</p>\r\n                                <input formControlName=\"statusDescription\" maxlength=\"50\" class=\" w-100\"  pInputText pKeyFilter=\"alphanum\"\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <div class=\"card flex\">\r\n                                    <p-dropdown \r\n                                        [options]=\"status\"  [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                        formControlName=\"statusId\" \r\n                                placeholder=\"Select \" />\r\n                                </div>\r\n                                <mat-error *ngIf=\"errorHandling('statusId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/province\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistrictService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(districtId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/district/' + districtId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/district', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/district/'+ obj.districtId +'?languageId='+ this.auth.languageId \r\n      +'&companyId='+ this.auth.companyId + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/district/' + obj.districtId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId\r\n      + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/district/find', obj);\r\n  }\r\n}\r\n\r\n\r\n ", "import { Component } from '@angular/core';\r\nimport { DistrictService } from './district.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-district',\r\n  templateUrl: './district.component.html',\r\n  styleUrl: './district.component.scss'\r\n})\r\nexport class DistrictComponent {\r\n\r\n  \r\n  districtTable: any[] = [];\r\n  selectedDistrict: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: DistrictService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'District - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'districtId', header: 'ID' },\r\n      { field: 'districtName', header: 'Description' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'countryName', header: 'Country' },\r\n      { field: 'provinceName', header: 'Province' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'countryId', header: 'Country Id' },\r\n      { field: 'provinceId', header: 'Province Id' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.districtTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedDistrict[this.selectedDistrict.length - 1];\r\n  this.selectedDistrict.length = 0;\r\n  this.selectedDistrict.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedDistrict[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedDistrict.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedDistrict[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/district-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedDistrict.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedDistrict, module: 'District', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedDistrict[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.districtId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.districtTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'District');\r\n}\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">District - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"districtTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #districtTag [columns]=\"cols\" [value]=\"districtTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedDistrict[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedDistrict\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { DistrictService } from '../district.service';\r\n\r\n@Component({\r\n  selector: 'app-district-new',\r\n  templateUrl: './district-new.component.html',\r\n  styleUrl: './district-new.component.scss'\r\n})\r\nexport class DistrictNewComponent {\r\n\r\n  \r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: DistrictService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService) { \r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    districtId: [],\r\n    districtName: [,  Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription:[],\r\n    companyId:[this.auth.companyId, Validators.required],\r\n    companyName:[],\r\n    countryId:[],\r\n    countryName:[],\r\n    provinceId:[],\r\n    provinceName:[],\r\n    statusDescription:[],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark:[],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'District', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  countryIdList: any[] =[];\r\n  provinceIdList: any[] =[];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.countryIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.country.key);\r\n      this.provinceIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.province.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res: any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.districtId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/district']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.districtId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/district']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">District - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n\r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Country </p>\r\n                                <p-dropdown [options]=\"countryIdList\"  placeholder=\"Select\"  formControlName=\"countryId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\"  [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Province </p>\r\n                                <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" formControlName=\"provinceId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"districtId\" [ngClass]=\"form.get('districtId')?.invalid && form.get('districtId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('districtId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"districtName\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div> \r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/district\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n  \r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(cityId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/city/' + cityId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/city', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/city/'+ obj.cityId +'?languageId='+ this.auth.languageId \r\n      +'&companyId='+ this.auth.companyId + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId\r\n      +'&districtId='+obj.districtId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/city/' + obj.cityId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId\r\n      + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId +'&districtId='+obj.districtId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/city/find', obj);\r\n  }\r\n}\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { CityService } from './city.service';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrl: './city.component.scss'\r\n})\r\nexport class CityComponent {\r\n\r\n  cityTable: any[] = [];\r\n  selectedCity: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: CityService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'City - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'cityId', header: 'ID' },\r\n      { field: 'cityName', header: 'Description' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'countryName', header: 'Country' },\r\n      { field: 'provinceName', header: 'Province' },\r\n      { field: 'districtName', header: 'District' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'countryId', header: 'Country Id' },\r\n      { field: 'provinceId', header: 'Province Id' },\r\n      { field: 'districtId', header: 'District Id' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.cityTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedCity[this.selectedCity.length - 1];\r\n  this.selectedCity.length = 0;\r\n  this.selectedCity.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCity[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedCity.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedCity[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/city-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedCity.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedCity, module: 'City', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCity[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.cityId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.cityTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'City');\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">City - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"cityTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #cityTag [columns]=\"cols\" [value]=\"cityTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCity[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCity\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CityService } from '../city.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-city-new',\r\n  templateUrl: './city-new.component.html',\r\n  styleUrl: './city-new.component.scss'\r\n})\r\nexport class CityNewComponent {\r\n\r\n  \r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: CityService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService) { \r\n      this.status = [\r\n        { value: '0', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    cityId:[],\r\n    cityName:[, Validators.required],\r\n    districtId: [],\r\n    districtName: [],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription:[],\r\n    companyId:[this.auth.companyId, Validators.required],\r\n    companyName:[],\r\n    countryId:[],\r\n    countryName:[],\r\n    provinceId:[],\r\n    provinceName:[],\r\n    statusDescription:[],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark:[],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'City', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.districtId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  countryIdList: any[] =[];\r\n  provinceIdList: any[] =[];\r\n  districtIdList: any[] =[];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n      this.cas.dropdownlist.setup.district.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.countryIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.country.key);\r\n      this.provinceIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.province.key);\r\n      this.districtIdList = this.cas.forLanguageFilter(results[4], this.cas.dropdownlist.setup.district.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res: any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.cityId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/city']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.cityId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/city']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">City - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n\r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Country </p>\r\n                                <p-dropdown [options]=\"countryIdList\"  placeholder=\"Select\"  formControlName=\"countryId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\"  [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Province </p>\r\n                                <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" formControlName=\"provinceId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">District </p>\r\n                                <p-dropdown [options]=\"districtIdList\" placeholder=\"Select\" formControlName=\"districtId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('districtId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"cityId\" [ngClass]=\"form.get('cityId')?.invalid && form.get('cityId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('cityId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"cityName\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div> \r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n                             \r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/city\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsignorService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(consignorId: string, customerId: string, productId: string, subProductId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/consignor/' + consignorId + '?customerId=' + customerId + '&productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignor', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/consignor/' + obj.consignorId + '?customerId=' + obj.customerId + '&productId=' + obj.productId\r\n      + '&subProductId=' + obj.subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(consignorId: string, customerId: string, productId: string, subProductId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/consignor/' + consignorId + '?customerId=' + customerId + '&productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignor/' + 'find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { ConsignorService } from '../consignor.service';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-consignor-new',\r\n  templateUrl: './consignor-new.component.html',\r\n  styleUrl: './consignor-new.component.scss'\r\n})\r\nexport class ConsignorNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ConsignorService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [, Validators.required],\r\n    subProductName: [],\r\n    productId: [, Validators.required],\r\n    productName: [],\r\n    customerId: [, Validators.required],\r\n    customerName: [],\r\n    consignorId: [],\r\n    consignorName: [, Validators.required],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Consignor', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.productId.disable();\r\n      this.form.controls.customerId.disable();\r\n      this.form.controls.consignorId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n  productIdList: any[] = [];\r\n  customerIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n      this.cas.dropdownlist.setup.product.url,\r\n      this.cas.dropdownlist.setup.customer.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.subProductIdList = this.cas.foreachlist(results[2], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.productIdList = this.cas.foreachlist(results[3], this.cas.dropdownlist.setup.product.key);\r\n        this.customerIdList = this.cas.foreachlist(results[4], this.cas.dropdownlist.setup.customer.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.consignorId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/consignor']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.consignorId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/consignor']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignor - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                                <p-dropdown [options]=\"subProductIdList\" formControlName=\"subProductId\"\r\n                                    placeholder=\"Select\" appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Product</p>\r\n                                <p-dropdown [options]=\"productIdList\" formControlName=\"productId\" placeholder=\"Select\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('productId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Customer</p>\r\n                                <p-dropdown [options]=\"customerIdList\"  formControlName=\"customerId\" placeholder=\"Select\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('customerId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Consignor ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"consignorId\"\r\n                                    [ngClass]=\"form.get('consignorId')?.invalid && form.get('consignorId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Consignor Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"consignorName\"\r\n                                    [ngClass]=\"form.get('consignorName')?.invalid && form.get('consignorName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('consignorName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" pInputText pKeyFilter=\"alphanum\" formControlName=\"remark\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/consignor\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { ConsignorService } from './consignor.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-consignor',\r\n  templateUrl: './consignor.component.html',\r\n  styleUrl: './consignor.component.scss'\r\n})\r\nexport class ConsignorComponent {\r\n\r\n  consignorTable: any[] = [];\r\n  selectedConsignor: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ConsignorService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Consignor - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'subProductName', header: 'Sub Product' },\r\n      { field: 'productName', header: 'Product' },\r\n      { field: 'customerName', header: 'Customer' },\r\n      { field: 'consignorId', header: 'Consignor ID' },\r\n      { field: 'consignorName', header: 'Consignor Name' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'subProductId', header: 'Sub Product ID' },\r\n      { field: 'productId', header: 'Product ID' },\r\n      { field: 'customerId', header: 'Customer ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.consignorTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedConsignor[this.selectedConsignor.length - 1];\r\n    this.selectedConsignor.length = 0;\r\n    this.selectedConsignor.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignor[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedConsignor.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedConsignor[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/consignor-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedConsignor.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedConsignor,\r\n        module: 'Consignor',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignor[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.consignorId, lines.customerId, lines.productId, lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.consignorId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.consignorTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Consignor');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignor - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"consignorTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #consignorTag [columns]=\"cols\" [value]=\"consignorTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedConsignor[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedConsignor\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(customerId: string, productId: string, subProductId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/customer/' + customerId + '?productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/customer/' + obj.customerId + '?productId=' + obj.productId\r\n      + '&subProductId=' + obj.subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(customerId: string, productId: string, subProductId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/customer/' + customerId + '?productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer/' + 'find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CustomerService } from '../customer.service';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-customer-new',\r\n  templateUrl: './customer-new.component.html',\r\n  styleUrl: './customer-new.component.scss'\r\n})\r\nexport class CustomerNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: CustomerService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [, Validators.required],\r\n    subProductName: [],\r\n    productId: [, Validators.required],\r\n    productName: [],\r\n    customerId: [],\r\n    customerName: [, Validators.required],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Customer', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.productId.disable();\r\n      this.form.controls.customerId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n  productIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n      this.cas.dropdownlist.setup.product.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.subProductIdList = this.cas.foreachlist(results[2], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.productIdList = this.cas.foreachlist(results[3], this.cas.dropdownlist.setup.product.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.customerId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/customer']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.customerId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/customer']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Customer - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                                <p-dropdown [options]=\"subProductIdList\" formControlName=\"subProductId\"\r\n                                    placeholder=\"Select\" appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Product</p>\r\n                                <p-dropdown [options]=\"productIdList\" formControlName=\"productId\" placeholder=\"Select\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('productId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Customer ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"customerId\"\r\n                                    [ngClass]=\"form.get('customerId')?.invalid && form.get('customerId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Customer Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"customerName\"\r\n                                    [ngClass]=\"form.get('customerName')?.invalid && form.get('customerName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('customerName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" pInputText pKeyFilter=\"alphanum\" formControlName=\"remark\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/customer\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { CustomerService } from './customer.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrl: './customer.component.scss'\r\n})\r\n\r\nexport class CustomerComponent {\r\n  customerTable: any[] = [];\r\n  selectedCustomer: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: CustomerService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Customer - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'subProductName', header: 'Sub Product' },\r\n      { field: 'productName', header: 'Product' },\r\n      { field: 'customerId', header: 'Customer ID' },\r\n      { field: 'customerName', header: 'Customer Name' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'subProductId', header: 'Sub Product ID' },\r\n      { field: 'productId', header: 'Product ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.customerTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedCustomer[this.selectedCustomer.length - 1];\r\n    this.selectedCustomer.length = 0;\r\n    this.selectedCustomer.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCustomer[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedCustomer.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedCustomer[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/customer-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedCustomer.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedCustomer,\r\n        module: 'Customer',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCustomer[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.customerId, lines.productId, lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.customerId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.customerTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Customer');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Customer - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"customerTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #customerTag [columns]=\"cols\" [value]=\"customerTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCustomer[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCustomer\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(productId: string, subProductId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/product/' + productId + '?subProductId=' + subProductId \r\n      +'&companyId=' +this.auth.companyId +'&languageId=' +this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/product', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/product/' + obj.productId + '?subProductId=' + obj.subProductId \r\n      +'&companyId=' +this.auth.companyId +'&languageId=' +this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(productId: string, subProductId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/product/' + productId + '?subProductId=' + subProductId \r\n      +'&companyId=' +this.auth.companyId +'&languageId=' +this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/product/' + 'find',obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { ProductService } from '../product.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-product-new',\r\n  templateUrl: './product-new.component.html',\r\n  styleUrl: './product-new.component.scss',\r\n})\r\nexport class ProductNewComponent {\r\n  active: number | undefined = 0;\r\n  status: any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ProductService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '0', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [, Validators.required],\r\n    subProductName: [],\r\n    productId: [],\r\n    productName: [, Validators.required],\r\n    remark: [],\r\n    statusId: ['1',],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Product', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.productId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.subProductIdList = this.cas.foreachlist(results[2], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.productId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/product']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.productId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/product']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Product - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                                <p-dropdown [options]=\"subProductIdList\" formControlName=\"subProductId\"\r\n                                    placeholder=\"Select\" appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Product ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"productId\"\r\n                                    [ngClass]=\"form.get('productId')?.invalid && form.get('productId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Product Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"productName\"\r\n                                    [ngClass]=\"form.get('productName')?.invalid && form.get('productName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('productName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\" placeholder=\"Select \" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" pInputText pKeyFilter=\"alphanum\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/product\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ProductService } from './product.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrl: './product.component.scss',\r\n})\r\n\r\nexport class ProductComponent {\r\n  productTable: any[] = [];\r\n  selectedProduct: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ProductService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Product - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'subProductName', header: 'Sub Product' },\r\n      { field: 'productId', header: 'Product Id' },\r\n      { field: 'productName', header: 'Product Name' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'LanguageId' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'CompanyId' },\r\n      { field: 'subProductId', header: 'Sub Product Id' },\r\n      { field: 'statusId', header: 'StatusId' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.productTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedProduct[this.selectedProduct.length - 1];\r\n    this.selectedProduct.length = 0;\r\n    this.selectedProduct.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedProduct.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedProduct[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/product-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedProduct.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedProduct,\r\n        module: 'Product',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.productId,lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.productId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.productTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Product');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Product - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"productTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #productTag [columns]=\"cols\" [value]=\"productTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedProduct[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedProduct\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HsCodeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(hsCode: string) {\r\n    return this.http.get<any>(\r\n      '/overc-idmaster-service/hsCode/' + hsCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/hsCode', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>(\r\n      '/overc-idmaster-service/hsCode/' + obj.hsCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(hsCode: string) {\r\n    return this.http.delete<any>(\r\n      '/overc-idmaster-service/hsCode/' + hsCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/hsCode/' + 'find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { HsCodeService } from '../hs-code.service';\r\n\r\n@Component({\r\n  selector: 'app-hs-code-new',\r\n  templateUrl: './hs-code-new.component.html',\r\n  styleUrl: './hs-code-new.component.scss'\r\n})\r\nexport class HsCodeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: HsCodeService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    hsCode: [],\r\n    itemCode: [],\r\n    itemDescription: [],\r\n    itemGroup: [],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedOn: [],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'HS Code', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.hsCode.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.hsCode + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/hsCode']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.hsCode + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/hsCode']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">HS Code - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">HS Code</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"hsCode\"\r\n                                    [ngClass]=\"form.get('hsCode')?.invalid && form.get('hsCode')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Item Code</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"itemCode\"\r\n                                    [ngClass]=\"form.get('itemCode')?.invalid && form.get('itemCode')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Item Description</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"itemDescription\"\r\n                                    [ngClass]=\"form.get('itemDescription')?.invalid && form.get('itemDescription')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Item Group</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"itemGroup\"\r\n                                    [ngClass]=\"form.get('itemGroup')?.invalid && form.get('itemGroup')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" pInputText pKeyFilter=\"alphanum\" formControlName=\"remark\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/hsCode\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { HsCodeService } from './hs-code.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-hs-code',\r\n  templateUrl: './hs-code.component.html',\r\n  styleUrl: './hs-code.component.scss'\r\n})\r\nexport class HsCodeComponent {\r\n\r\n  hsCodeTable: any[] = [];\r\n  selectedHsCode: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: HsCodeService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'HS Code - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'hsCode', header: 'HS Code' },\r\n      { field: 'itemCode', header: 'Item Code' },\r\n      { field: 'itemDescription', header: 'Item Description' },\r\n      { field: 'itemGroup', header: 'Item Group' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.hsCodeTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedHsCode[this.selectedHsCode.length - 1];\r\n    this.selectedHsCode.length = 0;\r\n    this.selectedHsCode.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedHsCode[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedHsCode.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedHsCode[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/hsCode-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedHsCode.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedHsCode,\r\n        module: 'HS Code',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedHsCode[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.hsCode).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.hsCode + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.hsCodeTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'HSCode');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">HS Code - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"hsCodeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #hsCodeTag [columns]=\"cols\" [value]=\"hsCodeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedHsCode[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedHsCode\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NumberrangeService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  Get(obj: any) {\r\n    return this.http.get<any>('/overc-idmaster-service/numberRange' + obj.numberRangeCode + '?languageId=' + obj.languageId + '&numberRangeObject=' + obj.numberRangeObject);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/numberRange', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/numberRange/' + obj.numberRangeCode + '?languageId=' + this.auth.languageId + '&numberRangeObject=' + obj.numberRangeObject, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/numberRange/' + obj.numberRangeCode + '?languageId=' + this.auth.languageId + '&numberRangeObject=' + obj.numberRangeObject);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/numberRange/find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NumberrangeService } from '../numberrange.service';  \r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-numberrange-new',\r\n  templateUrl: './numberrange-new.component.html',\r\n  styleUrl: './numberrange-new.component.scss'\r\n})\r\nexport class NumberrangeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: NumberrangeService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    // languageDescription: [],\r\n    numberRangeCode: [, Validators.required],\r\n    numberRangeObject: [, Validators.required],\r\n    numberRangeFrom: [],\r\n    numberRangeTo: [],\r\n    numberRangeCurrent: [],\r\n    numberRangeStatus: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'NumberRange', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + res.numberRangeObject + res.numberRangeCode + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/numberrange']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + res.numberRangeObject + res.numberRangeCode + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/numberrange']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">NumberRange - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('languageId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange Code</p>\r\n                                <input formControlName=\"numberRangeCode\"\r\n                                    [ngClass]=\"form.get('numberRangeCode')?.invalid && form.get('numberRangeCode')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('statusCode')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange Object</p>\r\n                                <input formControlName=\"numberRangeObject\"\r\n                                    [ngClass]=\"form.get('numberRangeObject')?.invalid && form.get('numberRangeObject')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('numberRangeObject')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange From</p>\r\n                                <input formControlName=\"numberRangeFrom\" \r\n                                    [ngClass]=\"form.get('numberRangeFrom')?.invalid && form.get('numberRangeFrom')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('numberRangeFrom')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange To</p>\r\n                                <input formControlName=\"numberRangeTo\" \r\n                                    [ngClass]=\"form.get('numberRangeTo')?.invalid && form.get('numberRangeTo')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('numberRangeTo')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange Current</p>\r\n                                <input formControlName=\"numberRangeCurrent\" \r\n                                    [ngClass]=\"form.get('numberRangeCurrent')?.invalid && form.get('numberRangeCurrent')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('numberRangeCurrent')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">NumberRange Status</p>\r\n                                <input formControlName=\"numberRangeStatus\"\r\n                                    [ngClass]=\"form.get('numberRangeStatus')?.invalid && form.get('numberRangeStatus')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('numberRangeStatus')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/numberrange\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { NumberrangeService } from './numberrange.service';  \r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-numberrange',\r\n  templateUrl: './numberrange.component.html',\r\n  styleUrl: './numberrange.component.scss'\r\n})\r\nexport class NumberrangeComponent {\r\n\r\n  numberRangeTable: any[] = [];\r\n  selectedNumberRange: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: NumberrangeService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'NumberRange - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'numberRangeObject', header: 'NumberRange Object' },\r\n      { field: 'numberRangeStatus', header: 'NumberRange Status' },\r\n      { field: 'numberRangeCode', header: 'NumberRange Code' },\r\n    ];\r\n    this.target = [\r\n      { field: 'numberRangeFrom', header: 'NumberRange From' },\r\n      { field: 'numberRangeTo', header: 'NumberRange To' },\r\n      { field: 'numberRangeCurrent', header: 'NumberRangeCurrent' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.numberRangeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedNumberRange[this.selectedNumberRange.length -1];\r\n    this.selectedNumberRange.length = 0;\r\n    this.selectedNumberRange.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedNumberRange[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedNumberRange.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedNumberRange[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/numberrange-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedNumberRange.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedNumberRange, module: 'Menu', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedNumberRange[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.numberRangeCode + lines.languageId + lines.numberRangeObject + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.numberRangeTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'OpStatus');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">NumberRange - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"numberRangeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Province Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #numberRangeTag [columns]=\"cols\" [value]=\"numberRangeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedNumberRange[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedNumberRange\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpstatusService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  Get(obj: any) {\r\n    return this.http.get<any>('/overc-idmaster-service/OpStatus/' + obj.statusCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/OpStatus', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/OpStatus/' + obj.statusCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/OpStatus/' + obj.statusCode + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/OpStatus/findOpStatus', obj);\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { OpstatusService } from '../opstatus.service'; \r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-opstatus-new',\r\n  templateUrl: './opstatus-new.component.html',\r\n  styleUrl: './opstatus-new.component.scss'\r\n})\r\nexport class OpstatusNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  OpStatus:any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: OpstatusService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { \r\n    this.OpStatus = [\r\n      { value: '0', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    statusCode: [\"1\", Validators.required],\r\n    opStatusDescription: [],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Province', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + res.companyId + res.statusCode + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/opstatus']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + res.companyId + res.statusCode + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/opstatus']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">OpStatus - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('languageId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Company ID</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">OpStatus Description</p>\r\n                                <input formControlName=\"opStatusDescription\" maxlength=\"50\" class=\" w-100\"  pInputText pKeyFilter=\"alphanum\"\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Status Code</p>\r\n                                <input formControlName=\"statusCode\" maxlength=\"50\"\r\n                                    [ngClass]=\"form.get('statusCode')?.invalid && form.get('statusCode')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('statusCode')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/opstatus\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { OpstatusService } from './opstatus.service'; \r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-opstatus',\r\n  templateUrl: './opstatus.component.html',\r\n  styleUrl: './opstatus.component.scss'\r\n})\r\nexport class OpstatusComponent {\r\n\r\n  opstatusTable: any[] = [];\r\n  selectedOpstatus: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: OpstatusService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'Opstatus - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyName', header: 'Company Name' },\r\n      { field: 'opStatusDescription', header: 'OpStatus' },\r\n    ];\r\n    this.target = [\r\n      { field: 'companyId', header: 'CompanyID' },\r\n      { field: 'languageId', header: 'LanguageId' },\r\n      { field: 'statusCode', header: 'StatusCode' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.opstatusTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedOpstatus[this.selectedOpstatus.length -1];\r\n    this.selectedOpstatus.length = 0;\r\n    this.selectedOpstatus.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedOpstatus[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedOpstatus.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedOpstatus[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/opstatus-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedOpstatus.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedOpstatus, module: 'Menu', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedOpstatus[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.provinceId + lines.languageId + lines.countryId + lines.companyId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.opstatusTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'OpStatus');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">OpStatus - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"padding-left: 37px; padding-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"opstatusTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Province Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #opstatusTag [columns]=\"cols\" [value]=\"opstatusTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedOpstatus[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedOpstatus\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { LanguageNewComponent } from './language/language-new/language-new.component';\r\nimport { ConsignmentTypeComponent } from './consignment-type/consignment-type.component';\r\nimport { ConsignmentTypeNewComponent } from './consignment-type/consignment-type-new/consignment-type-new.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MenuNewComponent } from './menu/menu-new/menu-new.component';\r\nimport { StatusNewComponent } from './status/status-new/status-new.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { CurrencyNewComponent } from './currency/currency-new/currency-new.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { CompanyNewComponent } from './company/company-new/company-new.component';\r\nimport { SubProductComponent } from './sub-product/sub-product.component';\r\nimport { SubProductNewComponent } from './sub-product/sub-product-new/sub-product-new.component';\r\nimport { LoadTypeComponent } from './load-type/load-type.component';\r\nimport { LoadTypeNewComponent } from './load-type/load-type-new/load-type-new.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { ServiceTypeNewComponent } from './service-type/service-type-new/service-type-new.component';\r\nimport { ModuleComponent } from './module/module.component';\r\nimport { ModuleNewComponent } from './module/module-new/module-new.component';\r\nimport { ProvinceComponent } from './province/province.component';\r\nimport { ProvinceNewComponent } from './province/province-new/province-new.component';\r\nimport { DistrictComponent } from './district/district.component';\r\nimport { DistrictNewComponent } from './district/district-new/district-new.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { CityNewComponent } from './city/city-new/city-new.component';\r\nimport { ConsignorNewComponent } from './consignor/consignor-new/consignor-new.component';\r\nimport { ConsignorComponent } from './consignor/consignor.component';\r\nimport { CustomerNewComponent } from './customer/customer-new/customer-new.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { ProductNewComponent } from './product/product-new/product-new.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { HsCodeNewComponent } from './hs-code/hs-code-new/hs-code-new.component';\r\nimport { HsCodeComponent } from './hs-code/hs-code.component';\r\nimport { NumberrangeNewComponent } from './numberrange/numberrange-new/numberrange-new.component';\r\nimport { NumberrangeComponent } from './numberrange/numberrange.component';\r\nimport { OpstatusNewComponent } from './opstatus/opstatus-new/opstatus-new.component';\r\nimport { OpstatusComponent } from './opstatus/opstatus.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'company',component: CompanyComponent, data: { title: 'Setup', module: 'Company' } },\r\n  {path:'company-new/:code',component: CompanyNewComponent,data: { title: 'Setup', module: 'Company - Add New' } },\r\n\r\n  {path:'language',component: LanguageComponent, data: { title: 'Setup', module: 'Language' } },\r\n  {path:'language-new/:code',component: LanguageNewComponent,data: { title: 'Setup', module: 'Language - Add New' } },\r\n\r\n  {path:'consignmentType',component: ConsignmentTypeComponent, data: { title: 'Setup', module: 'ConsignmentType' } },\r\n  {path:'consignmentType-new/:code',component: ConsignmentTypeNewComponent,data: { title: 'Setup', module: 'ConsignmentType - Add New' } },\r\n\r\n  {path:'serviceType',component: ServiceTypeComponent, data: { title: 'Setup', module: 'ServiceType' } },\r\n  {path:'serviceType-new/:code',component: ServiceTypeNewComponent,data: { title: 'Setup', module: 'ServiceType - Add New' } },\r\n\r\n  {path: 'menu',component: MenuComponent, data: {title: 'Setup', module: 'Menu' } },\r\n  {path:'menu-new/:code',component: MenuNewComponent,data: { title: 'Setup', module: 'Menu - Add New' } },\r\n\r\n  {path:'status',component: StatusComponent, data: { title: 'Setup', module: 'Status' } },\r\n  {path:'status-new/:code',component: StatusNewComponent,data: { title: 'Setup', module: 'Status - Add New' } },\r\n\r\n  {path:'currency',component: CurrencyComponent, data: { title: 'Setup', module: 'Currency' } },\r\n  {path:'currency-new/:code',component: CurrencyNewComponent,data: { title: 'Setup', module: 'Currency - Add New' } },\r\n  \r\n  {path:'loadType',component: LoadTypeComponent, data: { title: 'Setup', module: 'LoadType' } },\r\n  {path:'loadType-new/:code',component: LoadTypeNewComponent,data: { title: 'Setup', module: 'LoadType - Add New' } },\r\n  \r\n  {path:'subProduct',component: SubProductComponent, data: { title: 'Setup', module: 'Sub Product' } },\r\n  {path:'subProduct-new/:code',component: SubProductNewComponent,data: { title: 'Setup', module: 'Sub Product - Add New' } },\r\n  \r\n  {path:'module',component: ModuleComponent, data: { title: 'Setup', module: 'Module' } },\r\n  {path:'module-new/:code',component: ModuleNewComponent,data: { title: 'Setup', module: 'Module - Add New' } },\r\n\r\n  {path:'province',component: ProvinceComponent, data: { title: 'Setup', module: 'Province' } },\r\n  {path:'province-new/:code',component: ProvinceNewComponent,data: { title: 'Setup', module: 'Province - Add New' } },\r\n\r\n  {path:'district',component: DistrictComponent, data: { title: 'Setup', module: 'District' } },\r\n  {path:'district-new/:code',component: DistrictNewComponent,data: { title: 'Setup', module: 'District - Add New' } },\r\n  \r\n  {path:'city',component: CityComponent, data: { title: 'Setup', module: 'City' } },\r\n  {path:'city-new/:code',component: CityNewComponent,data: { title: 'Setup', module: 'City - Add New' } },\r\n\r\n  { path: 'product', component: ProductComponent, data: { title: 'Setup', module: 'Product' } },\r\n  { path: 'product-new/:code', component: ProductNewComponent, data: { title: 'Setup', module: 'Product - Add New' } },\r\n\r\n  { path: 'customer', component: CustomerComponent, data: { title: 'Setup', module: 'Customer' } },\r\n  { path: 'customer-new/:code', component: CustomerNewComponent, data: { title: 'Setup', module: 'Customer - Add New' } },\r\n\r\n  { path: 'consignor', component: ConsignorComponent, data: { title: 'Setup', module: 'Consignor' } },\r\n  { path: 'consignor-new/:code', component: ConsignorNewComponent, data: { title: 'Setup', module: 'Consignor - Add New' } },\r\n\r\n  { path: 'hsCode', component: HsCodeComponent, data: { title: 'Setup', module: 'HS Code' } },\r\n  { path: 'hsCode-new/:code', component: HsCodeNewComponent, data: { title: 'Setup', module: 'HS Code - Add New' } },\r\n\r\n  {path:'opstatus',component: OpstatusComponent, data: { title: 'Setup', module: 'Opstatus' } },\r\n  {path:'opstatus-new/:code',component: OpstatusNewComponent,data: { title: 'Setup', module: 'Opstatus - Add New' } },\r\n\r\n  {path:'numberrange',component: NumberrangeComponent, data: { title: 'Setup', module: 'NumberRange' } },\r\n  {path:'numberrange-new/:code',component: NumberrangeNewComponent,data: { title: 'Setup', module: 'NumberRange - Add New' } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IdMastersRoutingModule { }\r\n", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-role',\r\n  templateUrl: './user-role.component.html',\r\n  styleUrl: './user-role.component.scss'\r\n})\r\nexport class UserRoleComponent {\r\n\r\n}\r\n", "<p>user-role works!</p>\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IdMastersRoutingModule } from './id-masters-routing.module';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { LanguageNewComponent } from './language/language-new/language-new.component';\r\nimport { ConsignmentTypeComponent } from './consignment-type/consignment-type.component';\r\nimport { ConsignmentTypeNewComponent } from './consignment-type/consignment-type-new/consignment-type-new.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MenuNewComponent } from './menu/menu-new/menu-new.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { StatusNewComponent } from './status/status-new/status-new.component';\r\nimport { CurrencyNewComponent } from './currency/currency-new/currency-new.component';\r\nimport { CompanyNewComponent } from './company/company-new/company-new.component';\r\nimport { SubProductComponent } from './sub-product/sub-product.component';\r\nimport { SubProductNewComponent } from './sub-product/sub-product-new/sub-product-new.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { LoadTypeComponent } from './load-type/load-type.component';\r\nimport { ServiceTypeNewComponent } from './service-type/service-type-new/service-type-new.component';\r\nimport { LoadTypeNewComponent } from './load-type/load-type-new/load-type-new.component';\r\nimport { ModuleComponent } from './module/module.component';\r\nimport { ModuleNewComponent } from './module/module-new/module-new.component';\r\nimport { UserRoleComponent } from './user-role/user-role.component';\r\nimport { ProvinceComponent } from './province/province.component';\r\nimport { ProvinceNewComponent } from './province/province-new/province-new.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { DistrictComponent } from './district/district.component';\r\nimport { CityNewComponent } from './city/city-new/city-new.component';\r\nimport { DistrictNewComponent } from './district/district-new/district-new.component';\r\nimport { ConsignorComponent } from './consignor/consignor.component';\r\nimport { ConsignorNewComponent } from './consignor/consignor-new/consignor-new.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { CustomerNewComponent } from './customer/customer-new/customer-new.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductNewComponent } from './product/product-new/product-new.component';\r\nimport { HsCodeComponent } from './hs-code/hs-code.component';\r\nimport { HsCodeNewComponent } from './hs-code/hs-code-new/hs-code-new.component';\r\nimport { OpstatusComponent } from './opstatus/opstatus.component';\r\nimport { OpstatusNewComponent } from './opstatus/opstatus-new/opstatus-new.component';\r\nimport { NumberrangeComponent } from './numberrange/numberrange.component';\r\nimport { NumberrangeNewComponent } from './numberrange/numberrange-new/numberrange-new.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CompanyComponent,\r\n    LanguageComponent,\r\n    LanguageNewComponent,\r\n    ConsignmentTypeComponent,\r\n    ConsignmentTypeNewComponent,\r\n    MenuComponent,\r\n    MenuNewComponent,\r\n    CurrencyComponent,\r\n    StatusComponent,\r\n    StatusNewComponent,\r\n    CurrencyNewComponent,\r\n    CompanyNewComponent,\r\n    SubProductComponent,\r\n    SubProductNewComponent,\r\n    ServiceTypeComponent,\r\n    LoadTypeComponent,\r\n    ServiceTypeNewComponent,\r\n    LoadTypeNewComponent,\r\n    ModuleComponent,\r\n    ModuleNewComponent,\r\n    UserRoleComponent,\r\n    ProvinceComponent,\r\n    ProvinceNewComponent,\r\n    CityComponent,\r\n    DistrictComponent,\r\n    CityNewComponent,\r\n    DistrictNewComponent,\r\n    ConsignorComponent,\r\n    ConsignorNewComponent,\r\n    CustomerComponent,\r\n    CustomerNewComponent,\r\n    ProductComponent,\r\n    ProductNewComponent,\r\n    HsCodeComponent,\r\n    HsCodeNewComponent,\r\n    OpstatusComponent,\r\n    OpstatusNewComponent,\r\n    NumberrangeComponent,\r\n    NumberrangeNewComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    IdMastersRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class IdMastersModule { }\r\n"],
  "mappings": "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",
  "names": ["url", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0"]
}
