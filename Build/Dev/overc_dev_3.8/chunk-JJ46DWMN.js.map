{
  "version": 3,
  "sources": ["src/app/main/master/customer/customer.service.ts", "src/app/main/master/consignor/consignor.service.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(customerId: string, productId: string, subProductId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/customer/' + customerId + '?productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer', obj);\r\n  }\r\n\r\n  CreateBulk(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer/create/list', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/customer/' + obj.customerId + '?productId=' + obj.productId\r\n      + '&subProductId=' + obj.subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  UpdateBulk(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/customer/update/list', obj);\r\n  }\r\n\r\n  Delete(obj:any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer/delete/list', obj);\r\n  }\r\n\r\n  DeleteBulk(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/customer/', obj);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/customer/' + 'find', obj);\r\n  }\r\n\r\n}\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsignorService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(consignorId: string, customerId: string, productId: string, subProductId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/consignor/' + consignorId + '?customerId=' + customerId + '&productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignor', obj);\r\n  }\r\n\r\n  CreateBulk(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignor/create/list', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/consignor/' + obj.consignorId + '?customerId=' + obj.customerId + '&productId=' + obj.productId\r\n      + '&subProductId=' + obj.subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  UpdateBulk(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/consignor/update/list', obj);\r\n  }\r\n\r\n  Delete(consignorId: string, customerId: string, productId: string, subProductId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/consignor/' + consignorId + '?customerId=' + customerId + '&productId=' + productId\r\n      + '&subProductId=' + subProductId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  DeleteBulk(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/consignor/', obj);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignor/' + 'find', obj);\r\n  }\r\n\r\n}\r\n"],
  "mappings": ";;;;;;;;AAOM,IAAO,mBAAP,MAAO,iBAAe;EAE1B,YAAoB,MAA0B,MAAiB;AAA3C,SAAA,OAAA;AAA0B,SAAA,OAAA;EAAqB;EAEnE,IAAI,YAAoB,WAAmB,cAAoB;AAC7D,WAAO,KAAK,KAAK,IAAS,sCAAsC,aAAa,gBAAgB,YACzF,mBAAmB,eAAe,gBAAgB,KAAK,KAAK,YAAY,iBAAiB,KAAK,KAAK,UAAU;EACnH;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,oCAAoC,GAAG;EACpE;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,KAAU,gDAAgD,GAAG;EAChF;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,MAAW,sCAAsC,IAAI,aAAa,gBAAgB,IAAI,YACnG,mBAAmB,IAAI,eAAe,gBAAgB,KAAK,KAAK,YAAY,iBAAiB,KAAK,KAAK,YAAY,GAAG;EAC5H;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,MAAW,gDAAgD,GAAG;EACjF;EAEA,OAAO,KAAO;AACZ,WAAO,KAAK,KAAK,KAAU,gDAAgD,GAAG;EAChF;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,OAAY,qCAAqC,GAAG;EACvE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,yCAA8C,GAAG;EAC9E;;;mBApCW,kBAAe,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;AAAA;oFAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;;ACAA,IAAO,oBAAP,MAAO,kBAAgB;EAE3B,YAAoB,MAA0B,MAAiB;AAA3C,SAAA,OAAA;AAA0B,SAAA,OAAA;EAAqB;EAEnE,IAAI,aAAqB,YAAoB,WAAmB,cAAoB;AAClF,WAAO,KAAK,KAAK,IAAS,uCAAuC,cAAc,iBAAiB,aAAa,gBAAgB,YACzH,mBAAmB,eAAe,gBAAgB,KAAK,KAAK,YAAY,iBAAiB,KAAK,KAAK,UAAU;EACnH;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,qCAAqC,GAAG;EACrE;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,KAAU,iDAAiD,GAAG;EACjF;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,MAAW,uCAAuC,IAAI,cAAc,iBAAiB,IAAI,aAAa,gBAAgB,IAAI,YACvI,mBAAmB,IAAI,eAAe,gBAAgB,KAAK,KAAK,YAAY,iBAAiB,KAAK,KAAK,YAAY,GAAG;EAC5H;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,MAAW,iDAAiD,GAAG;EAClF;EAEA,OAAO,aAAqB,YAAoB,WAAmB,cAAoB;AACrF,WAAO,KAAK,KAAK,OAAY,uCAAuC,cAAc,iBAAiB,aAAa,gBAAgB,YAC5H,mBAAmB,eAAe,gBAAgB,KAAK,KAAK,YAAY,iBAAiB,KAAK,KAAK,UAAU;EACnH;EAEA,WAAW,KAAQ;AACjB,WAAO,KAAK,KAAK,OAAY,sCAAsC,GAAG;EACxE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,0CAA+C,GAAG;EAC/E;;;mBArCW,mBAAgB,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;AAAA;qFAAhB,mBAAgB,SAAhB,kBAAgB,WAAA,YAFf,OAAM,CAAA;AAEd,IAAO,mBAAP;",
  "names": []
}
