{
  "version": 3,
  "sources": ["src/app/main/id-masters/company/company.service.ts", "src/app/main/id-masters/company/company.component.ts", "src/app/main/id-masters/company/company.component.html", "src/app/main/id-masters/language/language.service.ts", "src/app/main/id-masters/language/language.component.ts", "src/app/main/id-masters/language/language.component.html", "src/app/main/id-masters/language/language-new/language-new.component.ts", "src/app/main/id-masters/language/language-new/language-new.component.html", "src/app/main/id-masters/consignment-type/consignment-type.service.ts", "src/app/main/id-masters/consignment-type/consignment-type.component.ts", "src/app/main/id-masters/consignment-type/consignment-type.component.html", "src/app/main/id-masters/consignment-type/consignment-type-new/consignment-type-new.component.ts", "src/app/main/id-masters/consignment-type/consignment-type-new/consignment-type-new.component.html", "src/app/main/id-masters/menu/menu.service.ts", "src/app/main/id-masters/menu/menu.component.ts", "src/app/main/id-masters/menu/menu.component.html", "src/app/main/id-masters/menu/menu-new/menu-new.component.ts", "src/app/main/id-masters/menu/menu-new/menu-new.component.html", "src/app/main/id-masters/status/status.service.ts", "src/app/main/id-masters/status/status-new/status-new.component.ts", "src/app/main/id-masters/status/status-new/status-new.component.html", "src/app/main/id-masters/status/status.component.ts", "src/app/main/id-masters/status/status.component.html", "src/app/main/id-masters/currency/currency.service.ts", "src/app/main/id-masters/currency/currency-new/currency-new.component.ts", "src/app/main/id-masters/currency/currency-new/currency-new.component.html", "src/app/main/id-masters/currency/currency.component.ts", "src/app/main/id-masters/currency/currency.component.html", "src/app/main/id-masters/company/company-new/company-new.component.ts", "src/app/main/id-masters/company/company-new/company-new.component.html", "src/app/main/id-masters/sub-product/sub-product.component.ts", "src/app/main/id-masters/sub-product/sub-product.component.html", "src/app/main/id-masters/sub-product/sub-product-new/sub-product-new.component.ts", "src/app/main/id-masters/sub-product/sub-product-new/sub-product-new.component.html", "src/app/main/id-masters/load-type/load-type.service.ts", "src/app/main/id-masters/load-type/load-type.component.ts", "src/app/main/id-masters/load-type/load-type.component.html", "src/app/config/spaceValidator.ts", "src/app/main/id-masters/load-type/load-type-new/load-type-new.component.ts", "src/app/main/id-masters/load-type/load-type-new/load-type-new.component.html", "src/app/main/id-masters/service-type/service-type.service.ts", "src/app/main/id-masters/service-type/service-type.component.ts", "src/app/main/id-masters/service-type/service-type.component.html", "src/app/main/id-masters/service-type/service-type-new/service-type-new.component.ts", "src/app/main/id-masters/service-type/service-type-new/service-type-new.component.html", "src/app/main/id-masters/module/module.service.ts", "src/app/main/id-masters/module/module.component.ts", "src/app/main/id-masters/module/module.component.html", "src/app/main/id-masters/module/module-new/module-new.component.ts", "src/app/main/id-masters/module/module-new/module-new.component.html", "src/app/main/id-masters/province/province.component.ts", "src/app/main/id-masters/province/province.component.html", "src/app/main/id-masters/province/province-new/province-new.component.ts", "src/app/main/id-masters/province/province-new/province-new.component.html", "src/app/main/id-masters/district/district.service.ts", "src/app/main/id-masters/district/district.component.ts", "src/app/main/id-masters/district/district.component.html", "src/app/main/id-masters/district/district-new/district-new.component.ts", "src/app/main/id-masters/district/district-new/district-new.component.html", "src/app/main/id-masters/city/city.component.ts", "src/app/main/id-masters/city/city.component.html", "src/app/main/id-masters/city/city-new/city-new.component.ts", "src/app/main/id-masters/city/city-new/city-new.component.html", "src/app/main/id-masters/product/product-new/product-new.component.ts", "src/app/main/id-masters/product/product-new/product-new.component.html", "src/app/main/id-masters/product/product.component.ts", "src/app/main/id-masters/product/product.component.html", "src/app/main/id-masters/country/country-new/country-new.component.ts", "src/app/main/id-masters/country/country-new/country-new.component.html", "src/app/main/id-masters/country/country.component.ts", "src/app/main/id-masters/country/country.component.html", "src/app/main/id-masters/notification/notification.service.ts", "src/app/main/id-masters/notification/notification-new/notification-new.component.ts", "src/app/main/id-masters/notification/notification-new/notification-new.component.html", "src/app/main/id-masters/notification/notification.component.ts", "src/app/main/id-masters/notification/notification.component.html", "src/app/main/id-masters/users/users.service.ts", "src/app/main/id-masters/users/users-new/users-new.component.ts", "src/app/main/id-masters/users/users-new/users-new.component.html", "src/app/main/id-masters/users/users.component.ts", "src/app/main/id-masters/users/users.component.html", "src/app/main/id-masters/rate-parameter/rate-parameter.service.ts", "src/app/main/id-masters/rate-parameter/rate-parameter-new/rate-parameter-new.component.ts", "src/app/main/id-masters/rate-parameter/rate-parameter-new/rate-parameter-new.component.html", "src/app/main/id-masters/rate-parameter/rate-parameter.component.ts", "src/app/main/id-masters/rate-parameter/rate-parameter.component.html", "src/app/main/id-masters/user-role/user-role.service.ts", "src/app/main/id-masters/user-role/user-role.component.ts", "src/app/main/id-masters/user-role/user-role.component.html", "src/app/main/id-masters/user-role/user-role-new/user-role-new.component.ts", "src/app/main/id-masters/user-role/user-role-new/user-role-new.component.html", "src/app/main/id-masters/id-masters-routing.module.ts", "src/app/main/id-masters/id-masters.module.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CompanyService {\r\n  constructor(private http: HttpClient, private auth: AuthService) {}\r\n\r\n  Get(companyId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/company/' + companyId + '?languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/company', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/company/' + obj.companyId + '?languageId='+ this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(companyId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/company/' + companyId + '?languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>(\r\n      '/overc-idmaster-service/company/' + 'find',\r\n      obj\r\n    );\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { CompanyService } from './company.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrl: './company.component.scss',\r\n})\r\nexport class CompanyComponent {\r\n  companyTable: any[] = [];\r\n  selectedCompany: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: CompanyService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Company - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      \r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'companyName', header: 'Company Name' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'addressLine1', header: 'Address Line 1' },\r\n      { field: 'addressLine2', header: 'Address Line 2' },\r\n      { field: 'addressLine3', header: 'Address Line 3' },\r\n      { field: 'addressLine4', header: 'Address Line 4' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'countryId', header: 'Country ID' },\r\n      { field: 'countryName', header: 'Country Name' },\r\n      { field: 'provinceId', header: 'Province ID' },\r\n      { field: 'provinceName', header: 'Province Name' },\r\n      { field: 'districtId', header: 'District ID' },\r\n      { field: 'districtName', header: 'District Name' },\r\n      { field: 'cityId', header: 'City ID' },\r\n      { field: 'cityName', header: 'City Name' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.companyTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedCompany[this.selectedCompany.length - 1];\r\n    this.selectedCompany.length = 0;\r\n    this.selectedCompany.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCompany[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    console.log(3)\r\n    if (this.selectedCompany.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedCompany[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/company-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedCompany.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedCompany,\r\n        module: 'Company',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCompany[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.companyId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.companyId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.companyTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Company');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Company - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button (click)=\"openCrud('New')\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"companyTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #companyTag [columns]=\"cols\" [value]=\"companyTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCompany[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCompany\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(languageId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/language/' + languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/language', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/language/'+ obj.languageId, obj);\r\n  }\r\n\r\n  Delete(languageId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/language/' + languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/language/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { LanguageService } from './language.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-language-new',\r\n  templateUrl: './language.component.html',\r\n  styleUrl: './language.component.scss'\r\n})\r\nexport class LanguageComponent {\r\n\r\n  languageTable: any[] = [];\r\n  selectedLanguage: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: LanguageService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Language - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.languageTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedLanguage[this.selectedLanguage.length - 1];\r\n    this.selectedLanguage.length = 0;\r\n    this.selectedLanguage.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedLanguage[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedLanguage.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedLanguage[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/language-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedLanguage.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedLanguage, module: 'Language', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedLanguage[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.languageId).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.languageId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.languageTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Language');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Language - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"languageTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #languageTag [columns]=\"cols\" [value]=\"languageTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" sortField=\"createdOn\" [sortOrder]=\"-1\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedLanguage[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedLanguage\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { LanguageService } from '../language.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-language-new',\r\n  templateUrl: './language-new.component.html',\r\n  styleUrl: './language-new.component.scss',\r\n})\r\nexport class LanguageNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: LanguageService, private messageService: MessageService,) { }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [, [Validators.required, Validators.maxLength(50)]],\r\n    languageDescription: [, [Validators.required, Validators.maxLength(100)]],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  btnText = 'Save'\r\n  ngOnInit() {\r\n  \r\n\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\nconsole.log(this.pageToken)\r\n    const dataToSend = ['Setup', 'Language', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.btnText = 'Update';\r\n      console.log(this.btnText)\r\n      this.fill(this.pageToken.line)\r\n    }\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n    this.form.controls.languageId.disable();\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.languageId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/language']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.languageId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/language']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Language - {{ this.pageToken.pageflow }} </p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Language ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"languageId\" [ngClass]=\"form.get('languageId')?.invalid && submitted ? 'invalid' : ''\" class=\"w-100 \" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"languageDescription\" [ngClass]=\"form.get('languageDescription')?.invalid && submitted     ? 'invalid' : ''\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageDescription')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/language\">Cancel</button>\r\n                            <button  class=\"buttom1 bgBlack mx-1\" (click)=\"save()\">  {{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                             <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\"  formControlName=\"updatedOn\" [value]=\"form.controls.updatedOn.value | date: 'dd-MM-yyyy HH:mm'\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                                {{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}\r\n                            </button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsignmentTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(consignmentTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/consignmentType/' + consignmentTypeId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignmentType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/consignmentType/'+ obj.consignmentTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(consignmentTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/consignmentType/' + consignmentTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/consignmentType/find', obj);\r\n  }\r\n}\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ConsignmentTypeService } from './consignment-type.service';\r\n\r\n@Component({\r\n  selector: 'app-consignment-type',\r\n  templateUrl: './consignment-type.component.html',\r\n  styleUrl: './consignment-type.component.scss'\r\n})\r\nexport class ConsignmentTypeComponent {\r\n  \r\n\r\n  consignmentTypeTable: any[] = [];\r\n  selectedConsignmentType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: ConsignmentTypeService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Consignment Type - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'consignmentTypeId', header: 'Consignment Type ID' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'consignmentTypeText', header: 'Consignment Type Name' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.consignmentTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedConsignmentType[this.selectedConsignmentType.length - 1];\r\n    this.selectedConsignmentType.length = 0;\r\n    this.selectedConsignmentType.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignmentType[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedConsignmentType.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedConsignmentType[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/consignmentType-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedConsignmentType.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedConsignmentType, module: 'Consignment Type', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedConsignmentType[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.consignmentTypeId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.consignmentTypeId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.consignmentTypeTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Consignment Type');\r\n  }\r\n\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignment Type - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"ConsignmentTypeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #ConsignmentTypeTag [columns]=\"cols\" [value]=\"consignmentTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedConsignmentType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedConsignmentType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { ConsignmentTypeService } from '../consignment-type.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-consignment-type-new',\r\n  templateUrl: './consignment-type-new.component.html',\r\n  styleUrl: './consignment-type-new.component.scss'\r\n})\r\nexport class ConsignmentTypeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: ConsignmentTypeService, private messageService: MessageService,  private auth: AuthService, private cas: CommonAPIService) {\r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n    ];\r\n    \r\n     }\r\n       \r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    consignmentTypeId: [],\r\n    consignmentTypeText: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    remark: [],\r\n    statusDescription: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    statusId:[\"1\", ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Consignment Type', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.consignmentTypeId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  \r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.consignmentTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/consignmentType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.consignmentTypeId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/consignmentType']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Consignment Type - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \"> Consignment Type ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\"\r\n                                    formControlName=\"consignmentTypeId\"\r\n                                    [ngClass]=\"form.get('consignmentTypeId')?.invalid && form.get('consignmentTypeId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('consignmentTypeId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Consignment Type Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"consignmentTypeText\"\r\n                                    [ngClass]=\"form.get('consignmentTypeText')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \"   />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/consignmentType\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(languageId: string, companyId: string, menuId: string, subMenuId: string, authorizationObjectId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/menu/' + menuId + '?languageId=' +\r\n        this.auth.languageId + authorizationObjectId + companyId + subMenuId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/menu', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/menu/' + obj.menuId + '?authorizationObjectId=' + obj.authorizationObjectId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&subMenuId=' + obj.subMenuId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/menu/' + obj.menuId + '?authorizationObjectId=' + obj.authorizationObjectId + '&companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&subMenuId=' + obj.subMenuId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/menu/find', obj);\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { MenuService } from './menu.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrl: './menu.component.scss'\r\n})\r\nexport class MenuComponent {\r\n\r\n  menuTable: any[] = [];\r\n  selectedMenu: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService, \r\n    private service: MenuService,\r\n    public dialog: MatDialog, \r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    // to pass Breadcrumbs onto the main component\r\n    const dataToSend = ['Setup', 'Menu - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'menuId', header: 'Menu ID'},\r\n      { field: 'companyIdAndDescription', header: 'Company '},\r\n      { field: 'menuName', header: 'Menu Name'},\r\n      { field: 'subMenuName', header: 'Sub Menu Name'},\r\n      { field: 'authorizationObjectValue', header: 'Authorization Object Value'},\r\n      { field: 'authorizationObject', header: 'Authorization Object' },\r\n      { field: 'createdBy', header: 'Created By'},\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target =[\r\n      { field: 'languageIdAndDescription', header: 'Language '},\r\n      { field: 'subMenuId', header: 'Sub Menu ID'},\r\n      { field: 'authorizationObjectId', header: 'Authorization Object ID'},\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.menuTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedMenu[this.selectedMenu.length -1];\r\n    this.selectedMenu.length = 0;\r\n    this.selectedMenu.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedMenu[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedMenu.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedMenu[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/menu-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedMenu.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedMenu, module: 'Menu', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedMenu[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.menuId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.menuTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if(col.format == 'date') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Calling ExcelService \r\n    this.cs.exportAsExcel(exportData, 'Menu');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Menu - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"menuTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Menu Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #menuTag [columns]=\"cols\" [value]=\"menuTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <!-- <th style=\"width: 6rem;\">Actions</th> -->\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedMenu[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedMenu\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <!-- <td style=\"width:6rem;\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" [matMenuTriggerData]=\"{rowData: rowData}\">\r\n                            <i class=\"bi bi-three-dots-vertical\" style=\"font-size: 1.2rem;\"></i> </button>\r\n                    </td> -->\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MenuService } from '../menu.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-new',\r\n  templateUrl: './menu-new.component.html',\r\n  styleUrl: './menu-new.component.scss'\r\n})\r\nexport class MenuNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(\r\n    private cs: CommonServiceService, \r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, \r\n    private router: Router, \r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: MenuService, \r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { }\r\n  \r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageIdAndDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyIdAndDescription: [],\r\n    menuId: [, Validators.required],\r\n    menuName: [, Validators.required],\r\n    subMenuId: [, Validators.required],\r\n    subMenuName: [, Validators.required],\r\n    authorizationObject: [],\r\n    authorizationObjectId: [, Validators.required],\r\n    authorizationObjectValue: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Menu', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.menuId.disable();\r\n      this.form.controls.menuName.disable();\r\n      this.form.controls.subMenuId.disable();\r\n      this.form.controls.subMenuName.disable();\r\n      this.form.controls.authorizationObjectId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.updatedBy.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.menuId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/menu']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created',  key: 'br', detail: res.menuId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/menu']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Menu - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Menu ID</p>\r\n                                <input maxlength=\"50\" formControlName=\"menuId\"\r\n                                    [ngClass]=\"form.get('menuId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\"w-100\" pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('menuId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Menu Name</p>\r\n                                <input maxlength=\"50\" formControlName=\"menuName\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('menuName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('subMenuId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Sub Menu ID</p>\r\n                                <input maxlength=\"50\" formControlName=\"subMenuId\"\r\n                                    [ngClass]=\"form.get('subMenuId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\"w-100\" pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('subMenuId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Sub Menu Name</p>\r\n                                <input maxlength=\"50\" formControlName=\"subMenuName\" class=\" w-100\" pInputText\r\n                                    [ngClass]=\"form.get('subMenuName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('subMenuName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Authorization Object ID</p>\r\n                                <input maxlength=\"50\" formControlName=\"authorizationObjectId\"\r\n                                    [ngClass]=\"form.get('authorizationObjectId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\"w-100\" pInputText pKeyFilter=\"num\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('authorizationObjectId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Authorization Object Value</p>\r\n                                <input maxlength=\"50\" formControlName=\"authorizationObjectValue\" class=\" w-100\"\r\n                                    pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Authorization Object</p>\r\n                                <input maxlength=\"100\" formControlName=\"authorizationObject\" class=\" w-100\" pInputText\r\n                                    pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/menu\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatusService {\r\n\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(statusId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/status/' + statusId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/status', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/status/'+ obj.statusId +'?languageId='+ this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(statusId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/status/' + statusId +'?languageId='+ this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/status/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { StatusService } from '../status.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-status-new',\r\n  templateUrl: './status-new.component.html',\r\n  styleUrl: './status-new.component.scss',\r\n})\r\nexport class StatusNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: StatusService,  private cas: CommonAPIService,  private auth: AuthService, private messageService: MessageService,) { }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    statusId: [],\r\n    statusDescription: [,  Validators.required],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    languageId: [this.auth.languageId,  Validators.required],\r\n    languageDescription: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Status', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n  languageIdList: any[] = [];\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res:any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.statusId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/status']);\r\n          this.spin.hide();\r\n        }, error: (err:any) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res:any) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.statusId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/status']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err:any) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Status - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"statusId\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('statusId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText  formControlName=\"statusDescription\" class=\" w-100\" pInputText placeholder=\"Enter\"\r\n                                [ngClass]=\"form.get('statusDescription')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('statusDescription')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/status\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { StatusService } from './status.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrl: './status.component.scss'\r\n})\r\n\r\n\r\nexport class StatusComponent {\r\n\r\n  statusTable: any[] = [];\r\n  selectedStatus: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: StatusService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Status - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'statusDescription', header: 'Description' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.statusTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedStatus[this.selectedStatus.length - 1];\r\n  this.selectedStatus.length = 0;\r\n  this.selectedStatus.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedStatus[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedStatus.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedStatus[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/status-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedStatus.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedStatus, module: 'Status', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedStatus[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.statusId).subscribe({\r\n    next: (res: any) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.statusId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err: any) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.statusTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'Status');\r\n}\r\n}\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Status - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"statusTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #statusTag [columns]=\"cols\" [value]=\"statusTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedStatus[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedStatus\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(currencyId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/currency/' + currencyId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/currency', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/currency/'+ obj.currencyId, obj);\r\n  }\r\n\r\n  Delete(currencyId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/currency/' + currencyId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/currency/find', obj);\r\n  }\r\n}\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CurrencyService } from '../currency.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-currency-new',\r\n  templateUrl: './currency-new.component.html',\r\n  styleUrl: './currency-new.component.scss'\r\n})\r\nexport class CurrencyNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: CurrencyService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService) { \r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n      \r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    currencyId: [, Validators.required],\r\n    currencyDescription: [,  Validators.required],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    statusDescription: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Currency', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n        this.form.controls.currencyId.disable();\r\n    }\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.currencyId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/currency']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.currencyId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/currency']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Currency - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Currency ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"currencyId\" [ngClass]=\"form.get('currencyId')?.invalid && form.get('currencyId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('currencyId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Currency Description</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"currencyDescription\" class=\" w-100\" pInputText placeholder=\"Enter\"\r\n                                [ngClass]=\"form.get('currencyDescription')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('currencyId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>  \r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/currency\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n", "import { Component } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CurrencyService } from './currency.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-currency',\r\n  templateUrl: './currency.component.html',\r\n  styleUrl: './currency.component.scss'\r\n})\r\nexport class CurrencyComponent {\r\n\r\n  \r\n  currencyTable: any[] = [];\r\n  selectedCurrency: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: CurrencyService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Currency - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'currencyId', header: ' Currency ID' },\r\n      { field: 'currencyDescription', header: 'Description' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.currencyTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedCurrency[this.selectedCurrency.length - 1];\r\n  this.selectedCurrency.length = 0;\r\n  this.selectedCurrency.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCurrency[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedCurrency.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedCurrency[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/currency-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedCurrency.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedCurrency, module: 'Currency', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCurrency[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.currencyId).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.currencyId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.currencyTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'Currency');\r\n}\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Currency - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"currencyTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #currencyTag [columns]=\"cols\" [value]=\"currencyTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCurrency[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCurrency\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { CompanyService } from '../company.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-company-new',\r\n  templateUrl: './company-new.component.html',\r\n  styleUrl: './company-new.component.scss',\r\n})\r\nexport class CompanyNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  status: any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: CompanyService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    addressLine1: [, Validators.required],\r\n    addressLine2: [],\r\n    addressLine3: [],\r\n    addressLine4: [],\r\n    cityId: [],\r\n    cityName: [],\r\n    companyId: [],\r\n    companyName: [, Validators.required],\r\n    countryId: [],\r\n    countryName: [],\r\n    districtId: [],\r\n    districtName: [],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    provinceId: [],\r\n    provinceName: [],\r\n    statusId: ['1', ],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedOn: ['', ],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Company', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.companyId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/company']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.companyId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/company']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n  <div class=\"d-flex justify-content-between align-items-center\">\r\n    <p class=\"componentHeader f600 mb-0\">\r\n      Company- {{ this.pageToken.pageflow }}\r\n    </p>\r\n  </div>\r\n  <div class=\"w-75 mt-4 mx-auto\">\r\n    <form [formGroup]=\"form\">\r\n      <p-stepper [(activeStep)]=\"active\">\r\n        <p-stepperPanel>\r\n          <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n            <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n              <div class=\"d-flex justify-content-center align-items-center\">\r\n                <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">1</p>\r\n                <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n              </div>\r\n              <div>\r\n                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n            <div class=\"row scrollNew\">\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                    getErrorMessage()}}</small></mat-error>\r\n              </div>\r\n\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Company ID</p>\r\n                <input type=\"text\" formControlName=\"companyId\" [ngClass]=\"\r\n                    form.get('companyId')?.invalid &&\r\n                    form.get('companyId')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <!-- <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error> -->\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0 required\">\r\n                  Company Name\r\n                </p>\r\n                <input type=\"text\" [ngClass]=\"form.get('companyName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" \r\n                formControlName=\"companyName\" [ngClass]=\"\r\n                    form.get('companyName')?.invalid &&\r\n                    form.get('companyName')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <mat-error *ngIf=\"errorHandling('companyName')\" class=\"text-danger\"><small>{{ getErrorMessage()\r\n                    }}</small></mat-error>\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0 required\">\r\n                  Address Line 1\r\n                </p>\r\n                <input type=\"text\" [ngClass]=\"form.get('addressLine1')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"  \r\n                formControlName=\"addressLine1\" [ngClass]=\"\r\n                    form.get('addressLine1')?.invalid &&\r\n                    form.get('addressLine1')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                <mat-error *ngIf=\"errorHandling('addressLine1')\" class=\"text-danger\"><small>{{ getErrorMessage()\r\n                    }}</small></mat-error>\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">\r\n                  Address Line 2\r\n                </p>\r\n                <input type=\"text\" formControlName=\"addressLine2\" [ngClass]=\"\r\n                    form.get('addressLine2')?.invalid &&\r\n                    form.get('addressLine2')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">\r\n                  Address Line 3\r\n                </p>\r\n                <input type=\"text\" formControlName=\"addressLine3\" [ngClass]=\"\r\n                    form.get('addressLine3')?.invalid &&\r\n                    form.get('addressLine3')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">\r\n                  Address Line 4\r\n                </p>\r\n                <input type=\"text\" formControlName=\"addressLine4\" [ngClass]=\"\r\n                    form.get('addressLine4')?.invalid &&\r\n                    form.get('addressLine4')?.dirty\r\n                      ? 'invalid'\r\n                      : ''\r\n                  \" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"\r\n                  placeholder=\"Select \" />\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n              <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/company\">\r\n                Cancel\r\n              </button>\r\n              <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </p-stepperPanel>\r\n        <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n          <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n            <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n              <div class=\"d-flex justify-content-center align-items-center\">\r\n                <p class=\"circle mb-0\" [ngClass]=\"\r\n                    active == 2 ? 'borderCircle' : 'disabled text-muted'\r\n                  \">\r\n                  2\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                  Admin\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                <input type=\"text\" formControlName=\"createdBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                <input type=\"text\" formControlName=\"createdOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                <input type=\"text\" formControlName=\"updatedBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                <input type=\"text\" formControlName=\"updatedOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n              <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">\r\n                Back\r\n              </button>\r\n              <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </p-stepperPanel>\r\n      </p-stepper>\r\n    </form>\r\n  </div>\r\n</div>", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { SubProductService } from './sub-product.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-product',\r\n  templateUrl: './sub-product.component.html',\r\n  styleUrl: './sub-product.component.scss',\r\n})\r\nexport class SubProductComponent {\r\n  subProductTable: any[] = [];\r\n  selectedSubProduct: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: SubProductService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Sub Product - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'subProductId', header: 'Sub Product ID' },\r\n      { field: 'subProductName', header: 'Sub Product Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.subProductTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedSubProduct[this.selectedSubProduct.length - 1];\r\n    this.selectedSubProduct.length = 0;\r\n    this.selectedSubProduct.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedSubProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedSubProduct.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedSubProduct[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/subProduct-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedSubProduct.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedSubProduct,\r\n        module: 'Sub Product',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedSubProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.subProductId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.subProductTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'SubProduct');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Sub Product - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n        <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n            <p-inputIcon styleClass=\"pi pi-search\" />\r\n            <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                (input)=\"subProductTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n        </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\"\r\n                [showIcon]=\"true\" />\r\n            <p-dropdown class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #subProductTag [columns]=\"cols\" [value]=\"subProductTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedSubProduct[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedSubProduct\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                        </ng-container>\r\n                        <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy HH:mm' }}\r\n                        </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { SubProductService } from '../sub-product.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-sub-product-new',\r\n  templateUrl: './sub-product-new.component.html',\r\n  styleUrl: './sub-product-new.component.scss',\r\n})\r\nexport class SubProductNewComponent {\r\n  active: number | undefined = 0;\r\n  status:any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: SubProductService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [],\r\n    subProductName: [, Validators.required],\r\n    remark: [],\r\n    statusId: ['1',],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedOn: ['', ],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Sub Product', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.subProductId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/subProduct']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.subProductId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/subProduct']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Sub Product - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"subProductId\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Sub Product Name</p>\r\n                                <input maxlength=\"100\" pInputText  formControlName=\"subProductName\"\r\n                                [ngClass]=\"form.get('subProductName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \" />\r\n\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/subProduct\">Cancel</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(loadTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/loadType/' + loadTypeId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/loadType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/loadType/'+ obj.loadTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(loadTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/loadType/' + loadTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/loadType/find', obj);\r\n  }\r\n}\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { LoadTypeService } from './load-type.service';\r\n\r\n@Component({\r\n  selector: 'app-load-type',\r\n  templateUrl: './load-type.component.html',\r\n  styleUrl: './load-type.component.scss'\r\n})\r\nexport class LoadTypeComponent {\r\n\r\n  \r\n  loadTypeTable: any[] = [];\r\n  selectedLoadType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: LoadTypeService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Load Type - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'loadTypeId', header: 'Load Type ID' },\r\n      { field: 'loadTypeText', header: 'Load Type Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.loadTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedLoadType[this.selectedLoadType.length - 1];\r\n  this.selectedLoadType.length = 0;\r\n  this.selectedLoadType.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedLoadType[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedLoadType.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedLoadType[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/loadType-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedLoadType.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedLoadType, module: 'Load Type', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedLoadType[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines.loadTypeId).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.loadTypeId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.loadTypeTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'Load Type');\r\n}\r\n}\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Load Type - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"loadTypeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #loadTypeTag [columns]=\"cols\" [value]=\"loadTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedLoadType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedLoadType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n", "import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function noLeadingTrailingSpacesValidator(): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    if (control.value && (control.value as string).trim() !== control.value) {\r\n      return { 'leadingTrailingSpaces': true };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadTypeService } from '../load-type.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { noLeadingTrailingSpacesValidator } from '../../../../config/spaceValidator';\r\n\r\n@Component({\r\n  selector: 'app-load-type-new',\r\n  templateUrl: './load-type-new.component.html',\r\n  styleUrl: './load-type-new.component.scss'\r\n})\r\nexport class LoadTypeNewComponent {\r\n\r\n\r\n  active: number | undefined = 0;\r\n  status: any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: LoadTypeService, private messageService: MessageService, private cas: CommonAPIService,\r\n    private auth: AuthService) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    loadTypeId: [],\r\n    loadTypeText: [, [Validators.required, noLeadingTrailingSpacesValidator()]],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    statusDescription: [],\r\n    createdOn: ['',],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['',],\r\n    referenceField1: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark: [],\r\n    statusId: [\"1\",],\r\n\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Load Type', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.loadTypeId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.loadTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/loadType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.loadTypeId + ' has been created successfully' });\r\n            this.router.navigate(['/main/idMaster/loadType']);\r\n            this.spin.hide();\r\n          }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Load Type - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Load Type ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"loadTypeId\"\r\n                                    [ngClass]=\"form.get('loadTypeId')?.invalid && form.get('loadTypeId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" placeholder=\"Enter\" />\r\n                                <!-- <mat-error *ngIf=\"errorHandling('loadTypeId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error> -->\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Load Type Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"loadTypeText\" class=\" w-100\"\r\n                                    pInputText placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('loadTypeText')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select\" filter=\"true\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/loadType\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTypeService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(serviceTypeId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/serviceType/' + serviceTypeId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/serviceType', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/serviceType/'+ obj.serviceTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(serviceTypeId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/serviceType/' + serviceTypeId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/serviceType/find', obj);\r\n  }\r\n\r\n}\r\n", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ServiceTypeService } from '../service-type/service-type.service';\r\n\r\n@Component({\r\n  selector: 'app-service-type',\r\n  templateUrl: './service-type.component.html',\r\n  styleUrl: './service-type.component.scss'\r\n})\r\nexport class ServiceTypeComponent {\r\n  \r\n  serviceTypeTable: any[] = [];\r\n  selectedServiceType: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: ServiceTypeService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Service Type - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'serviceTypeId', header: 'Service Type ID' },\r\n      { field: 'serviceTypeText', header: 'Service Type Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'statusDescription', header: 'Status ' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.serviceTypeTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedServiceType[this.selectedServiceType.length - 1];\r\n    this.selectedServiceType.length = 0;\r\n    this.selectedServiceType.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedServiceType[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedServiceType.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedServiceType[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/serviceType-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedServiceType.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedServiceType, module: 'Service Type', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedServiceType[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.serviceTypeId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.serviceTypeId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.serviceTypeTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Service Type');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Service Type - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"ServiceTypeTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #ServiceTypeTag [columns]=\"cols\" [value]=\"serviceTypeTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedServiceType[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedServiceType\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { ServiceTypeService } from '../service-type.service';\r\n\r\n@Component({\r\n  selector: 'app-service-type-new',\r\n  templateUrl: './service-type-new.component.html',\r\n  styleUrl: './service-type-new.component.scss'\r\n})\r\nexport class ServiceTypeNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: ServiceTypeService, private messageService: MessageService,  private auth: AuthService, private cas: CommonAPIService) {\r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n    ];\r\n    \r\n     }\r\n       \r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    serviceTypeId: [],\r\n    serviceTypeText: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    remark: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    statusId:[\"1\", ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Service Type', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.serviceTypeId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  \r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.serviceTypeId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/serviceType']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.serviceTypeId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/serviceType']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Service Type - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Service Type ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"serviceTypeId\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('serviceTypeId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Service Type Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"serviceTypeText\" class=\" w-100\"\r\n                                    pInputText placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('serviceTypeText')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('serviceTypeText')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select\" filter=\"true\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/serviceType\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModuleService {\r\n\r\n    constructor(private http: HttpClient, private auth: AuthService) {}\r\n  \r\n    Get(moduleId: string) {\r\n      return this.http.get<any>('/overc-idmaster-service/module/modulelist/' + moduleId + '?languageId=' + this.auth.languageId + '&companyId=' + this.auth.companyId);\r\n    }\r\n  \r\n    Create(obj: any) {\r\n      return this.http.post<any>('/overc-idmaster-service/module/bulk', obj);\r\n    }\r\n  \r\n    Update(obj: any) {\r\n      return this.http.patch<any>('/overc-idmaster-service/module/' + obj[0].moduleId + '?languageId='+ this.auth.languageId + '&companyId=' + this.auth.companyId, obj);\r\n    }\r\n  \r\n    Delete(moduleId: string) {\r\n      return this.http.delete<any>('/overc-idmaster-service/module/' + moduleId + '?languageId=' + this.auth.languageId  + '&companyId=' + this.auth.companyId);\r\n    }\r\n  \r\n    search(obj: any) {\r\n      return this.http.post<any>('/overc-idmaster-service/module/find',obj);\r\n    }\r\n  }\r\n  \r\n", "import { Component } from '@angular/core';\r\nimport { ModuleService } from './module.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-module',\r\n  templateUrl: './module.component.html',\r\n  styleUrl: './module.component.scss'\r\n})\r\nexport class ModuleComponent {\r\n  moduleTable: any[] = [];\r\n  selectedModule: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ModuleService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Module - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [     \r\n      { field: 'moduleId', header: 'Module ID' },\r\n      { field: 'moduleDescription', header: 'Description' },\r\n      { field: 'companyIdAndDescription', header: 'Company' },\r\n      { field: 'menuName', header: 'Menu' },\r\n      { field: 'subMenuName', header: 'Sub Menu' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'menuId', header: 'Menu ID' },\r\n      { field: 'subMenuId', header: 'Sub Menu ID' },\r\n      { field: 'languageIdAndDescription', header: 'Language' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        res = this.cs.removeDuplicatesFromArrayList(res, 'moduleId')\r\n        this.moduleTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedModule[this.selectedModule.length - 1];\r\n    this.selectedModule.length = 0;\r\n    this.selectedModule.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result:any) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedModule[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    console.log(3)\r\n    if (this.selectedModule.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedModule[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/module-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedModule.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedModule,\r\n        module: 'Module',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedModule[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.moduleId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.moduleId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.moduleTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Module Id');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Module - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button (click)=\"openCrud('New')\" type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"moduleTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #moduleTag [columns]=\"cols\" [value]=\"moduleTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedModule[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedModule\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { ModuleService } from '../module.service';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { MenuService } from '../../menu/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-module-new',\r\n  templateUrl: './module-new.component.html',\r\n  styleUrl: './module-new.component.scss'\r\n})\r\nexport class ModuleNewComponent {\r\n  active: number | undefined = 0;\r\n\r\n  moduleTable: any[] = [];\r\n  selectedModule: any[] = [];\r\n  cols: any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ModuleService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService,\r\n    private menuService: MenuService,\r\n  ) {}\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    companyId: [this.auth.companyId,],\r\n    languageId: [this.auth.languageId,],\r\n    addModule: [],\r\n    companyIdAndDescription: [],\r\n    createUpdate: [true,],\r\n    createdBy: [],\r\n    createdOn: ['', ],\r\n    delete: [true,],\r\n    deletionIndicator: [],\r\n    languageIdAndDescription: [],\r\n    menuId: [, Validators.required],\r\n    menuName: [],\r\n    moduleDescription: [, Validators.required],\r\n    moduleId: [, Validators.required],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    subMenuId: [],\r\n    statusId: [],\r\n    statusDescription: [],\r\n    subMenuName: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    view: [true,],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Module', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.moduleId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subMenuIdList: any[] = [];\r\n  menuIdList: any[] = [];\r\n  \r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.menu.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.menuIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.menu.key);\r\n      this.menuIdList = this.cs.removeDuplicatesFromArrayList(this.menuIdList, 'value');\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.service.Get(line.moduleId).subscribe({next: (res) =>{\r\n      if(res){\r\n        this.form.patchValue(res[0]);\r\n        this.patchTableUpdate(res);        \r\n      }\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n  }\r\n\r\n  patchTableUpdate(res: any){\r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.menuId = [this.form.controls.menuId.value];\r\n    this.menuService.search(obj).subscribe({next: (menures) =>{\r\n      this.moduleTable = [];\r\n      this.selectedModule = [];\r\n     \r\n      let combined = this.cs.removeDuplicateObj(res, menures);\r\n      this.moduleTable = combined;\r\n      this.selectedModule  = res;\r\n      \r\n      this.cols = [ \r\n        { field: 'menuId', header: 'Menu ID'},\r\n        { field: 'menuName', header: 'Menu Name'},\r\n        { field: 'subMenuId', header: 'Sub Menu ID'},\r\n        { field: 'subMenuName', header: 'Sub Menu Name'}\r\n      ];\r\n\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n  }\r\n\r\n  space(event: any) {\r\n    if (event.target.selectionStart === 0 && event.code === 'Space') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.selectedModule.forEach(x => {\r\n      x.moduleDescription = this.form.controls.moduleDescription.value;\r\n      x.moduleId = this.form.controls.moduleId.value;\r\n    })\r\n  \r\n    \r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.selectedModule).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res[0].moduleId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/module']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.selectedModule).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res[0].moduleId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/module']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n  menuIdChanged(event:any){ \r\n    let obj: any = {};\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.menuId = [event.value];\r\n    this.menuService.search(obj).subscribe({next: (res) =>{\r\n      this.moduleTable = [];\r\n      this.selectedModule = [];\r\n     this.moduleTable = res;\r\n     this.selectedModule = res;\r\n      \r\n      this.cols = [ \r\n        { field: 'menuId', header: 'Menu ID'},\r\n        { field: 'menuName', header: 'Menu Name'},\r\n        { field: 'subMenuId', header: 'Sub Menu ID'},\r\n        { field: 'subMenuName', header: 'Sub Menu Name'}\r\n      ];\r\n\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },})\r\n\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      <p class=\"componentHeader f600 mb-0\">\r\n        Module- {{ this.pageToken.pageflow }}\r\n      </p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n      <form [formGroup]=\"form\">\r\n        <p-stepper [(activeStep)]=\"active\">\r\n          <p-stepperPanel>\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">1</p>\r\n                  <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                  <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                    [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                  <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                      getErrorMessage()}}</small></mat-error>\r\n                </div>\r\n  \r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                  <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                  [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                </div>\r\n\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                    <p class=\"formControlLabel f600 textBlack mb-0 required\">Menu ID</p>\r\n                    <p-dropdown [options]=\"menuIdList\" placeholder=\"Select\" filter=\"true\" (onChange)=\"menuIdChanged($event)\" formControlName=\"menuId\" appendTo=\"body\"\r\n                    [ngClass]=\"form.get('menuId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                    [style]=\"{'width': '100%'}\" [panelStyle]=\"{'width':'100%'}\" />\r\n                    <mat-error *ngIf=\"errorHandling('menuId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                  </div>\r\n\r\n                  <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                    <p class=\"formControlLabel f600 textBlack mb-0 \">Module ID</p>\r\n                    <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"moduleId\" placeholder=\"Enter\"\r\n                    [ngClass]=\"form.get('moduleId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                    <mat-error *ngIf=\"errorHandling('moduleId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                </div>\r\n\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0 required\"> Module Description</p>\r\n                  <input maxlength=\"100\" pInputText (keydown)=\"space($event)\" formControlName=\"moduleDescription\" class=\"w-100\" placeholder=\"Enter\" \r\n                  [ngClass]=\"form.get('moduleDescription')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                  <mat-error *ngIf=\"errorHandling('moduleDescription')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n              </div>\r\n              </div>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/module\">\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"nextCallback.emit()\">\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n\r\n          <p-stepperPanel>\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p *ngIf=\"active == 0\" class=\"circle borderCircle mb-0\">2</p>\r\n                  <img *ngIf=\"active != 0\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\" />\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600 textBlack\">Lines</p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n              <p-table #moduleTag [columns]=\"cols\" [value]=\"moduleTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"multiple\" [(selection)]=\"selectedModule\" scrollHeight=\"calc(100vh - 27.8rem)\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" ></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedModule[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                            <p-tableCheckbox class=\"pl-3\" [value]=\"rowData\" />\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/module\">\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                  {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n\r\n          <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n            <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n              <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                <div class=\"d-flex justify-content-center align-items-center\">\r\n                  <p class=\"circle mb-0\" [ngClass]=\"\r\n                      active == 2 ? 'borderCircle' : 'disabled text-muted'\r\n                    \">\r\n                    2\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                    Admin\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n              <div class=\"row\">\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                  <input type=\"text\" formControlName=\"createdBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                  <input type=\"text\" formControlName=\"createdOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                  <input type=\"text\" formControlName=\"updatedBy\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n                <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                  <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                  <input type=\"text\" formControlName=\"updatedOn\" class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">\r\n                  Back\r\n                </button>\r\n                <button\r\n                  class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">\r\n                  {{ this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}\r\n                </button>\r\n              </div>\r\n            </ng-template>\r\n          </p-stepperPanel>\r\n        </p-stepper>\r\n      </form>\r\n    </div>\r\n  </div>", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ProvinceService } from './province.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n@Component({\r\n  selector: 'app-province',\r\n  templateUrl: './province.component.html',\r\n  styleUrl: './province.component.scss'\r\n})\r\nexport class ProvinceComponent {\r\n\r\n  provinceTable: any[] = [];\r\n  selectedProvince: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ProvinceService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'Province - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'provinceId', header: 'Province ID' },\r\n      { field: 'provinceName', header: 'Province Name' },\r\n      { field: 'countryName', header: 'Country ' },\r\n      { field: 'companyName', header: 'Company ' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'countryId', header: 'Country ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.provinceTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedProvince[this.selectedProvince.length -1];\r\n    this.selectedProvince.length = 0;\r\n    this.selectedProvince.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProvince[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedProvince.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedProvince[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/province-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedProvince.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedProvince, module: 'Province', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProvince[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.provinceId + lines.languageId + lines.countryId + lines.companyId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.provinceTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'Province');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Province - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"provinceTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Province Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #provinceTag [columns]=\"cols\" [value]=\"provinceTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedProvince[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedProvince\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ProvinceService } from '../province.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n@Component({\r\n  selector: 'app-province-new',\r\n  templateUrl: './province-new.component.html',\r\n  styleUrl: './province-new.component.scss'\r\n})\r\nexport class ProvinceNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status:any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ProvinceService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { \r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    countryId: [, Validators.required],\r\n    countryName: [],\r\n    provinceId: [, Validators.required],\r\n    provinceName: [, Validators.required],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    statusId: [\"1\", Validators.required],\r\n    statusDescription: [],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Province', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n    // this.form.controls.countryId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  countryIdList: any[] = [];\r\n  provinceIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.countryIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.country.key);\r\n      this.provinceIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.province.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail:  res.provinceId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/province']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.provinceId +' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/province']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Province - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" filter=\"true\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('languageId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" filter=\"true\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country</p>\r\n                                <p-dropdown [options]=\"countryIdList\" formControlName=\"countryId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" filter=\"true\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\"\r\n                                    [ngClass]=\"form.get('countryId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Province ID</p>\r\n                                <input formControlName=\"provinceId\" maxlength=\"50\" \r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('provinceName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Province Name</p>\r\n                                <input  pInputText formControlName=\"provinceName\" maxlength=\"50\" class=\" w-100\"\r\n                                [ngClass]=\"form.get('provinceName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    placeholder=\"Enter\" />\r\n                                    <mat-error *ngIf=\"errorHandling('provinceName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div> \r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/province\">Cancel</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistrictService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(districtId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/district/' + districtId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/district', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/district/'+ obj.districtId +'?languageId='+ this.auth.languageId \r\n      +'&companyId='+ this.auth.companyId + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/district/' + obj.districtId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId\r\n      + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/district/find', obj);\r\n  }\r\n}\r\n\r\n\r\n ", "import { Component } from '@angular/core';\r\nimport { DistrictService } from './district.service';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-district',\r\n  templateUrl: './district.component.html',\r\n  styleUrl: './district.component.scss'\r\n})\r\nexport class DistrictComponent {\r\n\r\n  \r\n  districtTable: any[] = [];\r\n  selectedDistrict: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: DistrictService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'District - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'districtId', header: 'District ID' },\r\n      { field: 'districtName', header: 'District Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'countryName', header: 'Country' },\r\n      { field: 'provinceName', header: 'Province' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'countryId', header: 'Country Id' },\r\n      { field: 'provinceId', header: 'Province Id' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.districtTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedDistrict[this.selectedDistrict.length - 1];\r\n  this.selectedDistrict.length = 0;\r\n  this.selectedDistrict.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedDistrict[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedDistrict.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedDistrict[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/district-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedDistrict.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedDistrict, module: 'District', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedDistrict[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.districtId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.districtTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'District');\r\n}\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">District - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"districtTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #districtTag [columns]=\"cols\" [value]=\"districtTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedDistrict[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedDistrict\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { DistrictService } from '../district.service';\r\nimport { ProvinceService } from '../../province/province.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-district-new',\r\n  templateUrl: './district-new.component.html',\r\n  styleUrl: './district-new.component.scss'\r\n})\r\nexport class DistrictNewComponent {\r\n\r\n  \r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: DistrictService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService, private provinceService: ProvinceService) { \r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    districtId: [, Validators.required],\r\n    districtName: [,  Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription:[],\r\n    companyId:[this.auth.companyId, Validators.required],\r\n    companyName:[],\r\n    countryId:[, Validators.required],\r\n    countryName:[],\r\n    provinceId:[, Validators.required],\r\n    provinceName:[],\r\n    statusDescription:[],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark:[],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'District', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.districtId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  countryIdList: any[] =[];\r\n  provinceIdList: any[] =[];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.countryIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.country.key);\r\n      this.provinceIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.province.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res: any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.districtId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/district']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.districtId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/district']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n  districtChanged(){\r\n\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.countryId = [this.form.controls.countryId.value]\r\n\r\n    this.provinceIdList = [];\r\n    this.spin.show();\r\n    this.provinceService.search(obj).subscribe({next: (result) => {\r\n      this.provinceIdList = this.cas.foreachlist(result, {key: 'provinceId', value: 'provinceName'});\r\n      this.spin.hide();\r\n    }, error: (err) =>{\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    }})\r\n  }\r\n}\r\n\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">District - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n\r\n                              \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country</p>\r\n                                <p-dropdown [options]=\"countryIdList\"  placeholder=\"Select\" filter=\"true\"  formControlName=\"countryId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\"  [panelStyle]=\"{'width':'100%'}\" (onChange)=\"districtChanged()\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Province</p>\r\n                                <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"provinceId\" appendTo=\"body\"\r\n                                  [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                              \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">District ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"districtId\" [ngClass]=\"form.get('districtId')?.invalid && form.get('districtId')?.dirty ? 'invalid' : ''\" class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('districtId')\" class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">District Name</p>\r\n                                <input maxlength=\"100\" pInputText  formControlName=\"districtName\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div> \r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\" formControlName=\"statusId\"  placeholder=\"Select \" />\r\n                            </div> \r\n                            \r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Remark</p>\r\n                                <input maxlength=\"2000\"  formControlName=\"remark\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/district\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\"> <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\"  (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\"  formControlName=\"createdOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\" class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { CityService } from './city.service';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrl: './city.component.scss'\r\n})\r\nexport class CityComponent {\r\n\r\n  cityTable: any[] = [];\r\n  selectedCity: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router,\r\n     private path: PathNameService, private service: CityService,\r\n     public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'City - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'cityId', header: ' City ID' },\r\n      { field: 'cityName', header: 'City Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'countryName', header: 'Country' },\r\n      { field: 'provinceName', header: 'Province' },\r\n      { field: 'districtName', header: 'District' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language Id' },\r\n      { field: 'companyId', header: 'Company Id' },\r\n      { field: 'countryId', header: 'Country Id' },\r\n      { field: 'provinceId', header: 'Province Id' },\r\n      { field: 'districtId', header: 'District Id' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'statusId', header: 'Status Id' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.cityTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nonChange() {\r\n  const choosen = this.selectedCity[this.selectedCity.length - 1];\r\n  this.selectedCity.length = 0;\r\n  this.selectedCity.push(choosen);\r\n}\r\n\r\ncustomTable() {\r\n  const dialogRef = this.dialog.open(CustomTableComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '80%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { target: this.cols, source: this.target,},\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCity[0]);\r\n    }\r\n  });\r\n}\r\n\r\nopenCrud(type: any = 'New', linedata: any = null): void {\r\n  if (this.selectedCity.length === 0 && type != 'New') {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n  } else {\r\n    let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedCity[0] : linedata, pageflow: type });\r\n    this.router.navigate(['/main/idMaster/city-new/' + paramdata]);\r\n  }\r\n}\r\n\r\ndeleteDialog() {\r\n  if (this.selectedCity.length === 0) {\r\n    this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    return;\r\n  }\r\n  const dialogRef = this.dialog.open(DeleteComponent, {\r\n    disableClose: true,\r\n    width: '70%',\r\n    maxWidth: '82%',\r\n    position: { top: '6.5%', left: '30%' },\r\n    data: { line: this.selectedCity, module: 'City', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n  });\r\n\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if (result) {\r\n      this.deleterecord(this.selectedCity[0]);\r\n    }\r\n  });\r\n}\r\ndeleterecord(lines: any) {\r\n  this.spin.show();\r\n  this.service.Delete(lines).subscribe({\r\n    next: (res) =>{\r\n      this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.cityId + ' deleted successfully' });\r\n      this.spin.hide();\r\n      this.initialCall();\r\n    },error: (err) => {\r\n      this.cs.commonerrorNew(err);\r\n      this.spin.hide();\r\n    }\r\n  })\r\n}\r\n\r\ndownloadExcel() {\r\n  const exportData = this.cityTable.map(item => {\r\n    const exportItem: any = {};\r\n   this.cols.forEach(col => {\r\n    if(col.format == 'date'){\r\n      exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n    }else{\r\n      exportItem[col.field] = item[col.field];\r\n    }\r\n     \r\n    });\r\n    return exportItem;\r\n  });\r\n\r\n  // Call ExcelService to export data to Excel\r\n this.cs.exportAsExcel(exportData, 'City');\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">City - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"cityTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #cityTag [columns]=\"cols\" [value]=\"cityTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCity[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCity\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n\r\n\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CityService } from '../city.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { ProvinceService } from '../../province/province.service';\r\nimport { DistrictService } from '../../district/district.service';\r\n\r\n@Component({\r\n  selector: 'app-city-new',\r\n  templateUrl: './city-new.component.html',\r\n  styleUrl: './city-new.component.scss'\r\n})\r\nexport class CityNewComponent {\r\n\r\n  \r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: CityService, private messageService: MessageService,private cas: CommonAPIService,\r\n    private auth: AuthService, private provinceService: ProvinceService, private districtService: DistrictService) { \r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n        ];\r\n    }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    cityId:[, Validators.required],\r\n    cityName:[, Validators.required],\r\n    districtId: [, Validators.required],\r\n    districtName: [],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription:[],\r\n    companyId:[this.auth.companyId, Validators.required],\r\n    companyName:[],\r\n    countryId:[, Validators.required],\r\n    countryName:[],\r\n    provinceId:[, Validators.required],\r\n    provinceName:[],\r\n    statusDescription:[],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    remark:[],\r\n    statusId:[\"1\",],\r\n   \r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'City', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.cityId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.provinceId.disable();\r\n      this.form.controls.districtId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  countryIdList: any[] =[];\r\n  provinceIdList: any[] =[];\r\n  districtIdList: any[] =[];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.country.url,\r\n      this.cas.dropdownlist.setup.province.url,\r\n      this.cas.dropdownlist.setup.district.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      console.log(this.cas.dropdownlist.setup.language.key);\r\n      console.log(this.cas.dropdownlist.setup.company.key);\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.countryIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.country.key);\r\n      this.provinceIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.province.key);\r\n      this.districtIdList = this.cas.forLanguageFilter(results[4], this.cas.dropdownlist.setup.district.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res: any) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.cityId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/city']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.cityId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/city']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  countryChanged(){\r\n\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.countryId = [this.form.controls.countryId.value]\r\n\r\n    this.provinceIdList = [];\r\n    this.spin.show();\r\n    this.provinceService.search(obj).subscribe({next: (result) => {\r\n      this.provinceIdList = this.cas.foreachlist(result, {key: 'provinceId', value: 'provinceName'});\r\n      this.spin.hide();\r\n    }, error: (err) =>{\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    }})\r\n  }\r\n  provinceChanged(){\r\n\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.countryId = [this.form.controls.countryId.value]\r\n    obj.provinceId = [this.form.controls.provinceId.value]\r\n\r\n\r\n    this.districtIdList = [];\r\n    this.spin.show();\r\n    this.districtService.search(obj).subscribe({next: (result) => {\r\n      this.districtIdList = this.cas.foreachlist(result, {key: 'districtId', value: 'districtName'});\r\n      this.spin.hide();\r\n    }, error: (err) =>{\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    }})\r\n  }\r\n}\r\n\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">City - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country</p>\r\n                                <p-dropdown [options]=\"countryIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"countryId\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" (onChange)=\"countryChanged()\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Province</p>\r\n                                <p-dropdown [options]=\"provinceIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"provinceId\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" (onChange)=\"provinceChanged()\" />\r\n                                <mat-error *ngIf=\"errorHandling('provinceId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">District</p>\r\n                                <p-dropdown [options]=\"districtIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"districtId\"\r\n                                    appendTo=\"body\"\r\n                                    [ngClass]=\"form.get('districtId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('districtId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">City ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"cityId\"\r\n                                    [ngClass]=\"form.get('cityId')?.invalid && form.get('cityId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('cityId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">City Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"cityName\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('cityName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                                <mat-error *ngIf=\"errorHandling('cityName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \"   />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/city\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { ProductService } from '../product.service';\r\nimport { AuthService } from '../../../../core/Auth/auth.service';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\n\r\n@Component({\r\n  selector: 'app-product-new',\r\n  templateUrl: './product-new.component.html',\r\n  styleUrl: './product-new.component.scss',\r\n})\r\nexport class ProductNewComponent {\r\n  active: number | undefined = 0;\r\n  status: any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: ProductService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    subProductId: [, Validators.required],\r\n    subProductName: [],\r\n    productId: [],\r\n    productName: [, Validators.required],\r\n    remark: [],\r\n    statusId: ['1',],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedOn: ['', ],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Product', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.subProductId.disable();\r\n      this.form.controls.productId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.subProductIdList = this.cas.foreachlist(results[2], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.productId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/product']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.productId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/product']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Product - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                                <p-dropdown [options]=\"subProductIdList\" formControlName=\"subProductId\"\r\n                                    placeholder=\"Select\" filter=\"true\" appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [ngClass]=\"form.get('subProductId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Product ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"productId\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Product Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"productName\"\r\n                                [ngClass]=\"form.get('productName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('productName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/product\">Cancel</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { ProductService } from './product.service';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrl: './product.component.scss',\r\n})\r\n\r\nexport class ProductComponent {\r\n  productTable: any[] = [];\r\n  selectedProduct: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: ProductService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) {}\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Product - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      \r\n      { field: 'productId', header: 'Product ID' },\r\n      { field: 'productName', header: 'Product Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'subProductName', header: 'Sub Product' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'LanguageId' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'CompanyId' },\r\n      { field: 'subProductId', header: 'Sub Product Id' },\r\n      { field: 'statusId', header: 'StatusId' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.productTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedProduct[this.selectedProduct.length - 1];\r\n    this.selectedProduct.length = 0;\r\n    this.selectedProduct.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedProduct.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedProduct[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/product-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedProduct.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedProduct,\r\n        module: 'Product',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedProduct[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.productId,lines.subProductId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.productId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.productTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Product');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Product - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"productTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #productTag [columns]=\"cols\" [value]=\"productTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedProduct[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedProduct\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { CountryService } from '../country.service';\r\n\r\n@Component({\r\n  selector: 'app-country-new',\r\n  templateUrl: './country-new.component.html',\r\n  styleUrl: './country-new.component.scss'\r\n})\r\nexport class CountryNewComponent {\r\n  active: number | undefined = 0;\r\n  status:any[] = []\r\n\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: CountryService, private messageService: MessageService,  private auth: AuthService, private cas: CommonAPIService) {\r\n      this.status = [\r\n        { value: '2', label: 'Inactive' },\r\n        { value: '1', label: 'Active' }\r\n    ];\r\n    \r\n     }\r\n       \r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    countryId: [, Validators.required],\r\n    countryName: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    remark: [],\r\n    referenceField1: [], \r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: ['', ],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['', ],\r\n    statusId:[\"1\", ],\r\n    statusDescription: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Country', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n    \r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.countryId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  \r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist(){\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.countryId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/country']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.countryId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/country']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Country - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                    getErrorMessage()}}</small></mat-error>\r\n                              </div>\r\n                \r\n                              <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"countryId\"\r\n                                [ngClass]=\"form.get('countryId')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Country Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"countryName\" class=\" w-100\"\r\n                                    [ngClass]=\"form.get('countryName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('countryName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \"   />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Remark</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/country\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { CountryService } from './country.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrl: './country.component.scss'\r\n})\r\nexport class CountryComponent {\r\n\r\n  \r\n\r\n  countryTable: any[] = [];\r\n  selectedCountry: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: CountryService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Country - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'countryId', header: 'Country ID' },\r\n      { field: 'countryName', header: 'Country Name' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'remark', header: 'Remark' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.countryTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedCountry[this.selectedCountry.length - 1];\r\n    this.selectedCountry.length = 0;\r\n    this.selectedCountry.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCountry[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedCountry.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedCountry[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/country-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedCountry.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedCountry, module: 'Country', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedCountry[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.countryId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.countryId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.countryTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Country');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Country - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"CountryTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #CountryTag [columns]=\"cols\" [value]=\"countryTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedCountry[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedCountry\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(notificationId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/notification/' + notificationId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/notification', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/notification/'+ obj.notificationId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(notificationId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/notification/' + notificationId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/notification/find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { NotificationService } from '../notification.service';\r\nimport { SubProductService } from '../../sub-product/sub-product.service';\r\nimport { ProductService } from '../../product/product.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-new',\r\n  templateUrl: './notification-new.component.html',\r\n  styleUrl: './notification-new.component.scss'\r\n})\r\nexport class NotificationNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status: any[] = []\r\n  constructor(private cs: CommonServiceService, private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute, private router: Router, private path: PathNameService, private fb: FormBuilder,\r\n    private service: NotificationService, private productService: ProductService, private messageService: MessageService, private auth: AuthService, private cas: CommonAPIService) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n\r\n  }\r\n\r\n  pageToken: any;\r\n\r\n  //form builder initialize\r\n  form = this.fb.group({\r\n    notificationId: [],\r\n    notificationText: [, Validators.required],\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyName: [],\r\n    subProductId: [],\r\n    subProductName: [],\r\n    productId: [],\r\n    productName: [],\r\n    serviceTypeId: [],\r\n    serviceTypeText: [],\r\n    statusDescription: [],\r\n    userRole: [],\r\n    userName: [],\r\n    remark: [],\r\n    referenceField1: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    referenceField10: [],\r\n    createdOn: ['',],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: ['',],\r\n    statusId: [\"1\",],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Notification', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.notificationId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  subProductIdList: any[] = [];\r\n  productIdList: any[] = [];\r\n  serviceTypeIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n      this.cas.dropdownlist.setup.serviceType.url,\r\n      this.cas.dropdownlist.setup.product.url,\r\n      this.cas.dropdownlist.setup.subProduct.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.serviceTypeIdList = this.cas.forLanguageFilter(results[2], this.cas.dropdownlist.setup.serviceType.key);\r\n        this.productIdList = this.cas.forLanguageFilter(results[3], this.cas.dropdownlist.setup.product.key);\r\n        this.subProductIdList = this.cas.forLanguageFilterWithoutKey(results[4], this.cas.dropdownlist.setup.subProduct.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.notificationId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/notification']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.notificationId + ' has been created successfully' });\r\n            this.router.navigate(['/main/idMaster/notification']);\r\n            this.spin.hide();\r\n          }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n  notificationChanged() {\r\n\r\n    let obj: any = {};\r\n    obj.languageId = [this.auth.languageId];\r\n    obj.companyId = [this.auth.companyId];\r\n    obj.productId = [this.form.controls.productId.value]\r\n\r\n    this.subProductIdList = [];\r\n    this.spin.show();\r\n    this.productService.search(obj).subscribe({\r\n      next: (result: any) => {\r\n        this.subProductIdList = this.cas.foreachlist(result, { key: 'subProductId', value: 'subProductName' });\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Notification - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language </p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company </p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Notification ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"notificationId\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('notificationId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Description</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\"\r\n                                    formControlName=\"notificationText\" class=\" w-100\" pInputText placeholder=\"Enter\"\r\n                                    [ngClass]=\"form.get('notificationText')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Product</p>\r\n                                <p-dropdown [options]=\"productIdList\" placeholder=\"Select\" filter=\"true\" formControlName=\"productId\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"false\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" (onChange)=\"notificationChanged()\" />\r\n                                <mat-error *ngIf=\"errorHandling('productId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Sub Product</p>\r\n                                <p-dropdown [options]=\"subProductIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                    formControlName=\"subProductId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                    [disabled]=\"false\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('subProductId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Service Type</p>\r\n                                <p-dropdown [options]=\"serviceTypeIdList\" placeholder=\"Select\" filter=\"true\"\r\n                                    formControlName=\"serviceTypeId\" appendTo=\"body\" [style]=\"{'width': '100%'}\"\r\n                                    [disabled]=\"false\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('serviceTypeId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">User Role</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\" formControlName=\"userRole\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">User Name</p>\r\n                                <input maxlength=\"100\" pInputText formControlName=\"userName\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \"   />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/notification\">Cancel</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow\r\n                                != 'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrl: './notification.component.scss'\r\n})\r\nexport class NotificationComponent {\r\n  \r\n\r\n  notificationTable: any[] = [];\r\n  selectedNotification: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(private messageService: MessageService, private cs: CommonServiceService, private router: Router, private path: PathNameService, private service: NotificationService,\r\n    public dialog: MatDialog, private datePipe: DatePipe, private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Notification - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'notificationId', header: 'Notification ID' },\r\n      { field: 'notificationText', header: 'Description' },\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'productName', header: 'Product' },\r\n      { field: 'subProductName', header: 'Sub Product' },\r\n      { field: 'serviceTypeText', header: 'Service Type Name' },\r\n      { field: 'userRole', header: 'User Role' },\r\n      { field: 'userName', header: 'User Name' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'productId', header: 'Product ID' },\r\n      { field: 'subProductId', header: 'SubProduct ID' },\r\n      { field: 'serviceTypeId', header: 'ServiceType ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n\r\n\r\n    ];\r\n  }\r\n  \r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.notificationTable = res;\r\n        this.spin.hide();\r\n      }, error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedNotification[this.selectedNotification.length - 1];\r\n    this.selectedNotification.length = 0;\r\n    this.selectedNotification.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target,},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedNotification[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedNotification.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedNotification[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/notification-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedNotification.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedNotification, module: 'Notification', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedNotification[0]);\r\n      }\r\n    });\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.notificationId).subscribe({\r\n      next: (res: any) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.notificationId + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err: any) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.notificationTable.map(item => {\r\n      const exportItem: any = {};\r\n     this.cols.forEach(col => {\r\n      if(col.format == 'date'){\r\n        console.log(3)\r\n        exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n      }else{\r\n        exportItem[col.field] = item[col.field];\r\n      }\r\n       \r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n   this.cs.exportAsExcel(exportData, 'Notification');\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Notification - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"NotificationTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #NotificationTag [columns]=\"cols\" [value]=\"notificationTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedNotification[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedNotification\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private auth: AuthService,\r\n  ) { }\r\n\r\n  Get (obj: any) {\r\n    return this.http.get<any>('/overc-idmaster-service/usermanagement' + obj.userId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create (obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/usermanagement', obj);\r\n  }\r\n\r\n  Update (obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/usermanagement/' + obj.userId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete (obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/usermanagement/' + obj.userId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search (obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/usermanagement/find', obj);\r\n  }\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UsersService } from '../users.service';  \r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users-new',\r\n  templateUrl: './users-new.component.html',\r\n  styleUrl: './users-new.component.scss'\r\n})\r\nexport class UsersNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  userType:any[] =[]\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: UsersService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.userType = [\r\n      { value: 'Portal', label: 'Portal' },\r\n      { value: 'Customer', label: 'Customer' },\r\n      { value: 'App', label: 'App' }\r\n        ];\r\n   }\r\n\r\n  pageToken: any;\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId, Validators.required],\r\n    languageIDAndDescription: [],\r\n    companyId: [this.auth.companyId, Validators.required],\r\n    companyIdAndDescription: [],\r\n    userId: [],\r\n    userRoleId: [],\r\n    userRoleIdAndDescription: [],\r\n    userTypeIdAndDescription: [],\r\n    userTypeId: [],\r\n    password: [],\r\n    userName: [],\r\n    firstName: [],\r\n    lastName: [],\r\n    statusId: [],\r\n    dateFormatId: [],\r\n    currencyDecimal: [],\r\n    createHhtUser: [],\r\n    timeZone: [],\r\n    portalLoggedIn: [],\r\n    hhtLoggedIn: [],\r\n    resetPassword: [],\r\n    emailId: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: [],\r\n    createdBy: [],\r\n    updatedBy: [],\r\n    updatedOn: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Users', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.userId.disable();\r\n      this.form.controls.userRoleId.disable();\r\n      this.form.controls.userTypeId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n \r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n           this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n  });\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({ severity: 'error', summary: 'Error', key: 'br', detail: 'Please fill required fields to continue' });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show()\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.userId + res.companyId + res.languageId + ' has been updated successfully' });\r\n          this.router.navigate(['/main/idMaster/users']);\r\n          this.spin.hide();\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    } else {\r\n      this.spin.show()\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res){\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.userId + res.companyId + res.languageId + ' has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/users']);\r\n          this.spin.hide();\r\n        }\r\n        }, error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Users - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row scrollNew\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" filter=\"true\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('languageId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" placeholder=\"Select\" filter=\"true\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                    <mat-error *ngIf=\"errorHandling('companyId')\" \r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">User ID</p>\r\n                                <input formControlName=\"userId\"\r\n                                    [ngClass]=\"form.get('userId')?.invalid && form.get('userId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('userId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">User Role ID</p>\r\n                                <input formControlName=\"userRoleId\" \r\n                                    [ngClass]=\"form.get('userRoldId')?.invalid && form.get('userRoleId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"num\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('userRoleId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">User Type ID</p>\r\n                                <p-dropdown [options]=\"userType\" placeholder=\"Select\" filter=\"true\" formControlName=\"userTypeId\"\r\n                                    appendTo=\"body\" [style]=\"{'width': '100%'}\" [disabled]=\"true\"\r\n                                    [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('userTypeId')\" class=\"text-danger\"><small>{{\r\n                                        getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Password</p>\r\n                                <input formControlName=\"password\" \r\n                                    [ngClass]=\"form.get('password')?.invalid && form.get('password')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('password')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">User Name</p>\r\n                                <input formControlName=\"userName\" \r\n                                    [ngClass]=\"form.get('userName')?.invalid && form.get('userName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('userName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">First Name</p>\r\n                                <input formControlName=\"firstName\" \r\n                                    [ngClass]=\"form.get('firstName')?.invalid && form.get('firstName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText  placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('firstName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Last Name</p>\r\n                                <input formControlName=\"lastName\" \r\n                                    [ngClass]=\"form.get('lastName')?.invalid && form.get('lastName')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText  placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('lastName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Create HHT User</p>\r\n                                <input formControlName=\"createHhtUser\" \r\n                                    [ngClass]=\"form.get('createHhtUser')?.invalid && form.get('createHhtUser')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('createHhtUser')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Date Format ID</p>\r\n                                <input formControlName=\"dateFormatId\" \r\n                                    [ngClass]=\"form.get('dateFormatId')?.invalid && form.get('dateFormatId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"num\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('dateFormatId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Currency Decimal</p>\r\n                                <input formControlName=\"currencyDecimal\" \r\n                                    [ngClass]=\"form.get('currencyDecimal')?.invalid && form.get('currencyDecimal')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"num\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('currencyDecimal')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Time Zone</p>\r\n                                <input formControlName=\"timeZone\" \r\n                                    [ngClass]=\"form.get('timeZone')?.invalid && form.get('timeZone')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('timeZone')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 \">Email ID</p>\r\n                                <input formControlName=\"emailId\" \r\n                                    [ngClass]=\"form.get('emailId')?.invalid && form.get('emailId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\"  pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('emailId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/users\">Cancel</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <!--*ngIf=\"this.pageToken.pageflow != 'New'\"-->\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button [disabled]=\"form.invalid\" [ngClass]=\"form.invalid ? 'disabledButton' : ''\"\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow != \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { UsersService } from './users.service';  \r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrl: './users.component.scss'\r\n})\r\nexport class UsersComponent {\r\n\r\n  userTable: any[] = [];\r\n  selectedUser: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: UsersService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'Users - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyIdAndDescription', header: 'Company' },\r\n      { field: 'userRoleIdAndDescription', header: 'User Role' },\r\n      { field: 'userTypeIdAndDescription', header: 'User Type' },\r\n      { field: 'userName', header: 'User Name' },\r\n      { field: 'firstName', header: 'First Name' },\r\n      { field: 'lastName', header: 'Last Name' },\r\n      { field: 'timeZone', header: 'Time Zone' },\r\n      { field: 'emailId', header: 'Email Id'}\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageIdAndDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'userId', header: 'User ID' },\r\n      { field: 'userRoleId', header: 'User Role ID' },\r\n      { field: 'userTypeId', header: 'User Type ID' },\r\n      { field: 'password', header: 'Password' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'dateFormatId', header: 'Date Format ID' },\r\n      { field: 'currencyDecimal', header: 'Currency Decimal' },\r\n      { field: 'portalLoggedIn', header: 'Portal Logged In' },\r\n      { field: 'hhtLoggedIn', header: 'HHT Logged In' },\r\n      { field: 'resetPassword', header: 'Reset Password' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.userTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedUser[this.selectedUser.length -1];\r\n    this.selectedUser.length = 0;\r\n    this.selectedUser.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedUser[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedUser.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedUser[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/users-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedUser.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedUser, module: 'Users', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedUser[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.userId + lines.companyId + lines.languageId  + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.userTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'Users');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Users - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n \r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem !important;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"userTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"User\" />  \r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #userTag [columns]=\"cols\" [value]=\"userTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedUser[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedUser\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy HH:mm' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RateParameterService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get(rateParameterId: string) {\r\n    return this.http.get<any>(\r\n      '/overc-idmaster-service/rateParameter/' + rateParameterId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/rateParameter', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>(\r\n      '/overc-idmaster-service/rateParameter/' + obj.rateParameterId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(rateParameterId: string) {\r\n    return this.http.delete<any>(\r\n      '/overc-idmaster-service/rateParameter/' + rateParameterId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/rateParameter/' + 'find', obj);\r\n  }\r\n\r\n}\r\n", "import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { RateParameterService } from '../rate-parameter.service';\r\n\r\n@Component({\r\n  selector: 'app-rate-parameter-new',\r\n  templateUrl: './rate-parameter-new.component.html',\r\n  styleUrl: './rate-parameter-new.component.scss'\r\n})\r\nexport class RateParameterNewComponent {\r\n\r\n  active: number | undefined = 0;\r\n  status: any[] = [];\r\n\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: RateParameterService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) {\r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n    ];\r\n  }\r\n\r\n  pageToken: any;\r\n  // form builder initialize\r\n  form = this.fb.group({\r\n    languageId: [this.auth.languageId],\r\n    languageDescription: [],\r\n    companyId: [this.auth.companyId],\r\n    companyName: [],\r\n    rateParameterId: [],\r\n    rateParameterDescription: [, Validators.required],\r\n    remark: [],\r\n    statusId: ['1', ],\r\n    statusDescription: [],\r\n    referenceField1: [],\r\n    referenceField10: [],\r\n    referenceField2: [],\r\n    referenceField3: [],\r\n    referenceField4: [],\r\n    referenceField5: [],\r\n    referenceField6: [],\r\n    referenceField7: [],\r\n    referenceField8: [],\r\n    referenceField9: [],\r\n    createdOn: ['',],\r\n    createdBy: [],\r\n    updatedOn: ['',],\r\n    updatedBy: [],\r\n  });\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = 'required') {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    const dataToSend = ['Setup', 'Rate Parameter', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line);\r\n      this.form.controls.rateParameterId.disable();\r\n      this.form.controls.updatedBy.disable();\r\n      this.form.controls.createdBy.disable();\r\n      this.form.controls.updatedOn.disable();\r\n      this.form.controls.createdOn.disable();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n    ]).subscribe({\r\n      next: (results: any) => {\r\n        this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n        this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n        this.spin.hide();\r\n      },\r\n      error: (err: any) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  fill(line: any) {\r\n    this.form.patchValue(line);\r\n    this.form.controls.updatedOn.patchValue(this.cs.dateExcel(this.form.controls.updatedOn.value));\r\n    this.form.controls.createdOn.patchValue(this.cs.dateExcel(this.form.controls.createdOn.value));\r\n  }\r\n\r\n  save() {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      this.messageService.add({\r\n        severity: 'error',\r\n        summary: 'Error',\r\n        key: 'br',\r\n        detail: 'Please fill required fields to continue',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.spin.show();\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Updated',\r\n            key: 'br',\r\n            detail: res.rateParameterId + ' has been updated successfully',\r\n          });\r\n          this.router.navigate(['/main/idMaster/rateParameter']);\r\n          this.spin.hide();\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    } else {\r\n      this.spin.show();\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n          if (res) {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Created',\r\n              key: 'br',\r\n              detail: res.rateParameterId + ' has been created successfully',\r\n            });\r\n            this.router.navigate(['/main/idMaster/rateParameter']);\r\n            this.spin.hide();\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.spin.hide();\r\n          this.cs.commonerrorNew(err);\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Rate Parameter - {{this.pageToken.pageflow}}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n        <form [formGroup]=\"form\">\r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\" d-flex justify-content-center align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown [options]=\"languageIdList\" formControlName=\"languageId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown [options]=\"companyIdList\" formControlName=\"companyId\" appendTo=\"body\"\r\n                                    [style]=\"{'width': '100%'}\" [disabled]=\"true\" [panelStyle]=\"{'width':'100%'}\" />\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Rate Parameter ID</p>\r\n                                <input maxlength=\"50\" pInputText pKeyFilter=\"alphanum\" formControlName=\"rateParameterId\"\r\n                                    [ngClass]=\"form.get('rateParameterId')?.invalid && form.get('rateParameterId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Rate Parameter Name</p>\r\n                                <input maxlength=\"100\" pInputText pKeyFilter=\"alphanum\"\r\n                                    formControlName=\"rateParameterDescription\"\r\n                                    [ngClass]=\"form.get('rateParameterDescription')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\" w-100\" pInputText placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('rateParameterDescription')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Status</p>\r\n                                <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                    formControlName=\"statusId\" placeholder=\"Select \" />\r\n\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Remarks</p>\r\n                                <input maxlength=\"2000\" formControlName=\"remark\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\"\r\n                                routerLink=\"/main/idMaster/rateParameter\">Cancel</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center align-items-center\">\r\n                                <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disabled text-muted'\">\r\n                                    2</p>\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted'\">\r\n                                    Admin</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                'New' ? 'Update': 'Save'}}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n        </form>\r\n    </div>\r\n</div>", "import { Component } from '@angular/core';\r\nimport { RateParameterService } from './rate-parameter.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MessageService } from 'primeng/api';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\n\r\n@Component({\r\n  selector: 'app-rate-parameter',\r\n  templateUrl: './rate-parameter.component.html',\r\n  styleUrl: './rate-parameter.component.scss'\r\n})\r\nexport class RateParameterComponent {\r\n\r\n  rateParameterTable: any[] = [];\r\n  selectedRateParameter: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: RateParameterService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit() {\r\n    //to pass the breadcrumbs value to the main component\r\n    const dataToSend = ['Setup', 'Rate Parameter - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'companyName', header: 'Company' },\r\n      { field: 'rateParameterId', header: 'Rate Parameter ID' },\r\n      { field: 'rateParameterDescription', header: 'Rate Parameter Name' },\r\n      { field: 'remark', header: 'Remarks' },\r\n      { field: 'statusDescription', header: 'Status' },\r\n      { field: 'createdBy', header: 'Created By' },\r\n      { field: 'createdOn', header: 'Created On', format: 'date' },\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'languageDescription', header: 'Language' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n      { field: 'updatedBy', header: 'Updated By' },\r\n      { field: 'updatedOn', header: 'Updated On', format: 'date' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.rateParameterTable = res;\r\n        this.spin.hide();\r\n      },\r\n      error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedRateParameter[this.selectedRateParameter.length - 1];\r\n    this.selectedRateParameter.length = 0;\r\n    this.selectedRateParameter.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedRateParameter[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedRateParameter.length === 0 && type != 'New') {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({\r\n        line: linedata == null ? this.selectedRateParameter[0] : linedata,\r\n        pageflow: type,\r\n      });\r\n      this.router.navigate(['/main/idMaster/rateParameter-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedRateParameter.length === 0) {\r\n      this.messageService.add({\r\n        severity: 'warn',\r\n        summary: 'Warning',\r\n        key: 'br',\r\n        detail: 'Kindly select any Row',\r\n      });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: {\r\n        line: this.selectedRateParameter,\r\n        module: 'Rate Parameter',\r\n        body: 'This action cannot be undone. All values associated with this field will be lost.',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedRateParameter[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleterecord(lines: any) {\r\n    this.spin.show();\r\n    this.service.Delete(lines.rateParameterId).subscribe({\r\n      next: (res) => {\r\n        this.messageService.add({\r\n          severity: 'success',\r\n          summary: 'Deleted',\r\n          key: 'br',\r\n          detail: lines.rateParameterId + ' Deleted successfully',\r\n        });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },\r\n      error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      },\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.rateParameterTable.map((item) => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach((col) => {\r\n        if (col.format == 'date') {\r\n          console.log(3);\r\n          exportItem[col.field] = this.datePipe.transform(\r\n            item[col.field],\r\n            'dd-MM-yyyy'\r\n          );\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Call ExcelService to export data to Excel\r\n    this.cs.exportAsExcel(exportData, 'Rate Parameter');\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">Rate Parameter - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\"\r\n                style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n        <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n            <p-inputIcon styleClass=\"pi pi-search\" />\r\n            <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                (input)=\"rateParameterTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n        </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"Customer Name\" />\r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\"\r\n                [showIcon]=\"true\" />\r\n            <p-dropdown class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #rateParameterTag [columns]=\"cols\" [value]=\"rateParameterTable\" class=\"custom-table\"\r\n            [scrollable]=\"true\" selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\"\r\n            [rows]=\"100\" [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedRateParameter[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedRateParameter\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                        </ng-container>\r\n                        <ng-template #dateTemplate>\r\n                            {{ rowData[col.field] | date: 'dd-MM-yyyy' }}\r\n                        </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>", "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRoleService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private auth: AuthService,\r\n  ) { }\r\n\r\n  Get (obj: any) {\r\n    return this.http.get<any>('/overc-idmaster-service/roleAccess/' + obj + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&menuId=' + obj.menuId + '&subMenuId=' + obj.subMenuId);\r\n  }\r\n\r\n  GetNew(code: any, companyId: any, languageId: any, menuId: any, subMenuId: any) {\r\n    return this.http.get<any>('/overc-idmaster-service/roleAccess/' + code + '?companyId=' + companyId + '&languageId=' + languageId + '&menuId=' + menuId + '&subMenuId=' + subMenuId);\r\n  }\r\n\r\n  Create (obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/roleAccess', obj);\r\n  }\r\n\r\n  Update (obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/roleAccess/' + obj.roleId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId, obj + '&menuId=' + obj.menuId + '&subMenuId=' + obj.subMenuId);\r\n  }\r\n\r\n  Delete (obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/roleAccess/' + obj.roleId + '?companyId=' + this.auth.companyId + '&languageId=' + this.auth.languageId + '&menuId=' + obj.menuId + '&subMenuId=' + obj.subMenuId);\r\n  }\r\n\r\n  search (obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/roleAccess/find', obj);\r\n  }\r\n\r\n  searchModule (obj: any) {\r\n\r\n  }\r\n\r\n}\r\n", "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { CommonServiceService } from '../../../common-service/common-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { PathNameService } from '../../../common-service/path-name.service';\r\nimport { UserRoleService } from './user-role.service';   \r\nimport { MessageService } from 'primeng/api';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeleteComponent } from '../../../common-dialog/delete/delete.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { CustomTableComponent } from '../../../common-dialog/custom-table/custom-table.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../../core/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-user-role',\r\n  templateUrl: './user-role.component.html',\r\n  styleUrl: './user-role.component.scss'\r\n})\r\nexport class UserRoleComponent {\r\n\r\n  userRoleTable: any[] = [];\r\n  selectedUserRole: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private cs: CommonServiceService, \r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private service: UserRoleService,\r\n    public dialog: MatDialog,\r\n    private datePipe: DatePipe,\r\n    private spin: NgxSpinnerService,\r\n  ) { }\r\n\r\n  fullDate: any;\r\n  today: any;\r\n  ngOnInit(): void {\r\n    const dataToSend = ['Setup', 'User Role - List'];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.callTableHeader();\r\n    this.initialCall();\r\n  }\r\n\r\n  callTableHeader() {\r\n    this.cols = [\r\n      { field: 'roleId', header: 'Role ID' },\r\n      { field: 'userRoleName', header: 'User Role' },\r\n      { field: 'menuName', header: 'Menu' },\r\n      { field: 'subMenuName', header: 'Sub Menu' },\r\n      { field: 'description', header: 'Role Description'},\r\n      { field: 'languageIdAndDescription', header: 'Language'},\r\n      { field: 'companyIdAndDescription', header: 'Company'},\r\n      { field: 'authorizationObjectValue', header: 'Authorization Object Value'}\r\n    ];\r\n    this.target = [\r\n      { field: 'languageId', header: 'Language ID' },\r\n      { field: 'companyId', header: 'Company ID' },\r\n      { field: 'userRoleId', header: 'UserRole ID' },\r\n      { field: 'menuId', header: 'Menu ID' },\r\n      { field: 'subMenuId', header: 'Sub Menu ID' },\r\n      { field: 'moduleId', header: 'Module ID' },\r\n      { field: 'statusId', header: 'Status ID' },\r\n      { field: 'authorizationObjectId', header: 'Authorization Object ID'},\r\n      { field: 'referenceField1', header: 'Reference Field 1' },\r\n      { field: 'referenceField2', header: 'Reference Field 2' },\r\n      { field: 'referenceField3', header: 'Reference Field 3' },\r\n      { field: 'referenceField4', header: 'Reference Field 4' },\r\n      { field: 'referenceField5', header: 'Reference Field 5' },\r\n      { field: 'referenceField6', header: 'Reference Field 6' },\r\n      { field: 'referenceField7', header: 'Reference Field 7' },\r\n      { field: 'referenceField8', header: 'Reference Field 8' },\r\n      { field: 'referenceField9', header: 'Reference Field 9' },\r\n      { field: 'referenceField10', header: 'Reference Field 10' },\r\n    ];\r\n  }\r\n\r\n  initialCall() {\r\n    this.spin.show();\r\n    this.service.search({}).subscribe({\r\n      next: (res: any) => {\r\n        console.log(res);\r\n        this.userRoleTable = res;\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.spin.hide();\r\n        this.cs.commonerrorNew(err);\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange() {\r\n    const choosen = this.selectedUserRole[this.selectedUserRole.length - 1];\r\n    this.selectedUserRole.length = 0;\r\n    this.selectedUserRole.push(choosen);\r\n  }\r\n\r\n  customTable() {\r\n    const dialogRef = this.dialog.open(CustomTableComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '80%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { target: this.cols, source: this.target },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedUserRole[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  openCrud(type: any = 'New', linedata: any = null): void {\r\n    if (this.selectedUserRole.length === 0 && type != 'New') {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n    } else {\r\n      let paramdata = this.cs.encrypt({ line: linedata == null ? this.selectedUserRole[0] : linedata, pageflow: type });\r\n      this.router.navigate(['/main/idMaster/userrole-new/' + paramdata]);\r\n    }\r\n  }\r\n\r\n  deleteDialog() {\r\n    if (this.selectedUserRole.length === 0) {\r\n      this.messageService.add({ severity: 'warn', summary: 'Warning', key: 'br', detail: 'Kindly select any Row' });\r\n      return;\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteComponent, {\r\n      disableClose: true,\r\n      width: '70%',\r\n      maxWidth: '82%',\r\n      position: { top: '6.5%', left: '30%' },\r\n      data: { line: this.selectedUserRole, module: 'User Role', body: 'This action cannot be undone. All values associated with this field will be lost.' },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.deleterecord(this.selectedUserRole[0]);\r\n      }\r\n    })\r\n  }\r\n  deleterecord(lines: any) {\r\n    this.spin.show(); \r\n    this.service.Delete(lines).subscribe({\r\n      next: (res) =>{\r\n        this.messageService.add({ severity: 'success', summary: 'Deleted', key: 'br', detail: lines.roleId + lines.companyId + lines.languageId  + ' deleted successfully' });\r\n        this.spin.hide();\r\n        this.initialCall();\r\n      },error: (err) => {\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadExcel() {\r\n    const exportData = this.userRoleTable.map(item => {\r\n      const exportItem: any = {};\r\n      this.cols.forEach(col => {\r\n        if (col.format == 'data') {\r\n          console.log(3)\r\n          exportItem[col.field] = this.datePipe.transform(item[col.field], 'dd-MM-yyyy');\r\n        } else {\r\n          exportItem[col.field] = item[col.field];\r\n        }\r\n      });\r\n      return exportItem;\r\n    });\r\n\r\n    // Excel service\r\n    this.cs.exportAsExcel(exportData, 'UserRole');\r\n  }\r\n\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">User Role - List</p>\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <img type=\"button\" (click)=\"openCrud('Edit')\" src=\"./assets/common/edit.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"downloadExcel()\" src=\"./assets/common/download.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"deleteDialog()\" src=\"./assets/common/deletetool.png\" alt=\"\" srcset=\"\" style=\"margin: 0 17px; height: 1.5rem;\">\r\n            <img type=\"button\" (click)=\"customTable()\" src=\"./assets/common/settings.png\" alt=\"\" srcset=\"\" style=\"margin-left: 19px; margin-right: 28px; height: 1.5rem;\">\r\n            <button type=\"button\" class=\"btn ml-2 addNewbuttom bgBlack text-white\" (click)=\"openCrud('New')\"><i\r\n                    class=\"bi bi-plus-square pr-2\"></i> Add New</button>\r\n        </div>\r\n    </div>\r\n \r\n    <div class=\"d-flex justify-content-between align-items-center my-2\">\r\n            <p-iconField iconPosition=\"left\" class=\"mr-5\">\r\n                <p-inputIcon styleClass=\"pi pi-search\" />\r\n                <input type=\"text\" id=\"toolInput1\" style=\"width: 20rem;\" pInputText placeholder=\"Search\"\r\n                    (input)=\"userRoleTag.filterGlobal($any($event.target).value, 'contains')\" />\r\n            </p-iconField>\r\n        <div class=\"d-flex justify-content-end align-items-center\">\r\n            <p class=\"mb-0 d-flex f600 float-right w-25 pr-2\">Filter By:</p>\r\n            <input type=\"text\" id=\"toolInput\" class=\"w-75\" pInputText placeholder=\"UserRole\" />  \r\n            <p-calendar id=\"toolInput\" class=\"w-75\" placeholder=\"Filter by Date\" [iconDisplay]=\"'input'\" [showIcon]=\"true\" />\r\n            <p-dropdown  class=\" d-flex float-right\" optionLabel=\"name\" placeholder=\"Filter by Product\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"tableProperties\">\r\n        <p-table #userRoleTag [columns]=\"cols\" [value]=\"userRoleTable\" class=\"custom-table\" [scrollable]=\"true\"\r\n            selectionMode=\"single\" scrollHeight=\"calc(100vh - 19.8rem)\" [paginator]=\"true\" [rows]=\"100\"\r\n            [showCurrentPageReport]=\"true\" sortField=\"createdOn\" [sortOrder]=\"-1\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width: 5rem;\">\r\n                        <p-tableHeaderCheckbox class=\"pl-3\" [disabled]=\"true\"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th *ngFor=\"let col of columns\">\r\n                        {{ col.header }}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [class.selectedRow]=\"selectedUserRole[0] === rowData\">\r\n                    <td style=\"width: 5rem; justify-content: center;\">\r\n                        <p-checkbox (onChange)=\"onChange()\" [(ngModel)]=\"selectedUserRole\" class=\"pl-3\"\r\n                            [value]=\"rowData\"></p-checkbox>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <ng-container *ngIf=\"col.format !== 'date'; else dateTemplate\">\r\n                            {{ rowData[col.field] }}\r\n                          </ng-container>\r\n                          <ng-template #dateTemplate>\r\n                            {{ rowData.createdOn | date: 'dd-MM-yyyy' }}\r\n                          </ng-template>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td [attr.colspan]=\"4\">\r\n                        <p class=\"my-2 w-100 pl-3\">No records found</p>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<mat-menu #menu=\"matMenu\" class=\"customClass\">\r\n    <ng-template matMenuContent let-aliasMenuItems=\"delivery\">\r\n        <button mat-menu-item>Edit</button>\r\n        <button mat-menu-item>Confirm</button>\r\n    </ng-template>\r\n</mat-menu>", "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonServiceService } from '../../../../common-service/common-service.service';\r\nimport { PathNameService } from '../../../../common-service/path-name.service';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { UserRoleService } from '../user-role.service'; \r\nimport { CommonAPIService } from '../../../../common-service/common-api.service';\r\nimport { AuthService } from '../../../../core/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModuleService } from '../../module/module.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-role-new',\r\n  templateUrl: './user-role-new.component.html',\r\n  styleUrl: './user-role-new.component.scss'\r\n})\r\nexport class UserRoleNewComponent {\r\n\r\n  userRoleTable: any[] = [];\r\n  selectedUserRole: any[] = [];\r\n  cols: any[] = [];\r\n  target: any[] = [];\r\n\r\n  active: number | undefined = 0;\r\n  status: any[] = [];\r\n  constructor(\r\n    private cs: CommonServiceService,\r\n    private spin: NgxSpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private path: PathNameService,\r\n    private fb: FormBuilder,\r\n    private service: UserRoleService,\r\n    private moduleService: ModuleService,\r\n    private messageService: MessageService,\r\n    private cas: CommonAPIService,\r\n    private auth: AuthService\r\n  ) { \r\n    this.status = [\r\n      { value: '2', label: 'Inactive' },\r\n      { value: '1', label: 'Active' }\r\n  ];\r\n  }\r\n\r\n  disabled =false;\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  pageToken: any;\r\n\r\n  submitted = false;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  errorHandling(control: string, error: string = \"required\") {\r\n    const controlInstance = this.form.get(control);\r\n    return controlInstance && controlInstance.hasError(error) && this.submitted;\r\n  }\r\n  getErrorMessage() {\r\n    if (this.email.hasError('required')) {\r\n      return ' Field should not be blank';\r\n    }\r\n    return this.email.hasError('email') ? 'Not a valid email' : '';\r\n  }\r\n\r\n  sub = new Subscription();\r\n  modeOfImplementation: any;\r\n  ngOnInit() {\r\n    let code = this.route.snapshot.params['code'];\r\n    this.pageToken = this.cs.decrypt(code);\r\n\r\n    let obj: any = {};\r\n    obj.companyId = this.auth.companyId;\r\n    obj.languageId = this.auth.languageId;\r\n\r\n    const dataToSend = ['Setup', 'User Role', this.pageToken.pageflow];\r\n    this.path.setData(dataToSend);\r\n\r\n    this.dropdownlist();\r\n\r\n    this.form.controls.languageId.disable();\r\n    this.form.controls.companyId.disable();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.fill(this.pageToken.line)\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.form.controls.roleId.disable();\r\n    }\r\n\r\n    if (this.pageToken.pageflow == 'New' ) {\r\n      this.form.controls.languageId.patchValue(this.auth.languageId);\r\n      this.form.controls.companyId.patchValue(this.auth.companyId);\r\n\r\n      this.form.controls.languageId.disable();\r\n      this.form.controls.companyId.disable();\r\n      this.getModuleId();\r\n    }\r\n  }\r\n\r\n  languageIdList: any[] = [];\r\n  companyIdList: any[] = [];\r\n  dropdownlist() {\r\n    this.spin.show();\r\n    this.cas.getalldropdownlist([\r\n      this.cas.dropdownlist.setup.language.url,\r\n      this.cas.dropdownlist.setup.company.url,\r\n\r\n    ]).subscribe({next: (results: any) => {\r\n      this.languageIdList = this.cas.foreachlist(results[0], this.cas.dropdownlist.setup.language.key);\r\n      this.companyIdList = this.cas.foreachlist(results[1], this.cas.dropdownlist.setup.company.key);\r\n      this.spin.hide();\r\n    },\r\n    error: (err: any) => {\r\n      this.spin.hide();\r\n      this.cs.commonerrorNew(err);\r\n    },\r\n    });\r\n  }\r\n\r\n  isbtntext = true;\r\n  btntext = \"Save\";\r\n  menuList: any[] = [];\r\n  menuListRaw: any[] = [];\r\n  moduleResult: any[] = [];\r\n  menuListraw: any[] =\r\n    [\r\n      {\r\n        mainMenu: \"Shortcuts\", Menu: [  \r\n        { menuId: 1, subMenuId: 1000, referenceField2: 'Setup', referenceField1: \"Company\", createUpdate: true, delete: true, view: true, },\r\n        { menuId: 1, subMenuId: 1001, referenceField2: 'Setup', referenceField1: \"Language\", createUpdate: true, delete: true, view: true, },\r\n        ]\r\n      },\r\n    ];\r\n  fill(data: any) {\r\n    if (data.pageflow != 'New') {\r\n      this.btntext = 'Updated';\r\n      if (data.pageflow == 'Display') {\r\n        this.form.disable();\r\n        this.isbtntext = false;\r\n      }\r\n\r\n      this.spin.show();\r\n      console.log(data)\r\n      this.moduleService.search({languageId: [this.auth.languageId], companyId: this.auth.companyId}).subscribe(moduleRes => {\r\n        // this.sub.add(this.service.Get(data.roleId + this.auth.languageId + this.auth.companyId).subscribe(res => {\r\n        //   this.form.patchValue(res[0]);\r\n        //   let combined = this.cs.removeDuplicateObj(res, moduleRes);\r\n        //   this.form.controls.statusDescription.patchValue(this.form.controls.statusDescription.value ? 'Active' : 'Inactive');\r\n        //   this.menuList = [];\r\n        //   this.menuList.push({\r\n        //     mainMenu: \"Setup\",\r\n        //     Menu: combined.filter((x: any) => x.moduleId == 2000)\r\n        //   });\r\n        //   this.menuList.push({\r\n        //     mainMenu: \"Masters\",\r\n        //     Menu: combined.filter((x: any) => x.moduleId == 3000)\r\n        //   })\r\n        //   this.spin.hide();\r\n        // }, err => {\r\n        //   this.cs.commonerrorNew(err);\r\n        //   this.spin.hide();\r\n        // }));\r\n        this.sub.add(this.service.GetNew(data.roleId, this.auth.companyId, this.auth.languageId, data.menuId, data.subMenuId).subscribe(res => {\r\n          console.log(res)\r\n          this.form.patchValue(res[0]);\r\n          let combined = this.cs.removeDuplicateObj(res, moduleRes);\r\n          this.form.controls.statusDescription.patchValue(this.form.controls.statusDescription.value ? 'Active' : 'Inactive');\r\n          this.menuList = [];\r\n          this.menuList.push({\r\n            mainMenu: \"Setup\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 2000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Masters\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 3000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Airport\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 4000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Customer Service\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 5000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Operations\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 6000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Billings\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 7000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Integrations\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 8000)\r\n          });\r\n          this.menuList.push({\r\n            mainMenu: \"Reports\",\r\n            Menu: combined.filter((x: any) => x.moduleId == 9000)\r\n          });\r\n          this.spin.hide();\r\n        }, err => {\r\n          this.cs.commonerrorNew(err);\r\n          this.spin.hide();\r\n        }))\r\n      });\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.menuList = this.menuListRaw;\r\n  }\r\n\r\n  resetAll() {\r\n    this.menuList.forEach((x: any) => {\r\n      x.Menu.forEach((element: { createUpdate: boolean; delete: boolean; view: boolean; }) => {\r\n        element.createUpdate = false, element.delete = false, element.view = false\r\n      });\r\n    })\r\n  }\r\n\r\n  addScreens() {\r\n    let paramdata = \"\";\r\n    paramdata = this.cs.encrypt({ lines: this.menuList,});\r\n    this.router.navigate(['/main/idMaster/userrole-new/' + paramdata]);\r\n  }\r\n\r\n  checkUncheckAll(menu: any, event: any) {\r\n    if (event.checked) { this.menuList.find(x => x.mainMenu == menu).Menu.forEach((x: any) => { x.createUpdate = true, x.delete = true, x.view = true}) }\r\n    else { this.menuList.find(x => x.mainMenu == menu).Menu.forEach((x: any) => {})}\r\n  }\r\n\r\n  onChange(menu: any, event: any) {\r\n    menu.view = event.checked; menu.createUpdate = event.checked; menu.delete = event.checked;\r\n  }\r\n\r\n  // Form builder Initialize\r\n  form = this.fb.group({\r\n    statusDescription: [\"Active\", [Validators.required]],\r\n    roleId: [,],\r\n    userRoleName: [, [Validators.required]],\r\n    languageId: [, [Validators.required]],\r\n    companyId: [, [Validators.required]],\r\n  });\r\n\r\n  onLanguageChange(value: any) {\r\n    this.moduleService.search({languageId: [value.value]}).subscribe(res => {\r\n      this.companyIdList = [];\r\n      res.forEach((element: { companyId: string; description: string; }) => {\r\n        this.companyIdList.push({value: element.companyId, lable: element.companyId + '-' + element.description});\r\n      });\r\n    });\r\n    this.moduleService.search({companyId: [this.auth.companyId], languageId: [this.auth.languageId]}).subscribe(res => {\r\n      this.moduleResult = [];\r\n      this.moduleResult.push(res);\r\n      this.menuList = [];\r\n      this.menuList.push({\r\n        mainMenu: \"Setup\",\r\n        Menu: res.filter((x: any) => x.module == 2000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Master\",\r\n        Menu: res.filter((x: any) => x.module == 3000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Airport\",\r\n        Menu: res.filter((x: any) => x.moduleId == 4000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Customer Service\",\r\n        Menu: res.filter((x: any) => x.moduleId == 5000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Operations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 6000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Billings\",\r\n        Menu: res.filter((x: any) => x.moduleId == 7000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Integrations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 8000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Reports\",\r\n        Menu: res.filter((x: any) => x.moduleId == 9000)\r\n      });\r\n    });\r\n  }\r\n\r\n  onCompanyChange(value: any) {\r\n    this.moduleService.search({companyId: value.value, languageId: [this.auth.languageId]}).subscribe(res => {\r\n      this.moduleResult = [];\r\n      this.moduleResult.push(res);\r\n      this.menuList = [];\r\n      this.menuList.push({\r\n          mainMenu: \"Setup\",\r\n          Menu: res.filter((x: any) => x.moduleId == 2000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Masters\",\r\n        Menu: res.filter((x: any) => x.moduleId == 3000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Airport\",\r\n        Menu: res.filter((x: any) => x.moduleId == 4000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Customer Service\",\r\n        Menu: res.filter((x: any) => x.moduleId == 5000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Operations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 6000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Billings\",\r\n        Menu: res.filter((x: any) => x.moduleId == 7000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Integrations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 8000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Reports\",\r\n        Menu: res.filter((x: any) => x.moduleId == 9000)\r\n      });\r\n    })\r\n  }\r\n\r\n  save() {\r\n    // this.form.controls.statusDescription.patchValue(this.form.controls.statusDescription.value == 'Active' ? true : false);\r\n\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n        this.messageService.add({ severity: 'warn', summary: 'Error', key: 'br', detail: 'Please fill the required fields to continue'});\r\n\r\n        return;\r\n    }\r\n\r\n    this.form.updateValueAndValidity;\r\n    let data: any[] = [];\r\n    this.menuList.forEach((x: any) => {\r\n      x.Menu.forEach((y: any) => {\r\n        y.languageId = this.form.controls.languageId.value;\r\n        y.companyId = this.form.controls.companyId.value;\r\n        y.statusDescription = this.form.controls.statusDescription.value;\r\n        y.edit = true;\r\n        data.push(y);\r\n      });\r\n    })\r\n\r\n    this.spin.show();\r\n\r\n    if (this.pageToken.pageflow != 'New') {\r\n      this.service.Update(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        this.messageService.add({ severity: 'success', summary: 'Updated', key: 'br', detail: res.roleId.value + 'has been updated successfully' });\r\n        this.router.navigate(['/main/idMaster/userrole'])\r\n        this.spin.hide();\r\n      }, error: (err) => {\r\n        this.form.controls.statusDescription.patchValue(this.form.controls.statusDescription.value ? 'Active' : 'Inactive');\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    });\r\n    } else {\r\n      this.service.Create(this.form.getRawValue()).subscribe({\r\n        next: (res) => {\r\n        if(res) {\r\n          this.messageService.add({ severity: 'success', summary: 'Created', key: 'br', detail: res.roleId.value + 'has been created successfully' });\r\n          this.router.navigate(['/main/idMaster/userrole']);\r\n          this.spin.hide();\r\n        }\r\n      }, error: (err) => {\r\n        this.form.controls.statusDescription.patchValue(this.form.controls.statusDescription.value ? 'Active' : 'InActive');\r\n\r\n        this.cs.commonerrorNew(err);\r\n        this.spin.hide();\r\n      }\r\n    });\r\n    }\r\n  };\r\n\r\n  getModuleId() {\r\n    this.moduleService.search({companyId: this.auth.companyId, languageId: [this.auth.languageId]}).subscribe(res => {\r\n      this.moduleResult = [];\r\n      this.moduleResult = res;\r\n\r\n      this.menuList = [];\r\n      this.menuList.push({\r\n        mainMenu: \"Setup\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 2000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Masters\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 3000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Airport\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 4000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Customer Service\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 5000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Operations\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 6000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Billings\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 7000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Integrations\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 8000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Reports\",\r\n        Menu: this.moduleResult.filter((x: any) => x.moduleId == 9000)\r\n      });\r\n    });\r\n  }\r\n\r\n  getModuleIDSuperAdmin() {\r\n    this.moduleService.search({companyId: this.form.controls.companyId.value, languageId: this.form.controls.languageId.value}).subscribe(res => {\r\n      this.moduleResult = [];\r\n      this.moduleResult.push(res);\r\n      this.menuList = [];\r\n      this.menuList.push({\r\n        mainMenu: \"Setup\",\r\n        Menu: res.filter((x: any) => x.moduleId == 2000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Masters\",\r\n        Menu: res.filter((x: any) => x.moduleId == 3000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Airport\",\r\n        Menu: res.filter((x: any) => x.moduleId == 4000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Customer Service\",\r\n        Menu: res.filter((x: any) => x.moduleId == 5000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Operations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 6000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Billings\",\r\n        Menu: res.filter((x: any) => x.moduleId == 7000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Integrations\",\r\n        Menu: res.filter((x: any) => x.moduleId == 8000)\r\n      });\r\n      this.menuList.push({\r\n        mainMenu: \"Reports\",\r\n        Menu: res.filter((x: any) => x.moduleId == 9000)\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n", "<div class=\"componentBody\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <p class=\"componentHeader f600 mb-0\">User Role - {{ this.pageToken.pageflow }}</p>\r\n    </div>\r\n    <div class=\"w-75 mt-4 mx-auto\">\r\n       \r\n            <p-stepper [(activeStep)]=\"active\">\r\n                <p-stepperPanel>\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center  align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">1</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">General</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-nextCallback=\"nextCallback\">\r\n                        <form [formGroup]=\"form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Language</p>\r\n                                <p-dropdown (onChange)=\"onLanguageChange($event)\" placeholder=\"Select\" filter=\"true\" class=\"w-100\"\r\n                                    [filter]=\"true\" [options]=\"languageIdList\" formControlName=\"languageId\"\r\n                                    [style]=\"{'width': '100%', 'margin-top': '0.3rem', 'margin-bottom': '0.3rem'}\"\r\n                                    [panelStyle]=\"{'width':'20%'}\" appendTo=\"body\">\r\n                                </p-dropdown>\r\n                                <mat-error *ngIf=\"errorHandling('languageId')\">{{getErrorMessage()}}</mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Company</p>\r\n                                <p-dropdown (onChange)=\"onCompanyChange($event)\" placeholder=\"Select\" filter=\"true\" class=\"w-100\"\r\n                                    [filter]=\"true\" [options]=\"companyIdList\" formControlName=\"companyId\"\r\n                                    [style]=\"{'width': '100%', 'margin-top': '0.3rem', 'margin-bottom': '0.3rem'}\"\r\n                                    [panelStyle]=\"{'width':'20%'}\" appendTo=\"body\">\r\n                                </p-dropdown>\r\n                                <mat-error *ngIf=\"errorHandling('companyId')\">{{getErrorMessage()}}</mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Role ID</p>\r\n                                <input formControlName=\"roleId\"\r\n                                    [ngClass]=\"form.get('roleId')?.invalid && form.get('roleId')?.dirty ? 'invalid' : ''\"\r\n                                    class=\"w-100\" pInputText pKeyFilter=\"num\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('roleId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Role Name</p>\r\n                                <input formControlName=\"userRoleName\"\r\n                                [ngClass]=\"form.get('userRoleName')?.invalid && submitted ? 'ng-invalid ng-dirty' : ''\"\r\n                                    class=\"w-100\" pInputText pKeyFilter=\"alphanum\" placeholder=\"Enter\" />\r\n                                <mat-error *ngIf=\"errorHandling('userRoleName')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0 required\">Status</p>\r\n                                <div class=\"card flex\">\r\n                                    <p-dropdown [options]=\"status\" [style]=\"{'width': '100%'}\" appendTo=\"body\"\r\n                                        formControlName=\"statusId\" placeholder=\"Select \" />\r\n                                </div>\r\n                                <mat-error *ngIf=\"errorHandling('statusId')\"\r\n                                    class=\"text-danger\"><small>{{getErrorMessage()}}</small></mat-error>\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%\">\r\n                            <button class=\"buttom1 textBlack mx-1\" routerLink=\"/main/idMaster/userrole\">\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"nextCallback.emit()\">\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow == 'New' \">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center  align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">2</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">Screens</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"nextCallback\">\r\n                        <div class=\"row d-flex justify-content\">    \r\n                            <mat-tab-group class=\"mx-8\">\r\n                                <mat-tab *ngFor=\"let element of menuList; let j = index\" >\r\n                                    <ng-template mat-tab-label >\r\n                                        <ul class=\"nav\" >\r\n                                            <li class=\"nav-item\">\r\n                                                <p class=\"nav-link\"\r\n                                                    href=\"\">\r\n                                                    {{element.mainMenu}}\r\n                                                </p>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ng-template>\r\n                                    <div class=\"scrolltable mr-1\">\r\n                                        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 pt-3 pb-3 \">\r\n                                            <p-checkbox [binary]=\"true\"\r\n                                                            (onChange)=\"onChange(element.mainMenu, $event)\"></p-checkbox>\r\n                                                Select All    \r\n                                        </div>\r\n                                        <div class=\"tableProperties\">\r\n                                        <p-table [value]=\"element.Menu\" class=\"custom-table\" [scrollable]=\"true\"\r\n                                        selectionMode=\"single\" scrollHeight=\"calc(78vh - 19.8rem)\"\r\n                                         styleClass=\"p-datatable-sm\">\r\n                                            <ng-template pTemplate=\"header\" let-columns>\r\n                                                <tr>\r\n                                                    <th style=\"text-align: center;\">S.No</th>\r\n                                                    <th style=\"text-align: center;\">Menu</th>\r\n                                                    <th style=\"text-align: center;\">Select All</th>\r\n                                                    <th style=\"text-align: center;\">Create / Modify</th>\r\n                                                    <th style=\"text-align: center;\">Display</th>\r\n                                                    <th style=\"text-align: center;\">Delete</th>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate=\"body\" let-menu let-i=\"rowIndex\">\r\n                                                <tr>\r\n                                                    <td style=\"text-align: center;\">{{ i + 1 }}</td>\r\n                                                    <td style=\"text-align: center;\">{{ menu.subMenuName }}</td>\r\n                                                    <td style=\"text-align: center;\">\r\n                                                        <p-checkbox \r\n                                                            [binary]=\"true\" \r\n                                                            [ngModel]=\"menu.createUpdate && menu.view && menu.delete\"\r\n                                                            (onChange)=\"onChange(menu, $event)\"></p-checkbox>\r\n                                                    </td>\r\n                                                    <td style=\"text-align: center;\">\r\n                                                        <p-checkbox \r\n                                                            [binary]=\"true\" \r\n                                                            [(ngModel)]=\"menu.createUpdate\"></p-checkbox>\r\n                                                    </td>\r\n                                                    <td style=\"text-align: center;\">\r\n                                                        <p-checkbox \r\n                                                            [binary]=\"true\" \r\n                                                            [(ngModel)]=\"menu.view\"></p-checkbox>\r\n                                                    </td>\r\n                                                    <td style=\"text-align: center;\">\r\n                                                        <p-checkbox \r\n                                                            [binary]=\"true\" \r\n                                                            [(ngModel)]=\"menu.delete\"></p-checkbox>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                        </p-table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- <div class=\"d-flex justify-content-end mr-2\">\r\n                                        Total Records: {{element.Menu.length}}\r\n                                    </div> -->\r\n                                </mat-tab>\r\n\r\n                            </mat-tab-group>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n                <!-- <p-stepperPanel *ngIf=\"this.pageToken.pageflow == 'New' \">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\" (click)=\"onClick.emit()\">\r\n                            <div class=\"d-flex justify-content-center  align-items-center\">\r\n                                <p *ngIf=\"active == 0;\" class=\"circle borderCircle mb-0\">2</p>\r\n                                <img *ngIf=\"active != 0;\" src=\"./assets/dashboard/tick.png\" alt=\"\" srcset=\"\">\r\n                            </div>\r\n                            <div>\r\n                                <p class=\"mb-0 mt-2 f600 textBlack\">Table2</p>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"nextCallback\">\r\n                        <div class=\"row d-flex justify-content\">    \r\n                            <mat-tab-group [@.disabled]=\"true\" class=\"mx-8\" >\r\n                                <mat-tab *ngFor=\"let element of menuList; let j = index\" >\r\n                                    <ng-template mat-tab-label>\r\n                                        <ul class=\"nav\" >\r\n                                            <li class=\"nav-item\">\r\n                                                    <p class=\"nav-link\"\r\n                                                            href=\"\">\r\n                                                            {{element.mainMenu}}\r\n                                                    </p>\r\n                                            </li>\r\n                                        </ul>\r\n                                        \r\n                                    </ng-template>\r\n                                    <div>\r\n                                        <p-table [value]=\"element.Menu\" class=\"custom-table\" [scrollable]=\"true\"\r\n                                        selectionMode=\"single\" scrollHeight=\"calc(78vh - 19.8rem)\"\r\n                                         styleClass=\"p-datatable-sm\">\r\n                                                <ng-template pTemplate=\"header\" let-columns>\r\n                                                        <tr>\r\n                                                                <th style=\"text-align: center;\">S.No</th>\r\n                                                                <th style=\"text-align: center;\">Menu</th>\r\n                                                                <th style=\"text-align: center;\">Select All</th>\r\n                                                                <th style=\"text-align: center;\">Create / Modify</th>\r\n                                                                <th style=\"text-align: center;\">Display</th>\r\n                                                                <th style=\"text-align: center;\">Delete</th>\r\n                                                        </tr>\r\n                                                </ng-template>\r\n                                                <ng-template pTemplate=\"body\" let-menu let-i=\"rowIndex\">\r\n                                                        <tr>\r\n                                                                <td style=\"text-align: center;\">{{ i + 1 }}</td>\r\n                                                                <td style=\"text-align: center;\">{{ menu.subMenuName }}</td>\r\n                                                                <td style=\"text-align: center;\">\r\n                                                                        <p-checkbox \r\n                                                                                [binary]=\"true\" \r\n                                                                                [ngModel]=\"menu.createUpdate && menu.view && menu.delete\"\r\n                                                                                (onChange)=\"onChange(menu, $event)\"></p-checkbox>\r\n                                                                </td>\r\n                                                                <td style=\"text-align: center;\">\r\n                                                                        <p-checkbox \r\n                                                                                [binary]=\"true\" \r\n                                                                                [(ngModel)]=\"menu.createUpdate\"></p-checkbox>\r\n                                                                </td>\r\n                                                                <td style=\"text-align: center;\">\r\n                                                                        <p-checkbox \r\n                                                                                [binary]=\"true\" \r\n                                                                                [(ngModel)]=\"menu.view\"></p-checkbox>\r\n                                                                </td>\r\n                                                                <td style=\"text-align: center;\">\r\n                                                                        <p-checkbox \r\n                                                                                [binary]=\"true\" \r\n                                                                                [(ngModel)]=\"menu.delete\"></p-checkbox>\r\n                                                                </td>\r\n                                                        </tr>\r\n                                                </ng-template>\r\n                                        </p-table>\r\n                                    </div>\r\n                                </mat-tab>\r\n                            </mat-tab-group>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel> -->\r\n                <p-stepperPanel *ngIf=\"this.pageToken.pageflow != 'New'\">\r\n                    <ng-template pTemplate=\"header\" let-onClick=\"onClick\" let-index=\"index\">\r\n                        <div class=\"d-flex flex-column align-items-center\">\r\n                            <p class=\"circle mb-0\" [ngClass]=\"active == 2 ? 'borderCircle' : 'disable text-muted'\">2</p>\r\n                        </div>\r\n                        <div>\r\n                            <p class=\"mb-0 mt-2 f600\" [ngClass]=\"active == 2 ? 'textBlack f600' : 'text-muted' \">Admin\r\n                            </p>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"content\" let-prevCallback=\"prevCallback\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created By</p>\r\n                                <input type=\"text\" formControlName=\"createdBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Created On</p>\r\n                                <input type=\"text\" formControlName=\"createdOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated By</p>\r\n                                <input type=\"text\" formControlName=\"updatedBy\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                            <div class=\"col-6 marginFieldNew borderRadius12\">\r\n                                <p class=\"formControlLabel f600 textBlack mb-0\">Updated On</p>\r\n                                <input type=\"text\" formControlName=\"updatedOn\" class=\" w-100\" pInputText\r\n                                    placeholder=\"Enter\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex mt-1 justify-content-end\" style=\"position: absolute; right: 5%; bottom: 5%;\">\r\n                            <button class=\"buttom1 textBlack mx-1\" (click)=\"prevCallback.emit()\">Back</button>\r\n                            <button\r\n                                class=\"buttom1 bgBlack text-white mx-1\" (click)=\"save()\">{{this.pageToken.pageflow !=\r\n                                \"New\" ? \"Update\" : \"Save\" }}</button>\r\n                        </div>\r\n                    </ng-template>\r\n                </p-stepperPanel>\r\n            </p-stepper>\r\n    </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { LanguageNewComponent } from './language/language-new/language-new.component';\r\nimport { ConsignmentTypeComponent } from './consignment-type/consignment-type.component';\r\nimport { ConsignmentTypeNewComponent } from './consignment-type/consignment-type-new/consignment-type-new.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MenuNewComponent } from './menu/menu-new/menu-new.component';\r\nimport { StatusNewComponent } from './status/status-new/status-new.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { CurrencyNewComponent } from './currency/currency-new/currency-new.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { CompanyNewComponent } from './company/company-new/company-new.component';\r\nimport { SubProductComponent } from './sub-product/sub-product.component';\r\nimport { SubProductNewComponent } from './sub-product/sub-product-new/sub-product-new.component';\r\nimport { LoadTypeComponent } from './load-type/load-type.component';\r\nimport { LoadTypeNewComponent } from './load-type/load-type-new/load-type-new.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { ServiceTypeNewComponent } from './service-type/service-type-new/service-type-new.component';\r\nimport { ModuleComponent } from './module/module.component';\r\nimport { ModuleNewComponent } from './module/module-new/module-new.component';\r\nimport { ProvinceComponent } from './province/province.component';\r\nimport { ProvinceNewComponent } from './province/province-new/province-new.component';\r\nimport { DistrictComponent } from './district/district.component';\r\nimport { DistrictNewComponent } from './district/district-new/district-new.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { CityNewComponent } from './city/city-new/city-new.component';\r\nimport { ConsignorNewComponent } from '../master/consignor/consignor-new/consignor-new.component';\r\nimport { ConsignorComponent } from '../master/consignor/consignor.component';\r\nimport { CustomerNewComponent } from '../master/customer/customer-new/customer-new.component';\r\nimport { CustomerComponent } from '../master/customer/customer.component';\r\nimport { ProductNewComponent } from './product/product-new/product-new.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { HsCodeNewComponent } from '../master/hs-code/hs-code-new/hs-code-new.component';\r\nimport { HsCodeComponent } from '../master/hs-code/hs-code.component';\r\nimport { NumberrangeNewComponent } from '../master/numberrange/numberrange-new/numberrange-new.component';\r\nimport { NumberrangeComponent } from '../master/numberrange/numberrange.component';\r\nimport { OpstatusNewComponent } from '../master/opstatus/opstatus-new/opstatus-new.component';\r\nimport { OpstatusComponent } from '../master/opstatus/opstatus.component';\r\nimport { SpecialApprovalComponent } from '../master/special-approval/special-approval.component';\r\nimport { SpecialApprovalNewComponent } from '../master/special-approval/special-approval-new/special-approval-new.component';\r\nimport { CountryNewComponent } from './country/country-new/country-new.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { EventNewComponent } from '../master/event/event-new/event-new.component';\r\nimport { EventComponent } from '../master/event/event.component';\r\nimport { NotificationNewComponent } from './notification/notification-new/notification-new.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { CurrencyExchangeRateComponent } from '../master/currency-exchange-rate/currency-exchange-rate.component';\r\nimport { CurrencyExchangeRateNewComponent } from '../master/currency-exchange-rate/currency-exchange-rate-new/currency-exchange-rate-new.component';\r\nimport { IataNewComponent } from '../master/iata/iata-new/iata-new.component';\r\nimport { IataComponent } from '../master/iata/iata.component';\r\nimport { UsersNewComponent } from './users/users-new/users-new.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RateParameterNewComponent } from './rate-parameter/rate-parameter-new/rate-parameter-new.component';\r\nimport { RateParameterComponent } from './rate-parameter/rate-parameter.component';\r\nimport { UserRoleComponent } from './user-role/user-role.component';\r\nimport { UserRoleNewComponent } from './user-role/user-role-new/user-role-new.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'company', component: CompanyComponent, data: { title: 'Setup', module: 'Company' } },\r\n  { path: 'company-new/:code', component: CompanyNewComponent, data: { title: 'Setup', module: 'Company - Add New' } },\r\n\r\n  { path: 'language', component: LanguageComponent, data: { title: 'Setup', module: 'Language' } },\r\n  { path: 'language-new/:code', component: LanguageNewComponent, data: { title: 'Setup', module: 'Language - Add New' } },\r\n\r\n  { path: 'consignmentType', component: ConsignmentTypeComponent, data: { title: 'Setup', module: 'ConsignmentType' } },\r\n  { path: 'consignmentType-new/:code', component: ConsignmentTypeNewComponent, data: { title: 'Setup', module: 'ConsignmentType - Add New' } },\r\n\r\n  { path: 'serviceType', component: ServiceTypeComponent, data: { title: 'Setup', module: 'ServiceType' } },\r\n  { path: 'serviceType-new/:code', component: ServiceTypeNewComponent, data: { title: 'Setup', module: 'ServiceType - Add New' } },\r\n\r\n  { path: 'menu', component: MenuComponent, data: { title: 'Setup', module: 'Menu' } },\r\n  { path: 'menu-new/:code', component: MenuNewComponent, data: { title: 'Setup', module: 'Menu - Add New' } },\r\n\r\n  { path: 'status', component: StatusComponent, data: { title: 'Setup', module: 'Status' } },\r\n  { path: 'status-new/:code', component: StatusNewComponent, data: { title: 'Setup', module: 'Status - Add New' } },\r\n\r\n  { path: 'currency', component: CurrencyComponent, data: { title: 'Setup', module: 'Currency' } },\r\n  { path: 'currency-new/:code', component: CurrencyNewComponent, data: { title: 'Setup', module: 'Currency - Add New' } },\r\n\r\n  { path: 'loadType', component: LoadTypeComponent, data: { title: 'Setup', module: 'LoadType' } },\r\n  { path: 'loadType-new/:code', component: LoadTypeNewComponent, data: { title: 'Setup', module: 'LoadType - Add New' } },\r\n\r\n  { path: 'subProduct', component: SubProductComponent, data: { title: 'Setup', module: 'Sub Product' } },\r\n  { path: 'subProduct-new/:code', component: SubProductNewComponent, data: { title: 'Setup', module: 'Sub Product - Add New' } },\r\n\r\n  { path: 'module', component: ModuleComponent, data: { title: 'Setup', module: 'Module' } },\r\n  { path: 'module-new/:code', component: ModuleNewComponent, data: { title: 'Setup', module: 'Module - Add New' } },\r\n\r\n  { path: 'province', component: ProvinceComponent, data: { title: 'Setup', module: 'Province' } },\r\n  { path: 'province-new/:code', component: ProvinceNewComponent, data: { title: 'Setup', module: 'Province - Add New' } },\r\n\r\n  { path: 'district', component: DistrictComponent, data: { title: 'Setup', module: 'District' } },\r\n  { path: 'district-new/:code', component: DistrictNewComponent, data: { title: 'Setup', module: 'District - Add New' } },\r\n\r\n  { path: 'city', component: CityComponent, data: { title: 'Setup', module: 'City' } },\r\n  { path: 'city-new/:code', component: CityNewComponent, data: { title: 'Setup', module: 'City - Add New' } },\r\n\r\n  { path: 'product', component: ProductComponent, data: { title: 'Setup', module: 'Product' } },\r\n  { path: 'product-new/:code', component: ProductNewComponent, data: { title: 'Setup', module: 'Product - Add New' } },\r\n  { path: 'country', component: CountryComponent, data: { title: 'Setup', module: 'Country' } },\r\n  { path: 'country-new/:code', component: CountryNewComponent, data: { title: 'Setup', module: 'Country - Add New' } },\r\n\r\n  { path: 'notification', component: NotificationComponent, data: { title: 'Setup', module: 'Notification' } },\r\n  { path: 'notification-new/:code', component: NotificationNewComponent, data: { title: 'Setup', module: 'Notification - Add New' } },\r\n  { path: 'users', component: UsersComponent, data: { title: 'Master', module: 'Users' } },\r\n  { path: 'users-new/:code', component: UsersNewComponent, data: { title: 'Master', module: 'Users - Add New' } },\r\n\r\n  { path: 'rateParameter', component: RateParameterComponent, data: { title: 'Setup', module: 'Rate Parameter' } },\r\n  { path: 'rateParameter-new/:code', component: RateParameterNewComponent, data: { title: 'Setup', module: 'Rate Parameter - Add New' } },\r\n\r\n  { path: 'userrole', component: UserRoleComponent, data: { title: 'Master', module: 'UserRole' } },\r\n  { path: 'userrole-new/:code', component: UserRoleNewComponent, data: { title: 'Master', module: 'UserRole - Add New' } },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IdMastersRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IdMastersRoutingModule } from './id-masters-routing.module';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LanguageComponent } from './language/language.component';\r\nimport { LanguageNewComponent } from './language/language-new/language-new.component';\r\nimport { ConsignmentTypeComponent } from './consignment-type/consignment-type.component';\r\nimport { ConsignmentTypeNewComponent } from './consignment-type/consignment-type-new/consignment-type-new.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MenuNewComponent } from './menu/menu-new/menu-new.component';\r\nimport { CurrencyComponent } from './currency/currency.component';\r\nimport { StatusComponent } from './status/status.component';\r\nimport { StatusNewComponent } from './status/status-new/status-new.component';\r\nimport { CurrencyNewComponent } from './currency/currency-new/currency-new.component';\r\nimport { CompanyNewComponent } from './company/company-new/company-new.component';\r\nimport { SubProductComponent } from './sub-product/sub-product.component';\r\nimport { SubProductNewComponent } from './sub-product/sub-product-new/sub-product-new.component';\r\nimport { ServiceTypeComponent } from './service-type/service-type.component';\r\nimport { LoadTypeComponent } from './load-type/load-type.component';\r\nimport { ServiceTypeNewComponent } from './service-type/service-type-new/service-type-new.component';\r\nimport { LoadTypeNewComponent } from './load-type/load-type-new/load-type-new.component';\r\nimport { ModuleComponent } from './module/module.component';\r\nimport { ModuleNewComponent } from './module/module-new/module-new.component';\r\nimport { UserRoleComponent } from './user-role/user-role.component';\r\nimport { ProvinceComponent } from './province/province.component';\r\nimport { ProvinceNewComponent } from './province/province-new/province-new.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { DistrictComponent } from './district/district.component';\r\nimport { CityNewComponent } from './city/city-new/city-new.component';\r\nimport { DistrictNewComponent } from './district/district-new/district-new.component';\r\nimport { ConsignorComponent } from '../master/consignor/consignor.component';\r\nimport { ConsignorNewComponent } from '../master/consignor/consignor-new/consignor-new.component';\r\nimport { CustomerComponent } from '../master/customer/customer.component';\r\nimport { CustomerNewComponent } from '../master/customer/customer-new/customer-new.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductNewComponent } from './product/product-new/product-new.component';\r\nimport { HsCodeComponent } from '../master/hs-code/hs-code.component';\r\nimport { HsCodeNewComponent } from '../master/hs-code/hs-code-new/hs-code-new.component';\r\nimport { OpstatusComponent } from '../master/opstatus/opstatus.component';\r\nimport { OpstatusNewComponent } from '../master/opstatus/opstatus-new/opstatus-new.component';\r\nimport { NumberrangeComponent } from '../master/numberrange/numberrange.component';\r\nimport { NumberrangeNewComponent } from '../master/numberrange/numberrange-new/numberrange-new.component';\r\nimport { SpecialApprovalComponent } from '../master/special-approval/special-approval.component';\r\nimport { SpecialApprovalNewComponent } from '../master/special-approval/special-approval-new/special-approval-new.component';\r\nimport { EventComponent } from '../master/event/event.component';\r\nimport { EventNewComponent } from '../master/event/event-new/event-new.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { NotificationNewComponent } from './notification/notification-new/notification-new.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { CountryNewComponent } from './country/country-new/country-new.component';\r\nimport { CurrencyExchangeRateComponent } from '../master/currency-exchange-rate/currency-exchange-rate.component';\r\nimport { CurrencyExchangeRateNewComponent } from '../master/currency-exchange-rate/currency-exchange-rate-new/currency-exchange-rate-new.component';\r\nimport { IataComponent } from '../master/iata/iata.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { IataNewComponent } from '../master/iata/iata-new/iata-new.component';\r\nimport { UsersNewComponent } from './users/users-new/users-new.component';\r\nimport { RateParameterComponent } from './rate-parameter/rate-parameter.component';\r\nimport { RateParameterNewComponent } from './rate-parameter/rate-parameter-new/rate-parameter-new.component';\r\nimport { UserRoleNewComponent } from './user-role/user-role-new/user-role-new.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CompanyComponent,\r\n    LanguageComponent,\r\n    LanguageNewComponent,\r\n    ConsignmentTypeComponent,\r\n    ConsignmentTypeNewComponent,\r\n    MenuComponent,\r\n    MenuNewComponent,\r\n    CurrencyComponent,\r\n    StatusComponent,\r\n    StatusNewComponent,\r\n    CurrencyNewComponent,\r\n    CompanyNewComponent,\r\n    SubProductComponent,\r\n    SubProductNewComponent,\r\n    ServiceTypeComponent,\r\n    LoadTypeComponent,\r\n    ServiceTypeNewComponent,\r\n    LoadTypeNewComponent,\r\n    ModuleComponent,\r\n    ModuleNewComponent,\r\n    UserRoleComponent,\r\n    ProvinceComponent,\r\n    ProvinceNewComponent,\r\n    CityComponent,\r\n    DistrictComponent,\r\n    CityNewComponent,\r\n    DistrictNewComponent,\r\n    ProductComponent,\r\n    ProductNewComponent,\r\n   \r\n    NotificationComponent,\r\n    NotificationNewComponent,\r\n    CountryComponent,\r\n    CountryNewComponent,\r\n   \r\n    UsersComponent,\r\n    UsersNewComponent,\r\n    RateParameterComponent,\r\n    RateParameterNewComponent,\r\n    UserRoleNewComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    IdMastersRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class IdMastersModule { }\r\n"],
  "mappings": "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",
  "names": ["_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0", "_c0"]
}
