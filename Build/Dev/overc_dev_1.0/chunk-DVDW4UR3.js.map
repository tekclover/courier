{
  "version": 3,
  "sources": ["src/app/main/id-masters/province/province.service.ts", "src/app/main/id-masters/city/city.service.ts", "src/app/main/id-masters/country/country.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvinceService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  Get() {\r\n\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/province', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/province/' + obj.provinceId + '?companyId=' + this.auth.companyId + '&countryId=' + obj.countryId + '&languageId=' + this.auth.languageId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/province/' + obj.provinceId + '?companyId=' + this.auth.companyId + '&countryId=' + obj.countryId + '&languageId=' + this.auth.languageId );\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/province/find', obj);\r\n  }\r\n\r\n}\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/Auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n  \r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(cityId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/city/' + cityId);\r\n  }\r\n \r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/city', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/city/'+ obj.cityId +'?languageId='+ this.auth.languageId \r\n      +'&companyId='+ this.auth.companyId + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId\r\n      +'&districtId='+obj.districtId, obj);\r\n  }\r\n\r\n  Delete(obj: any) {\r\n    return this.http.delete<any>('/overc-idmaster-service/city/' + obj.cityId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId\r\n      + '&countryId='+ obj.countryId + '&provinceId='+ obj.provinceId +'&districtId='+obj.districtId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/city/find', obj);\r\n  }\r\n}\r\n\r\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../../../core/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n\r\n  Get(countryId: string) {\r\n    return this.http.get<any>('/overc-idmaster-service/country/' + countryId);\r\n  }\r\n\r\n  Create(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/country', obj);\r\n  }\r\n\r\n  Update(obj: any) {\r\n    return this.http.patch<any>('/overc-idmaster-service/country/'+ obj.countryId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId, obj);\r\n  }\r\n\r\n  Delete(countryId: string) {\r\n    return this.http.delete<any>('/overc-idmaster-service/country/' + countryId +'?languageId='+ this.auth.languageId +'&companyId='+ this.auth.companyId);\r\n  }\r\n\r\n  search(obj: any) {\r\n    return this.http.post<any>('/overc-idmaster-service/country/find', obj);\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;AAOM,IAAO,mBAAP,MAAO,iBAAe;EAE1B,YAAoB,MAA0B,MAAiB;AAA3C,SAAA,OAAA;AAA0B,SAAA,OAAA;EAAqB;EAEnE,MAAG;EAEH;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,oCAAoC,GAAG;EACpE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,MAAW,sCAAsC,IAAI,aAAa,gBAAgB,KAAK,KAAK,YAAY,gBAAgB,IAAI,YAAY,iBAAiB,KAAK,KAAK,YAAY,GAAG;EACrM;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,OAAY,sCAAsC,IAAI,aAAa,gBAAgB,KAAK,KAAK,YAAY,gBAAgB,IAAI,YAAY,iBAAiB,KAAK,KAAK,UAAU;EACjM;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,yCAAyC,GAAG;EACzE;;;mBAtBW,kBAAe,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;AAAA;oFAAf,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;;ACAA,IAAO,eAAP,MAAO,aAAW;EAGtB,YAAoB,MAA0B,MAAiB;AAA3C,SAAA,OAAA;AAA0B,SAAA,OAAA;EAAqB;EAGnE,IAAI,QAAc;AAChB,WAAO,KAAK,KAAK,IAAS,kCAAkC,MAAM;EACpE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,gCAAgC,GAAG;EAChE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,MAAW,kCAAiC,IAAI,SAAQ,iBAAgB,KAAK,KAAK,aAChG,gBAAe,KAAK,KAAK,YAAY,gBAAe,IAAI,YAAY,iBAAgB,IAAI,aACxF,iBAAe,IAAI,YAAY,GAAG;EACvC;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,OAAY,kCAAkC,IAAI,SAAQ,iBAAgB,KAAK,KAAK,aAAY,gBAAe,KAAK,KAAK,YACtI,gBAAe,IAAI,YAAY,iBAAgB,IAAI,aAAY,iBAAe,IAAI,UAAU;EAClG;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,qCAAqC,GAAG;EACrE;;;mBA3BW,cAAW,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;AAAA;gFAAX,cAAW,SAAX,aAAW,WAAA,YAFV,OAAM,CAAA;AAEd,IAAO,cAAP;;;ACAA,IAAO,kBAAP,MAAO,gBAAc;EAEzB,YAAoB,MAA0B,MAAiB;AAA3C,SAAA,OAAA;AAA0B,SAAA,OAAA;EAAqB;EAGnE,IAAI,WAAiB;AACnB,WAAO,KAAK,KAAK,IAAS,qCAAqC,SAAS;EAC1E;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,mCAAmC,GAAG;EACnE;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,MAAW,qCAAoC,IAAI,YAAW,iBAAgB,KAAK,KAAK,aAAY,gBAAe,KAAK,KAAK,WAAW,GAAG;EAC9J;EAEA,OAAO,WAAiB;AACtB,WAAO,KAAK,KAAK,OAAY,qCAAqC,YAAW,iBAAgB,KAAK,KAAK,aAAY,gBAAe,KAAK,KAAK,SAAS;EACvJ;EAEA,OAAO,KAAQ;AACb,WAAO,KAAK,KAAK,KAAU,wCAAwC,GAAG;EACxE;;;mBAvBW,iBAAc,mBAAA,UAAA,GAAA,mBAAA,WAAA,CAAA;AAAA;mFAAd,iBAAc,SAAd,gBAAc,WAAA,YAFb,OAAM,CAAA;AAEd,IAAO,iBAAP;",
  "names": []
}
